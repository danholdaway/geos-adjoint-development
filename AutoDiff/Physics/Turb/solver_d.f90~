!        Generated by TAPENADE     (INRIA, Tropics team)
!  Tapenade 3.9 (r5096) - 24 Feb 2014 16:53
!
!  Differentiation of solver in forward (tangent) mode:
!   variations   of useful results: y
!   with respect to varying inputs: y
!   RW status of diff variables: y:in-out a:(loc) b:(loc)
SUBROUTINE SOLVER_D(im, jm, lm, a, b, c, y, yd)
  IMPLICIT NONE
  INTEGER, INTENT(IN) :: im, jm, lm
  REAL, DIMENSION(im, jm, lm), INTENT(IN) :: a, b, c
  REAL, DIMENSION(im, jm, lm), INTENT(INOUT) :: y
  REAL, DIMENSION(im, jm, lm), INTENT(INOUT) :: yd
  INTEGER :: i, j, l
!LU Decomposition
!----------------
  DO i=1,im
    DO j=1,jm
      b(i, j, 1) = 1./b(i, j, 1)
      DO l=2,lm
        a(i, j, l) = a(i, j, l)*b(i, j, l-1)
        b(i, j, l) = 1./(b(i, j, l)-c(i, j, l-1)*a(i, j, l))
      END DO
    END DO
  END DO
!Solver
!------
!Sweep down
  DO l=2,lm
    yd(:, :, l) = yd(:, :, l) - a(:, :, l)*yd(:, :, l-1)
  END DO
!Sweep up
  yd(:, :, lm) = b(:, :, lm-1)*yd(:, :, lm)/(b(:, :, lm-1)-a(:, :, lm)*(&
&   1.0+c(:, :, lm-1)*b(:, :, lm-1)))
  DO l=lm-1,1,-1
    yd(:, :, l) = b(:, :, l)*(yd(:, :, l)-c(:, :, l)*yd(:, :, l+1))
  END DO
END SUBROUTINE SOLVER_D

