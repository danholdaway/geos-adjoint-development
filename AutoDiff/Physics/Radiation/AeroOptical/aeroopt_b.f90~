!        Generated by TAPENADE     (INRIA, Tropics team)
!  Tapenade 3.9 (r5096) - 24 Feb 2014 16:53
!
!  Differentiation of aeroopt in reverse (adjoint) mode:
!   gradient     of useful results: ssaa_irt taua_sot ssaa_sot
!                asya_irt asya_sot taua_irt
!   with respect to varying inputs: ssaa_irt ssaa_ir_c taua_sot
!                taua_ir_c ssaa_sot ssaa_so_c asya_ir_c aerot taua_so_c
!                asya_irt ple asya_sot taua_irt
!   RW status of diff variables: ssaa_irt:in-zero ssaa_ir_c:out
!                taua_sot:in-zero taua_ir_c:out ssaa_sot:in-zero
!                ssaa_so_c:out asya_ir_c:out aerot:out taua_so_c:out
!                asya_irt:in-zero ple:out asya_sot:in-zero taua_irt:in-zero
SUBROUTINE AEROOPT_B(im, jm, lm, na, nbchou_ir, nbchou_so, aerot, aerotb&
& , ple, pleb, taua_ir_c, taua_ir_cb, ssaa_ir_c, ssaa_ir_cb, asya_ir_c, &
& asya_ir_cb, taua_irt, taua_irtb, ssaa_irt, ssaa_irtb, asya_irt, &
& asya_irtb, taua_so_c, taua_so_cb, ssaa_so_c, ssaa_so_cb, asya_so_c, &
& taua_sot, taua_sotb, ssaa_sot, ssaa_sotb, asya_sot, asya_sotb)
  IMPLICIT NONE
  INTEGER, INTENT(IN) :: im, jm, lm
  INTEGER, INTENT(IN) :: na, nbchou_ir, nbchou_so
  REAL, PARAMETER :: mapl_grav=9.81
!Inputs
  REAL, DIMENSION(im, jm, lm, na), INTENT(IN) :: aerot
  REAL, DIMENSION(im, jm, lm, na) :: aerotb
  REAL, DIMENSION(im, jm, 0:lm), INTENT(IN) :: ple
  REAL, DIMENSION(im, jm, 0:lm) :: pleb
  REAL, DIMENSION(im, jm, lm, nbchou_ir, na), INTENT(IN) :: taua_ir_c, &
& ssaa_ir_c, asya_ir_c
  REAL, DIMENSION(im, jm, lm, nbchou_ir, na) :: taua_ir_cb, ssaa_ir_cb, &
& asya_ir_cb
  REAL, DIMENSION(im, jm, lm, nbchou_so, na), INTENT(IN) :: taua_so_c, &
& ssaa_so_c, asya_so_c
  REAL, DIMENSION(im, jm, lm, nbchou_so, na) :: taua_so_cb, ssaa_so_cb
!Outputs
  REAL, DIMENSION(im, jm, lm, nbchou_ir) :: taua_irt, ssaa_irt, asya_irt
  REAL, DIMENSION(im, jm, lm, nbchou_ir) :: taua_irtb, ssaa_irtb, &
& asya_irtb
  REAL, DIMENSION(im, jm, lm, nbchou_so) :: taua_sot, ssaa_sot, asya_sot
  REAL, DIMENSION(im, jm, lm, nbchou_so) :: taua_sotb, ssaa_sotb, &
& asya_sotb
!Locals
  INTEGER :: i, j, l, ai
  REAL :: x
  REAL :: xb
  REAL, DIMENSION(im, jm, lm, na) :: saerot
  REAL, DIMENSION(im, jm, lm, na) :: saerotb
  REAL :: tempb5(im, jm, lm)
  REAL :: tempb4(im, jm, lm)
  REAL :: tempb3(im, jm, lm)
  REAL :: tempb2(im, jm, lm)
  REAL :: tempb1(im, jm, lm)
  REAL :: tempb0(im, jm, lm)
  REAL :: tempb
  DO l=1,lm
    DO j=1,jm
      DO i=1,im
        CALL PUSHREAL4(x)
        x = (ple(i, j, l)-ple(i, j, l-1))*0.01*(100./mapl_grav)
        DO ai=1,na
          saerot(i, j, l, ai) = x*aerot(i, j, l, ai)
        END DO
      END DO
    END DO
  END DO
  ssaa_so_cb = 0.0
  asya_ir_cb = 0.0
  taua_so_cb = 0.0
  saerotb = 0.0
  DO j=nbchou_so,1,-1
    DO l=na,1,-1
      tempb5 = ssaa_so_c(:, :, :, j, l)*ssaa_sotb(:, :, :, j)
      tempb3 = ssaa_so_c(:, :, :, j, l)*asya_ir_c(:, :, :, j, l)*&
&       asya_sotb(:, :, :, j)
      tempb4 = saerot(:, :, :, l)*taua_so_c(:, :, :, j, l)*asya_sotb(:, &
&       :, :, j)
      saerotb(:, :, :, l) = saerotb(:, :, :, l) + taua_so_c(:, :, :, j, &
&       l)*tempb5 + taua_so_c(:, :, :, j, l)*taua_sotb(:, :, :, j) + &
&       taua_so_c(:, :, :, j, l)*tempb3
      taua_so_cb(:, :, :, j, l) = taua_so_cb(:, :, :, j, l) + saerot(:, &
&       :, :, l)*tempb5 + saerot(:, :, :, l)*taua_sotb(:, :, :, j) + &
&       saerot(:, :, :, l)*tempb3
      ssaa_so_cb(:, :, :, j, l) = ssaa_so_cb(:, :, :, j, l) + saerot(:, &
&       :, :, l)*taua_so_c(:, :, :, j, l)*ssaa_sotb(:, :, :, j) + &
&       asya_ir_c(:, :, :, j, l)*tempb4
      asya_ir_cb(:, :, :, j, l) = asya_ir_cb(:, :, :, j, l) + ssaa_so_c(&
&       :, :, :, j, l)*tempb4
    END DO
  END DO
  ssaa_ir_cb = 0.0
  taua_ir_cb = 0.0
  DO j=nbchou_ir,1,-1
    DO l=na,1,-1
      tempb2 = ssaa_ir_c(:, :, :, j, l)*ssaa_irtb(:, :, :, j)
      tempb0 = ssaa_ir_c(:, :, :, j, l)*asya_ir_c(:, :, :, j, l)*&
&       asya_irtb(:, :, :, j)
      tempb1 = saerot(:, :, :, l)*taua_ir_c(:, :, :, j, l)*asya_irtb(:, &
&       :, :, j)
      saerotb(:, :, :, l) = saerotb(:, :, :, l) + taua_ir_c(:, :, :, j, &
&       l)*tempb2 + taua_ir_c(:, :, :, j, l)*taua_irtb(:, :, :, j) + &
&       taua_ir_c(:, :, :, j, l)*tempb0
      taua_ir_cb(:, :, :, j, l) = taua_ir_cb(:, :, :, j, l) + saerot(:, &
&       :, :, l)*tempb2 + saerot(:, :, :, l)*taua_irtb(:, :, :, j) + &
&       saerot(:, :, :, l)*tempb0
      ssaa_ir_cb(:, :, :, j, l) = ssaa_ir_cb(:, :, :, j, l) + saerot(:, &
&       :, :, l)*taua_ir_c(:, :, :, j, l)*ssaa_irtb(:, :, :, j) + &
&       asya_ir_c(:, :, :, j, l)*tempb1
      asya_ir_cb(:, :, :, j, l) = asya_ir_cb(:, :, :, j, l) + ssaa_ir_c(&
&       :, :, :, j, l)*tempb1
    END DO
  END DO
  aerotb = 0.0
  pleb = 0.0
  DO l=lm,1,-1
    DO j=jm,1,-1
      DO i=im,1,-1
        xb = 0.0
        DO ai=na,1,-1
          xb = xb + aerot(i, j, l, ai)*saerotb(i, j, l, ai)
          aerotb(i, j, l, ai) = aerotb(i, j, l, ai) + x*saerotb(i, j, l&
&           , ai)
          saerotb(i, j, l, ai) = 0.0
        END DO
        CALL POPREAL4(x)
        tempb = 100.*0.01*xb/mapl_grav
        pleb(i, j, l) = pleb(i, j, l) + tempb
        pleb(i, j, l-1) = pleb(i, j, l-1) - tempb
      END DO
    END DO
  END DO
  ssaa_irtb = 0.0
  taua_sotb = 0.0
  ssaa_sotb = 0.0
  asya_irtb = 0.0
  asya_sotb = 0.0
  taua_irtb = 0.0
END SUBROUTINE AEROOPT_B

