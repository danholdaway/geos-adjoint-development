!        Generated by TAPENADE     (INRIA, Tropics team)
!  Tapenade 3.9 (r5096) - 24 Feb 2014 16:53
!
!  Differentiation of aeroopt in forward (tangent) mode:
!   variations   of useful results: ssaa_irt taua_sot ssaa_sot
!                asya_irt asya_sot taua_irt
!   with respect to varying inputs: ssaa_ir_c taua_ir_c ssaa_so_c
!                asya_ir_c aerot taua_so_c ple
!   RW status of diff variables: ssaa_irt:out ssaa_ir_c:in taua_sot:out
!                taua_ir_c:in ssaa_sot:out ssaa_so_c:in asya_ir_c:in
!                aerot:in taua_so_c:in asya_irt:out ple:in asya_sot:out
!                taua_irt:out
SUBROUTINE AEROOPT_D(im, jm, lm, na, nbchou_ir, nbchou_so, aerot, aerotd&
& , ple, pled, taua_ir_c, taua_ir_cd, ssaa_ir_c, ssaa_ir_cd, asya_ir_c, &
& asya_ir_cd, taua_irt, taua_irtd, ssaa_irt, ssaa_irtd, asya_irt, &
& asya_irtd, taua_so_c, taua_so_cd, ssaa_so_c, ssaa_so_cd, asya_so_c, &
& taua_sot, taua_sotd, ssaa_sot, ssaa_sotd, asya_sot, asya_sotd)
  IMPLICIT NONE
  INTEGER, INTENT(IN) :: im, jm, lm
  INTEGER, INTENT(IN) :: na, nbchou_ir, nbchou_so
  REAL, PARAMETER :: mapl_grav=9.81
!Inputs
  REAL, DIMENSION(im, jm, lm, na), INTENT(IN) :: aerot
  REAL, DIMENSION(im, jm, lm, na), INTENT(IN) :: aerotd
  REAL, DIMENSION(im, jm, 0:lm), INTENT(IN) :: ple
  REAL, DIMENSION(im, jm, 0:lm), INTENT(IN) :: pled
  REAL, DIMENSION(im, jm, lm, nbchou_ir, na), INTENT(IN) :: taua_ir_c, &
& ssaa_ir_c, asya_ir_c
  REAL, DIMENSION(im, jm, lm, nbchou_ir, na), INTENT(IN) :: taua_ir_cd, &
& ssaa_ir_cd, asya_ir_cd
  REAL, DIMENSION(im, jm, lm, nbchou_so, na), INTENT(IN) :: taua_so_c, &
& ssaa_so_c, asya_so_c
  REAL, DIMENSION(im, jm, lm, nbchou_so, na), INTENT(IN) :: taua_so_cd, &
& ssaa_so_cd
!Outputs
  REAL, DIMENSION(im, jm, lm, nbchou_ir), INTENT(OUT) :: taua_irt, &
& ssaa_irt, asya_irt
  REAL, DIMENSION(im, jm, lm, nbchou_ir), INTENT(OUT) :: taua_irtd, &
& ssaa_irtd, asya_irtd
  REAL, DIMENSION(im, jm, lm, nbchou_so), INTENT(OUT) :: taua_sot, &
& ssaa_sot, asya_sot
  REAL, DIMENSION(im, jm, lm, nbchou_so), INTENT(OUT) :: taua_sotd, &
& ssaa_sotd, asya_sotd
!Locals
  INTEGER :: i, j, l, ai
  REAL :: x
  REAL :: xd
  REAL, DIMENSION(im, jm, lm, na) :: saerot
  REAL, DIMENSION(im, jm, lm, na) :: saerotd
  saerotd = 0.0
  DO l=1,lm
    DO j=1,jm
      DO i=1,im
        xd = 0.01*100.*(pled(i, j, l)-pled(i, j, l-1))/mapl_grav
        x = (ple(i, j, l)-ple(i, j, l-1))*0.01*(100./mapl_grav)
        DO ai=1,na
          saerotd(i, j, l, ai) = xd*aerot(i, j, l, ai) + x*aerotd(i, j, &
&           l, ai)
          saerot(i, j, l, ai) = x*aerot(i, j, l, ai)
        END DO
      END DO
    END DO
  END DO
!Compute aerosol optical properties for IR
  taua_irt = 0.0
  ssaa_irt = 0.0
  asya_irt = 0.0
  ssaa_irtd = 0.0
  asya_irtd = 0.0
  taua_irtd = 0.0
  DO j=1,nbchou_ir
    DO l=1,na
      taua_irtd(:, :, :, j) = taua_irtd(:, :, :, j) + saerotd(:, :, :, l&
&       )*taua_ir_c(:, :, :, j, l) + saerot(:, :, :, l)*taua_ir_cd(:, :&
&       , :, j, l)
      taua_irt(:, :, :, j) = taua_irt(:, :, :, j) + saerot(:, :, :, l)*&
&       taua_ir_c(:, :, :, j, l)
      ssaa_irtd(:, :, :, j) = ssaa_irtd(:, :, :, j) + (saerotd(:, :, :, &
&       l)*taua_ir_c(:, :, :, j, l)+saerot(:, :, :, l)*taua_ir_cd(:, :, &
&       :, j, l))*ssaa_ir_c(:, :, :, j, l) + saerot(:, :, :, l)*&
&       taua_ir_c(:, :, :, j, l)*ssaa_ir_cd(:, :, :, j, l)
      ssaa_irt(:, :, :, j) = ssaa_irt(:, :, :, j) + saerot(:, :, :, l)*&
&       taua_ir_c(:, :, :, j, l)*ssaa_ir_c(:, :, :, j, l)
      asya_irtd(:, :, :, j) = asya_irtd(:, :, :, j) + (saerotd(:, :, :, &
&       l)*taua_ir_c(:, :, :, j, l)+saerot(:, :, :, l)*taua_ir_cd(:, :, &
&       :, j, l))*ssaa_ir_c(:, :, :, j, l)*asya_ir_c(:, :, :, j, l) + &
&       saerot(:, :, :, l)*taua_ir_c(:, :, :, j, l)*(ssaa_ir_cd(:, :, :&
&       , j, l)*asya_ir_c(:, :, :, j, l)+ssaa_ir_c(:, :, :, j, l)*&
&       asya_ir_cd(:, :, :, j, l))
      asya_irt(:, :, :, j) = asya_irt(:, :, :, j) + saerot(:, :, :, l)*&
&       taua_ir_c(:, :, :, j, l)*ssaa_ir_c(:, :, :, j, l)*asya_ir_c(:, :&
&       , :, j, l)
    END DO
  END DO
!Compute aerosol optical properties for SO
  taua_sot = 0.0
  ssaa_sot = 0.0
  asya_sot = 0.0
  taua_sotd = 0.0
  ssaa_sotd = 0.0
  asya_sotd = 0.0
  DO j=1,nbchou_so
    DO l=1,na
      taua_sotd(:, :, :, j) = taua_sotd(:, :, :, j) + saerotd(:, :, :, l&
&       )*taua_so_c(:, :, :, j, l) + saerot(:, :, :, l)*taua_so_cd(:, :&
&       , :, j, l)
      taua_sot(:, :, :, j) = taua_sot(:, :, :, j) + saerot(:, :, :, l)*&
&       taua_so_c(:, :, :, j, l)
      ssaa_sotd(:, :, :, j) = ssaa_sotd(:, :, :, j) + (saerotd(:, :, :, &
&       l)*taua_so_c(:, :, :, j, l)+saerot(:, :, :, l)*taua_so_cd(:, :, &
&       :, j, l))*ssaa_so_c(:, :, :, j, l) + saerot(:, :, :, l)*&
&       taua_so_c(:, :, :, j, l)*ssaa_so_cd(:, :, :, j, l)
      ssaa_sot(:, :, :, j) = ssaa_sot(:, :, :, j) + saerot(:, :, :, l)*&
&       taua_so_c(:, :, :, j, l)*ssaa_so_c(:, :, :, j, l)
      asya_sotd(:, :, :, j) = asya_sotd(:, :, :, j) + (saerotd(:, :, :, &
&       l)*taua_so_c(:, :, :, j, l)+saerot(:, :, :, l)*taua_so_cd(:, :, &
&       :, j, l))*ssaa_so_c(:, :, :, j, l)*asya_ir_c(:, :, :, j, l) + &
&       saerot(:, :, :, l)*taua_so_c(:, :, :, j, l)*(ssaa_so_cd(:, :, :&
&       , j, l)*asya_ir_c(:, :, :, j, l)+ssaa_so_c(:, :, :, j, l)*&
&       asya_ir_cd(:, :, :, j, l))
      asya_sot(:, :, :, j) = asya_sot(:, :, :, j) + saerot(:, :, :, l)*&
&       taua_so_c(:, :, :, j, l)*ssaa_so_c(:, :, :, j, l)*asya_ir_c(:, :&
&       , :, j, l)
    END DO
  END DO
END SUBROUTINE AEROOPT_D

