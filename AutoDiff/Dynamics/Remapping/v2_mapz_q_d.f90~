!        Generated by TAPENADE     (INRIA, Tropics team)
!  Tapenade 3.9 (r5096) - 24 Feb 2014 16:53
!
!  Differentiation of v2_mapz_q in forward (tangent) mode:
!   variations   of useful results: q2
!   with respect to varying inputs: pe1 pe2 dp1 q2 q4
!   RW status of diff variables: pe1:in pe2:in dp1:in q2:in-out
!                q4:in
SUBROUTINE V2_MAPZ_Q_D(i1, i2, km, kn, pe1, pe1d, pe2, pe2d, dp1, dp1d, &
& q4, q4d, q2, q2d)
  IMPLICIT NONE
!Inputs
  INTEGER, INTENT(IN) :: i1, i2, km, kn
  REAL, INTENT(IN) :: pe1(i1:i2, km+1), pe2(i1:i2, kn+1)
  REAL, INTENT(IN) :: pe1d(i1:i2, km+1), pe2d(i1:i2, kn+1)
  REAL, INTENT(IN) :: dp1(i1:i2, km)
  REAL, INTENT(IN) :: dp1d(i1:i2, km)
  REAL, INTENT(IN) :: q4(4, i1:i2, km)
  REAL, INTENT(IN) :: q4d(4, i1:i2, km)
!Outputs
  REAL, INTENT(INOUT) :: q2(i1:i2, kn)
  REAL, INTENT(INOUT) :: q2d(i1:i2, kn)
!Locals
  INTEGER :: k0, k, i, l, m
  REAL :: pl, pr, qsum, dp, esl
  REAL :: pld, prd, qsumd, dpd, esld
  REAL, PARAMETER :: r3=1./3., r23=2./3.
  EXTERNAL DP2
  REAL :: DP2
  REAL :: result1
  qsumd = 0.0
! Mapping
  DO i=i1,i2
    k0 = 1
    DO 555 k=1,kn
      DO l=k0,km
! locate the top edge: pe2(i,k)
        IF (pe2(i, k) .GE. pe1(i, l) .AND. pe2(i, k) .LE. pe1(i, l+1)) &
&         GOTO 110
      END DO
      GOTO 123
 110  pld = ((pe2d(i, k)-pe1d(i, l))*dp1(i, l)-(pe2(i, k)-pe1(i, l))*&
&       dp1d(i, l))/dp1(i, l)**2
      pl = (pe2(i, k)-pe1(i, l))/dp1(i, l)
      IF (pe2(i, k+1) .LE. pe1(i, l+1)) THEN
! entire new grid is within the original grid
        prd = ((pe2d(i, k+1)-pe1d(i, l))*dp1(i, l)-(pe2(i, k+1)-pe1(i, l&
&         ))*dp1d(i, l))/dp1(i, l)**2
        pr = (pe2(i, k+1)-pe1(i, l))/dp1(i, l)
        q2d(i, k) = q4d(2, i, l) + 0.5*((q4d(4, i, l)+q4d(3, i, l)-q4d(2&
&         , i, l))*(pr+pl)+(q4(4, i, l)+q4(3, i, l)-q4(2, i, l))*(prd+&
&         pld)) - r3*(q4d(4, i, l)*(pr*(pr+pl)+pl**2)+q4(4, i, l)*(prd*(&
&         pr+pl)+pr*(prd+pld)+2*pl*pld))
        q2(i, k) = q4(2, i, l) + 0.5*(q4(4, i, l)+q4(3, i, l)-q4(2, i, l&
&         ))*(pr+pl) - q4(4, i, l)*r3*(pr*(pr+pl)+pl**2)
        k0 = l
        GOTO 555
      ELSE
! Fractional area...
        qsumd = (pe1d(i, l+1)-pe2d(i, k))*(q4(2, i, l)+0.5*(q4(4, i, l)+&
&         q4(3, i, l)-q4(2, i, l))*(1.+pl)-q4(4, i, l)*(r3*(1.+pl*(1.+pl&
&         )))) + (pe1(i, l+1)-pe2(i, k))*(q4d(2, i, l)+0.5*((q4d(4, i, l&
&         )+q4d(3, i, l)-q4d(2, i, l))*(1.+pl)+(q4(4, i, l)+q4(3, i, l)-&
&         q4(2, i, l))*pld)-r3*(q4d(4, i, l)*(1.+pl*(1.+pl))+q4(4, i, l)&
&         *(pld*(1.+pl)+pl*pld)))
        qsum = (pe1(i, l+1)-pe2(i, k))*(q4(2, i, l)+0.5*(q4(4, i, l)+q4(&
&         3, i, l)-q4(2, i, l))*(1.+pl)-q4(4, i, l)*(r3*(1.+pl*(1.+pl)))&
&         )
        DO m=l+1,km
! locate the bottom edge: pe2(i,k+1)
          IF (pe2(i, k+1) .GT. pe1(i, m+1)) THEN
! Whole layer..
            qsumd = qsumd + dp1d(i, m)*q4(1, i, m) + dp1(i, m)*q4d(1, i&
&             , m)
            qsum = qsum + dp1(i, m)*q4(1, i, m)
          ELSE
            GOTO 120
          END IF
        END DO
        GOTO 123
 120    dpd = pe2d(i, k+1) - pe1d(i, m)
        dp = pe2(i, k+1) - pe1(i, m)
        esld = (dpd*dp1(i, m)-dp*dp1d(i, m))/dp1(i, m)**2
        esl = dp/dp1(i, m)
        qsumd = qsumd + dpd*(q4(2, i, m)+0.5*esl*(q4(3, i, m)-q4(2, i, m&
&         )+q4(4, i, m)*(1.-r23*esl))) + dp*(q4d(2, i, m)+0.5*(esld*(q4(&
&         3, i, m)-q4(2, i, m)+q4(4, i, m)*(1.-r23*esl))+esl*(q4d(3, i, &
&         m)-q4d(2, i, m)+q4d(4, i, m)*(1.-r23*esl)-q4(4, i, m)*r23*esld&
&         )))
        qsum = qsum + dp*(q4(2, i, m)+0.5*esl*(q4(3, i, m)-q4(2, i, m)+&
&         q4(4, i, m)*(1.-r23*esl)))
        k0 = m
      END IF
 123  result1 = DP2(i, k)
      q2d(i, k) = qsumd/result1
      q2(i, k) = qsum/result1
 555 CONTINUE
  END DO
END SUBROUTINE V2_MAPZ_Q_D

