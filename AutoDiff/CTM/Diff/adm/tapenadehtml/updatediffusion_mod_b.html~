<title>Generated by TAPENADE</title>
<link type="text/CSS" rel="stylesheet" href="tapenade.css">
<link type="text/CSS" rel="stylesheet" href="fortranStyle.css">
<body>
<pre><code class="comment">!        Generated by TAPENADE     (INRIA, Ecuador team)</code>
<code class="comment">!  Tapenade 3.12 (r6213) - 13 Oct 2016 10:30</code>
<code class="comment">!</code>
<code class="comment">!-------------------------------------------------------------------------</code>
<code class="comment">!         NASA/GSFC, Software Systems Support Office, Code 610.3         !</code>
<code class="comment">!-------------------------------------------------------------------------</code>
<code class="comment">!BOP</code>
<code class="comment">!</code>
<code class="comment">! !MODULE: updateDiffusion_mod</code>
<code class="comment">!</code>
<code class="comment">! !INTERFACE:</code>
<code class="comment">!</code>
<code class="comment">!#include "MAPL_Generic.h"</code>
<code class="comment">!</code>
<code class="keyword">MODULE </code><code class="funcname">UPDATEDIFFUSION_MOD_B</code>
<code class="comment">!</code>
<code class="comment">! !USES:</code>
  <code class="keyword">USE </code><code class="funcname">ESMF</code>
<code class="comment">!      use MAPL_Mod</code>
  <code class="keyword">USE </code><code class="funcname">GMIARRAYBUNDLEPOINTER_MOD_B</code>, <code class="keyword">ONLY </code>: t_gmiarraybundle, <code class="label">&</code>
<code class="label">& </code>t_gmiarraybundle_b
  <code class="keyword">IMPLICIT NONE</code>
<code class="comment">!EOC</code>
<code class="comment">!------------------------------------------------------------------------------</code>
<code class="comment">!</code>
<code class="comment">! !PUBLIC MEMBER FUNCTIONS:</code>
  PRIVATE 
  PUBLIC updatediffusion
  PUBLIC updatediffusion_adm
  PUBLIC update_pbl_mixing
<a name="updatediffusion_adm"></a>
<code class="keyword">CONTAINS</code>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!  Differentiation of updatediffusion in reverse (adjoint) mode:</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!   gradient     of useful results: vert_diffu_coef kzz press3c</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!                pctm1 press3e *(concentration.parray3d) pbl tdt</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!   with respect to varying inputs: vert_diffu_coef kzz press3c</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!                pctm1 press3e *(concentration.parray3d) pbl tdt</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!   RW status of diff variables: vert_diffu_coef:incr kzz:in-out</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!                press3c:incr pctm1:incr press3e:incr *(concentration.parray3d):in-out</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!                pbl:incr tdt:incr</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!   Plus diff mem management of: concentration.parray3d:in</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! !DESCRIPTION:</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! !AUTHOR:</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! !REVISION HISTORY:</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!EOP</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!-------------------------------------------------------------------------</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!-------------------------------------------------------------------------</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!BOP</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! !IROUTINE: updateDiffusion</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!</code></a>
  <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">SUBROUTINE </code><code class="funcname">UPDATEDIFFUSION_ADM</code>(<code class="vardecl">tdt</code>, <code class="vardecl">tdt_ad</code>, <code class="vardecl">vert_diffu_coef</code>, <code class="label">&</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="label">&   </code><code class="vardecl">vert_diffu_coef_ad</code>, <code class="vardecl">pbl</code>, <code class="vardecl">pbl_ad</code>, <code class="vardecl">tropp</code>, <code class="vardecl">kzz</code>, <code class="vardecl">kzz_ad</code>, <code class="vardecl">press3c</code>, <code class="label">&</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="label">&   </code><code class="vardecl">press3c_ad</code>, <code class="vardecl">press3e</code>, <code class="vardecl">press3e_ad</code>, <code class="vardecl">pctm1</code>, <code class="vardecl">pctm1_ad</code>, <code class="vardecl">concentration</code>, <code class="label">&</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="label">&   </code><code class="vardecl">concentration_ad</code>, <code class="vardecl">isfixedconcentration</code>, <code class="vardecl">mettype</code>, <code class="vardecl">i1</code>, <code class="vardecl">i2</code>, <code class="vardecl">ju1</code>, <code class="vardecl">j2</code>, <code class="vardecl">k1</code><code class="label">&</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="label">&   </code>, <code class="vardecl">k2</code>, <code class="vardecl">ilo</code>, <code class="vardecl">ihi</code>, <code class="vardecl">julo</code>, <code class="vardecl">jhi</code>, <code class="vardecl">numspecies</code>)</a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">IMPLICIT NONE</code></a>
<a href="null_p.html#updatediffusion_modi89" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#updatediffusion_modi89" target="origFile"><code class="comment">! !INPUT PARAMETERS:</code></a>
    <a href="null_p.html#updatediffusion_modi89" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">i1</code>, <code class="vardecl">i2</code>, <code class="vardecl">ju1</code>, <code class="vardecl">j2</code>, <code class="vardecl">k1</code>, <code class="vardecl">k2</code>, <code class="vardecl">ilo</code>, <code class="vardecl">ihi</code>, <code class="vardecl">julo</code>, <code class="vardecl">jhi</code></a>
    <a href="null_p.html#updatediffusion_modi90" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">numspecies</code></a>
<a href="null_p.html#updatediffusion_modi91" target="origFile"><code class="comment">! model time step (s)</code></a>
    <a href="null_p.html#updatediffusion_modi91" target="origFile"><code class="typename">REAL*8</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">tdt</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">tdt_ad</code></a>
<a href="null_p.html#updatediffusion_modi92" target="origFile"><code class="comment">! scalar vertical diffusion coefficient (m^2/s)</code></a>
    <a href="null_p.html#updatediffusion_modi92" target="origFile"><code class="typename">REAL*8</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">vert_diffu_coef</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">vert_diffu_coef_ad</code></a>
<a href="null_p.html#updatediffusion_modi93" target="origFile"><code class="comment">! planetary boundary layer depth (m</code></a>
    <a href="null_p.html#updatediffusion_modi93" target="origFile"><code class="typename">REAL*8</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">pbl</code>(<code class="vardecl">i1</code>:<code class="vardecl">i2</code>, <code class="vardecl">ju1</code>:<code class="vardecl">j2</code>)</a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">pbl_ad</code>(<code class="vardecl">i1</code>:<code class="vardecl">i2</code>, <code class="vardecl">ju1</code>:<code class="vardecl">j2</code>)</a>
<a href="null_p.html#updatediffusion_modi94" target="origFile"><code class="comment">! tropopause pressure (mb)</code></a>
    <a href="null_p.html#updatediffusion_modi94" target="origFile"><code class="typename">REAL*8</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">tropp</code>(<code class="vardecl">i1</code>:<code class="vardecl">i2</code>, <code class="vardecl">ju1</code>:<code class="vardecl">j2</code>)</a>
<a href="null_p.html#updatediffusion_modi95" target="origFile"><code class="comment">! atmospheric pressure at the center </code></a>
    <a href="null_p.html#updatediffusion_modi95" target="origFile"><code class="typename">REAL*8</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">press3c</code>(<code class="vardecl">ilo</code>:<code class="vardecl">ihi</code>, <code class="vardecl">julo</code>:<code class="vardecl">jhi</code>, <code class="vardecl">k1</code>:<code class="vardecl">k2</code>)</a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">press3c_ad</code>(<code class="vardecl">ilo</code>:<code class="vardecl">ihi</code>, <code class="vardecl">julo</code>:<code class="vardecl">jhi</code>, <code class="vardecl">k1</code>:<code class="vardecl">k2</code>)</a>
<a href="null_p.html#updatediffusion_modi96" target="origFile"><code class="comment">! of each grid box (mb)</code></a>
<a href="null_p.html#updatediffusion_modi96" target="origFile"><code class="comment">! atmospheric pressure at the edge</code></a>
    <a href="null_p.html#updatediffusion_modi96" target="origFile"><code class="typename">REAL*8</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">press3e</code>(<code class="vardecl">ilo</code>:<code class="vardecl">ihi</code>, <code class="vardecl">julo</code>:<code class="vardecl">jhi</code>, <code class="vardecl">k1</code>-<code class="constant">1</code>:<code class="vardecl">k2</code>)</a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">press3e_ad</code>(<code class="vardecl">ilo</code>:<code class="vardecl">ihi</code>, <code class="vardecl">julo</code>:<code class="vardecl">jhi</code>, <code class="vardecl">k1</code>-<code class="constant">1</code>:<code class="vardecl">k2</code>)</a>
<a href="null_p.html#updatediffusion_modi97" target="origFile"><code class="comment">! of each grid box (mb)</code></a>
<a href="null_p.html#updatediffusion_modi97" target="origFile"><code class="comment">! surface pressure field at t1, </code></a>
    <a href="null_p.html#updatediffusion_modi97" target="origFile"><code class="typename">REAL*8</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">pctm1</code>(<code class="vardecl">ilo</code>:<code class="vardecl">ihi</code>, <code class="vardecl">julo</code>:<code class="vardecl">jhi</code>)</a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">pctm1_ad</code>(<code class="vardecl">ilo</code>:<code class="vardecl">ihi</code>, <code class="vardecl">julo</code>:<code class="vardecl">jhi</code>)</a>
<a href="null_p.html#updatediffusion_modi98" target="origFile"><code class="comment">! known at zone centers (mb)</code></a>
    <a href="null_p.html#updatediffusion_modi98" target="origFile"><code class="typename">LOGICAL</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">isfixedconcentration</code>(<code class="vardecl">numspecies</code>)</a>
    <a href="null_p.html#updatediffusion_modi99" target="origFile"><code class="typename">CHARACTER</code>(<code class="keyword">len</code>=esmf_maxstr), <code class="typename">INTENT(IN) </code>:: <code class="vardecl">mettype</code></a>
<a href="null_p.html#updatediffusion_modi100" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#updatediffusion_modi100" target="origFile"><code class="comment">! !INPUT/OUTPUT PARAMETERS:</code></a>
<a href="null_p.html#updatediffusion_modi100" target="origFile"><code class="comment">! array of vertical diffusion coefficients (m^2/s)</code></a>
    <a href="null_p.html#updatediffusion_modi100" target="origFile"><code class="typename">REAL*8</code>, <code class="typename">INTENT(INOUT) </code>:: <code class="vardecl">kzz</code>(<code class="vardecl">i1</code>:<code class="vardecl">i2</code>, <code class="vardecl">ju1</code>:<code class="vardecl">j2</code>, <code class="vardecl">k1</code>:<code class="vardecl">k2</code>)</a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8</code>, <code class="typename">INTENT(INOUT) </code>:: <code class="vardecl">kzz_ad</code>(<code class="vardecl">i1</code>:<code class="vardecl">i2</code>, <code class="vardecl">ju1</code>:<code class="vardecl">j2</code>, <code class="vardecl">k1</code>:<code class="vardecl">k2</code>)</a>
<a href="null_p.html#updatediffusion_modi101" target="origFile"><code class="comment">! species concentration (mixing ratio)</code></a>
    <a href="null_p.html#updatediffusion_modi101" target="origFile"><code class="typename">TYPE(T_GMIARRAYBUNDLE)</code>, <code class="typename">INTENT(INOUT) </code>:: <code class="vardecl">concentration</code>(<code class="vardecl">numspecies</code>)</a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">TYPE(T_GMIARRAYBUNDLE)</code>, <code class="typename">INTENT(INOUT) </code>:: <code class="vardecl">concentration_ad</code>(<code class="vardecl">numspecies</code><code class="label">&</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="label">&   </code>)</a>
<a href="null_p.html#updatediffusion_modi102" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#updatediffusion_modi102" target="origFile"><code class="comment">! !DESCRIPTION:</code></a>
<a href="null_p.html#updatediffusion_modi102" target="origFile"><code class="comment">! Updates diffusion.</code></a>
<a href="null_p.html#updatediffusion_modi102" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#updatediffusion_modi102" target="origFile"><code class="comment">!EOP</code></a>
<a href="null_p.html#updatediffusion_modi102" target="origFile"><code class="comment">!------------------------------------------------------------------------------</code></a>
<a href="null_p.html#updatediffusion_modi102" target="origFile"><code class="comment">!BOC</code></a>
    <a href="null_p.html#updatediffusion_modi102" target="origFile"><code class="keyword">CALL </code><code class="funcname">PUSHREAL8ARRAY</code>(kzz, (i2-i1+<code class="constant">1</code>)*(j2-ju1+<code class="constant">1</code>)*(k2-k1+<code class="constant">1</code>))</a>
<a name="updatediffusion_admi31"></a>    <a href="null_p.html#updatediffusion_modi102" target="origFile"><code class="keyword">CALL </code><code class="funcname">ADJUST_KZZ</code>(press3c, tropp, kzz, i1, i2, ju1, j2, k1, k2, ilo, <code class="label">&</code></a>
<a href="null_p.html#updatediffusion_modi102" target="origFile"><code class="label">&             </code>ihi, julo, jhi)</a>
    <a href="null_p.html#updatediffusion_modi103" target="origFile"><code class="keyword">CALL </code><code class="funcname">DO_VERT_DIFFU_ADM</code>(tdt, tdt_ad, vert_diffu_coef, <code class="label">&</code></a>
<a href="null_p.html#updatediffusion_modi103" target="origFile"><code class="label">&                    </code>vert_diffu_coef_ad, pbl, pbl_ad, kzz, kzz_ad, <code class="label">&</code></a>
<a href="null_p.html#updatediffusion_modi103" target="origFile"><code class="label">&                    </code>press3c, press3c_ad, press3e, press3e_ad, pctm1, <code class="label">&</code></a>
<a href="null_p.html#updatediffusion_modi103" target="origFile"><code class="label">&                    </code>pctm1_ad, concentration, concentration_ad, <code class="label">&</code></a>
<a name="updatediffusion_admi32"></a><a href="null_p.html#updatediffusion_modi103" target="origFile"><code class="label">&                    </code>isfixedconcentration, mettype, i1, i2, ju1, j2, k1<code class="label">&</code></a>
<a href="null_p.html#updatediffusion_modi103" target="origFile"><code class="label">&                    </code>, k2, ilo, ihi, julo, jhi, numspecies)</a>
    <a href="null_p.html#updatediffusion_modi102" target="origFile"><code class="keyword">CALL </code><code class="funcname">POPREAL8ARRAY</code>(kzz, (i2-i1+<code class="constant">1</code>)*(j2-ju1+<code class="constant">1</code>)*(k2-k1+<code class="constant">1</code>))</a>
    <a href="null_p.html#updatediffusion_modi102" target="origFile"><code class="keyword">CALL </code><code class="funcname">ADJUST_KZZ_ADM</code>(press3c, tropp, kzz, kzz_ad, i1, i2, ju1, j2, k1<code class="label">&</code></a>
<a name="updatediffusion"></a><a href="null_p.html#updatediffusion_modi102" target="origFile"><code class="label">&                 </code>, k2, ilo, ihi, julo, jhi)</a>
  <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">END SUBROUTINE </code><code class="funcname">UPDATEDIFFUSION_ADM</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! !DESCRIPTION:</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! !AUTHOR:</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! !REVISION HISTORY:</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!EOP</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!-------------------------------------------------------------------------</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!-------------------------------------------------------------------------</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!BOP</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! !IROUTINE: updateDiffusion</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!</code></a>
  <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">SUBROUTINE </code><code class="funcname">UPDATEDIFFUSION</code>(<code class="vardecl">tdt</code>, <code class="vardecl">vert_diffu_coef</code>, <code class="vardecl">pbl</code>, <code class="vardecl">tropp</code>, <code class="vardecl">kzz</code>, <code class="label">&</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="label">&   </code><code class="vardecl">press3c</code>, <code class="vardecl">press3e</code>, <code class="vardecl">pctm1</code>, <code class="vardecl">concentration</code>, <code class="vardecl">isfixedconcentration</code>, <code class="label">&</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="label">&   </code><code class="vardecl">mettype</code>, <code class="vardecl">i1</code>, <code class="vardecl">i2</code>, <code class="vardecl">ju1</code>, <code class="vardecl">j2</code>, <code class="vardecl">k1</code>, <code class="vardecl">k2</code>, <code class="vardecl">ilo</code>, <code class="vardecl">ihi</code>, <code class="vardecl">julo</code>, <code class="vardecl">jhi</code>, <code class="vardecl">numspecies</code>)</a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">IMPLICIT NONE</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! !INPUT PARAMETERS:</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">i1</code>, <code class="vardecl">i2</code>, <code class="vardecl">ju1</code>, <code class="vardecl">j2</code>, <code class="vardecl">k1</code>, <code class="vardecl">k2</code>, <code class="vardecl">ilo</code>, <code class="vardecl">ihi</code>, <code class="vardecl">julo</code>, <code class="vardecl">jhi</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">numspecies</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! model time step (s)</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">tdt</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! scalar vertical diffusion coefficient (m^2/s)</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">vert_diffu_coef</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! planetary boundary layer depth (m</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">pbl</code>(<code class="vardecl">i1</code>:<code class="vardecl">i2</code>, <code class="vardecl">ju1</code>:<code class="vardecl">j2</code>)</a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! tropopause pressure (mb)</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">tropp</code>(<code class="vardecl">i1</code>:<code class="vardecl">i2</code>, <code class="vardecl">ju1</code>:<code class="vardecl">j2</code>)</a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! atmospheric pressure at the center </code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">press3c</code>(<code class="vardecl">ilo</code>:<code class="vardecl">ihi</code>, <code class="vardecl">julo</code>:<code class="vardecl">jhi</code>, <code class="vardecl">k1</code>:<code class="vardecl">k2</code>)</a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! of each grid box (mb)</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! atmospheric pressure at the edge</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">press3e</code>(<code class="vardecl">ilo</code>:<code class="vardecl">ihi</code>, <code class="vardecl">julo</code>:<code class="vardecl">jhi</code>, <code class="vardecl">k1</code>-<code class="constant">1</code>:<code class="vardecl">k2</code>)</a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! of each grid box (mb)</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! surface pressure field at t1, </code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">pctm1</code>(<code class="vardecl">ilo</code>:<code class="vardecl">ihi</code>, <code class="vardecl">julo</code>:<code class="vardecl">jhi</code>)</a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! known at zone centers (mb)</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">LOGICAL</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">isfixedconcentration</code>(<code class="vardecl">numspecies</code>)</a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">CHARACTER</code>(<code class="keyword">len</code>=esmf_maxstr), <code class="typename">INTENT(IN) </code>:: <code class="vardecl">mettype</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! !INPUT/OUTPUT PARAMETERS:</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! array of vertical diffusion coefficients (m^2/s)</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8</code>, <code class="typename">INTENT(INOUT) </code>:: <code class="vardecl">kzz</code>(<code class="vardecl">i1</code>:<code class="vardecl">i2</code>, <code class="vardecl">ju1</code>:<code class="vardecl">j2</code>, <code class="vardecl">k1</code>:<code class="vardecl">k2</code>)</a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! species concentration (mixing ratio)</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">TYPE(T_GMIARRAYBUNDLE)</code>, <code class="typename">INTENT(INOUT) </code>:: <code class="vardecl">concentration</code>(<code class="vardecl">numspecies</code>)</a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! !DESCRIPTION:</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! Updates diffusion.</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!EOP</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!------------------------------------------------------------------------------</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!BOC</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">CALL </code><code class="funcname">ADJUST_KZZ</code>(press3c, tropp, kzz, i1, i2, ju1, j2, k1, k2, ilo, <code class="label">&</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="label">&             </code>ihi, julo, jhi)</a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">CALL </code><code class="funcname">DO_VERT_DIFFU</code>(tdt, vert_diffu_coef, pbl, kzz, press3c, press3e<code class="label">&</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="label">&                </code>, pctm1, concentration, isfixedconcentration, mettype, <code class="label">&</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="label">&                </code>i1, i2, ju1, j2, k1, k2, ilo, ihi, julo, jhi, <code class="label">&</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="label">&                </code>numspecies)</a>
<a name="update_pbl_mixing"></a>    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">RETURN</code></a>
  <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">END SUBROUTINE </code><code class="funcname">UPDATEDIFFUSION</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!EOC</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!------------------------------------------------------------------------------</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!BOP</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! !IROUTINE: Update_PBL_Mixing</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! !INTERFACE: </code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!</code></a>
  <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">SUBROUTINE </code><code class="funcname">UPDATE_PBL_MIXING</code>(<code class="vardecl">tdt</code>, <code class="vardecl">pbl_mixing_tau</code>, <code class="vardecl">pbl</code>, <code class="vardecl">grid_height</code>, <code class="label">&</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="label">&   </code><code class="vardecl">mass</code>, <code class="vardecl">concentration</code>, <code class="vardecl">i1</code>, <code class="vardecl">i2</code>, <code class="vardecl">ju1</code>, <code class="vardecl">j2</code>, <code class="vardecl">k1</code>, <code class="vardecl">k2</code>, <code class="vardecl">numspecies</code>)</a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">IMPLICIT NONE</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! !INPUT PARAMETERS:</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">i1</code>, <code class="vardecl">i2</code>, <code class="vardecl">ju1</code>, <code class="vardecl">j2</code>, <code class="vardecl">k1</code>, <code class="vardecl">k2</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">numspecies</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! model time step (s)</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">tdt</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! time scale for pbl mixing (s)</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">pbl_mixing_tau</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! planetary boundary layer depth (m)</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">pbl</code>(<code class="vardecl">i1</code>:<code class="vardecl">i2</code>, <code class="vardecl">ju1</code>:<code class="vardecl">j2</code>)</a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! height of each grid box (m)</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">grid_height</code>(<code class="vardecl">i1</code>:<code class="vardecl">i2</code>, <code class="vardecl">ju1</code>:<code class="vardecl">j2</code>, <code class="vardecl">k1</code>:<code class="vardecl">k2</code>)</a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! air mass in each grid box (kg)</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">mass</code>(<code class="vardecl">i1</code>:<code class="vardecl">i2</code>, <code class="vardecl">ju1</code>:<code class="vardecl">j2</code>, <code class="vardecl">k1</code>:<code class="vardecl">k2</code>)</a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! !INPUT/OUTPUT PARAMETERS:</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">TYPE(T_GMIARRAYBUNDLE)</code>, <code class="typename">INTENT(INOUT) </code>:: <code class="vardecl">concentration</code>(<code class="vardecl">numspecies</code>)</a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! !DESCRIPTION:</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!   Updates diffusion through a boundary layer mixing model.</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! !LOCAL VARIABLES:</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">INTEGER </code>:: <code class="vardecl">ic</code>, <code class="vardecl">il</code>, <code class="vardecl">ij</code>, <code class="vardecl">ik</code>, <code class="vardecl">kpbl</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">frac_pbl</code>, <code class="vardecl">height</code>, <code class="vardecl">mass_pbl</code>, <code class="vardecl">mixing_factor</code>, <code class="vardecl">well_mixed</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">INTRINSIC </code><code class="funcname">EXP</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">INTRINSIC </code><code class="funcname">SUM</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!EOP</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!------------------------------------------------------------------------------</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!BOC</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile">mixing_factor = <code class="funcname">EXP</code>(-(tdt/pbl_mixing_tau))</a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!---------------------------------------</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! Loop over all longitudes and latitudes.</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!---------------------------------------</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">DO </code>il=i1,i2</a>
      <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">DO </code>ij=ju1,j2</a>
        <a href="null_p.html#updatediffusion_mod" target="origFile">mass_pbl = <code class="constant">0.0d0</code></a>
        <a href="null_p.html#updatediffusion_mod" target="origFile">height = <code class="constant">0.0d0</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!-----------------------------------</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! Find the total mass within the pbl.</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!-----------------------------------</code></a>
  <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="label">kloop:</code><code class="keyword">DO </code>ik=k1,k2</a>
          <a href="null_p.html#updatediffusion_mod" target="origFile">height = height + grid_height(il, ij, ik)</a>
          <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">IF</code> (pbl(il, ij) .GE. height) <code class="keyword">THEN</code></a>
            <a href="null_p.html#updatediffusion_mod" target="origFile">mass_pbl = mass_pbl + mass(il, ij, ik)</a>
          <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">ELSE</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!-------------------------------------------------------</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! This grid box is fractionally in the PBL. Save part of</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! its mass also, save the k index, and exit the loop.</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!-------------------------------------------------------</code></a>
            <a href="null_p.html#updatediffusion_mod" target="origFile">frac_pbl = (pbl(il, ij)-(height-grid_height(il, ij, ik)))/<code class="label">&</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="label">&             </code>grid_height(il, ij, ik)</a>
            <a href="null_p.html#updatediffusion_mod" target="origFile">mass_pbl = mass_pbl + mass(il, ij, ik)*frac_pbl</a>
            <a href="null_p.html#updatediffusion_mod" target="origFile">kpbl = ik</a>
            <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">GOTO </code><code class="label">100</code></a>
          <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">END IF</code></a>
        <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">END DO </code><code class="label">kloop</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!--------------------------------------------------------</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! Now if a real PBL was found (kpbl &gt; k1) loop over the</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! species, calculate a well mixed</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! mixing ratio, and apply it to the grids within the pbl</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! and then to the grid box</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! which is fractionally within the pbl.</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!---------------------------------------------------------</code></a>
 <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="label">100    </code><code class="keyword">IF</code> (kpbl .GT. k1) <code class="keyword">THEN</code></a>
          <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">DO </code>ic=<code class="constant">1</code>,numspecies</a>
            <a href="null_p.html#updatediffusion_mod" target="origFile">well_mixed = (<code class="funcname">SUM</code>(concentration(ic)%parray3d(il, ij, k1:kpbl<code class="label">&</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="label">&             </code>-<code class="constant">1</code>)*mass(il, ij, k1:kpbl-<code class="constant">1</code>))+frac_pbl*concentration(ic)%<code class="label">&</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="label">&             </code>parray3d(il, ij, kpbl)*mass(il, ij, kpbl))/mass_pbl</a>
            <a href="null_p.html#updatediffusion_mod" target="origFile">concentration(ic)%parray3d(il, ij, <code class="constant">1</code>:kpbl-<code class="constant">1</code>) = concentration<code class="label">&</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="label">&             </code>(ic)%parray3d(il, ij, k1:kpbl-<code class="constant">1</code>)*mixing_factor + <code class="label">&</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="label">&             </code>well_mixed*(<code class="constant">1.0d0</code>-mixing_factor)</a>
            <a href="null_p.html#updatediffusion_mod" target="origFile">concentration(ic)%parray3d(il, ij, kpbl) = concentration(ic)<code class="label">&</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="label">&             </code>%parray3d(il, ij, kpbl) + frac_pbl*(concentration(ic)%<code class="label">&</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="label">&             </code>parray3d(il, ij, kpbl)*(mixing_factor-<code class="constant">1.0d0</code>)+well_mixed*(<code class="label">&</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="label">&             </code><code class="constant">1.0d0</code>-mixing_factor))</a>
          <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">END DO</code></a>
        <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">END IF</code></a>
      <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">END DO</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">END DO</code></a>
<a name="adjust_kzz_adm"></a>    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">RETURN</code></a>
  <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">END SUBROUTINE </code><code class="funcname">UPDATE_PBL_MIXING</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!  Differentiation of adjust_kzz in reverse (adjoint) mode:</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!   gradient     of useful results: kzz</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!   with respect to varying inputs: kzz</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!EOC</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!------------------------------------------------------------------------------</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!BOP</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! !IROUTINE: Adjust_Kzz</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! !INTERFACE:</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!</code></a>
  <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">SUBROUTINE </code><code class="funcname">ADJUST_KZZ_ADM</code>(<code class="vardecl">press3c</code>, <code class="vardecl">tropp</code>, <code class="vardecl">kzz</code>, <code class="vardecl">kzz_ad</code>, <code class="vardecl">i1</code>, <code class="vardecl">i2</code>, <code class="vardecl">ju1</code>, <code class="vardecl">j2</code><code class="label">&</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="label">&   </code>, <code class="vardecl">k1</code>, <code class="vardecl">k2</code>, <code class="vardecl">ilo</code>, <code class="vardecl">ihi</code>, <code class="vardecl">julo</code>, <code class="vardecl">jhi</code>)</a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">IMPLICIT NONE</code></a>
<a href="null_p.html#updatediffusion_modi78" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#updatediffusion_modi78" target="origFile"><code class="comment">! !INPUT PARAMETERS</code></a>
    <a href="null_p.html#updatediffusion_modi78" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">i1</code>, <code class="vardecl">i2</code>, <code class="vardecl">ju1</code>, <code class="vardecl">j2</code>, <code class="vardecl">k1</code>, <code class="vardecl">k2</code>, <code class="vardecl">ilo</code>, <code class="vardecl">ihi</code>, <code class="vardecl">julo</code>, <code class="vardecl">jhi</code></a>
<a href="null_p.html#updatediffusion_modi79" target="origFile"><code class="comment">! atmospheric pressure at the center </code></a>
    <a href="null_p.html#updatediffusion_modi79" target="origFile"><code class="typename">REAL*8</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">press3c</code>(<code class="vardecl">ilo</code>:<code class="vardecl">ihi</code>, <code class="vardecl">julo</code>:<code class="vardecl">jhi</code>, <code class="vardecl">k1</code>:<code class="vardecl">k2</code>)</a>
<a href="null_p.html#updatediffusion_modi80" target="origFile"><code class="comment">! of each grid box (mb)</code></a>
<a href="null_p.html#updatediffusion_modi80" target="origFile"><code class="comment">! tropopause pressure (mb)</code></a>
    <a href="null_p.html#updatediffusion_modi80" target="origFile"><code class="typename">REAL*8</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">tropp</code>(<code class="vardecl">i1</code>:<code class="vardecl">i2</code>, <code class="vardecl">ju1</code>:<code class="vardecl">j2</code>)</a>
<a href="null_p.html#updatediffusion_modi81" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#updatediffusion_modi81" target="origFile"><code class="comment">! !INPUT/OUTPUT PARAMETERS:</code></a>
<a href="null_p.html#updatediffusion_modi81" target="origFile"><code class="comment">! vertical diffusion coefficients (m^2/s)</code></a>
    <a href="null_p.html#updatediffusion_modi81" target="origFile"><code class="typename">REAL*8</code>, <code class="typename">INTENT(INOUT) </code>:: <code class="vardecl">kzz</code>(<code class="vardecl">i1</code>:<code class="vardecl">i2</code>, <code class="vardecl">ju1</code>:<code class="vardecl">j2</code>, <code class="vardecl">k1</code>:<code class="vardecl">k2</code>)</a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8</code>, <code class="typename">INTENT(INOUT) </code>:: <code class="vardecl">kzz_ad</code>(<code class="vardecl">i1</code>:<code class="vardecl">i2</code>, <code class="vardecl">ju1</code>:<code class="vardecl">j2</code>, <code class="vardecl">k1</code>:<code class="vardecl">k2</code>)</a>
    <a href="null_p.html#updatediffusion_modi82" target="origFile"><code class="keyword">INTRINSIC </code><code class="funcname">MAXVAL</code></a>
    <a href="null_p.html#updatediffusion_modi83" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">result1</code></a>
    <a href="null_p.html#updatediffusion_modi84" target="origFile"><code class="typename">LOGICAL</code>, DIMENSION(i2-i1+<code class="constant">1</code>, j2-ju1+<code class="constant">1</code>, k2-k1+<code class="constant">1</code>) :: <code class="vardecl">mask</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">res</code></a>
<a href="null_p.html#updatediffusion_modi85" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#updatediffusion_modi85" target="origFile"><code class="comment">! !DESCRIPTION:</code></a>
<a href="null_p.html#updatediffusion_modi85" target="origFile"><code class="comment">!   Makes the kzz (vertical diffusion) zero above the tropopause.</code></a>
<a href="null_p.html#updatediffusion_modi85" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#updatediffusion_modi85" target="origFile"><code class="comment">!EOP</code></a>
<a href="null_p.html#updatediffusion_modi85" target="origFile"><code class="comment">!------------------------------------------------------------------------------</code></a>
<a href="null_p.html#updatediffusion_modi85" target="origFile"><code class="comment">!BOC</code></a>
    <a href="null_p.html#updatediffusion_modi85" target="origFile">result1 = <code class="funcname">MAXVAL</code>(kzz)</a>
    <a href="null_p.html#updatediffusion_modi86" target="origFile"><code class="keyword">IF</code> (result1 .GT. <code class="constant">0.0d0</code>) <code class="keyword">THEN</code></a>
      <a href="null_p.html#updatediffusion_modi87" target="origFile">res = <code class="funcname">SPREAD</code>(tropp(:, :), <code class="constant">3</code>, k2)</a>
      <a href="null_p.html#updatediffusion_modi87" target="origFile">mask(<code class="constant">1</code>:i2-i1+<code class="constant">1</code>, <code class="constant">1</code>:j2-ju1+<code class="constant">1</code>, :) = press3c(i1:i2, ju1:j2, :) .LT. <code class="label">&</code></a>
<a href="null_p.html#updatediffusion_modi87" target="origFile"><code class="label">&       </code>res + <code class="constant">100.0d0</code></a>
      <a href="null_p.html#updatediffusion_modi86" target="origFile"><code class="keyword">WHERE </code>(mask(<code class="constant">1</code>:i2-i1+<code class="constant">1</code>, <code class="constant">1</code>:j2-ju1+<code class="constant">1</code>, :)) kzz_ad = <code class="constant">0.0_8</code></a>
<a name="adjust_kzz"></a>    <a href="null_p.html#updatediffusion_modi86" target="origFile"><code class="keyword">END IF</code></a>
  <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">END SUBROUTINE </code><code class="funcname">ADJUST_KZZ_ADM</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!EOC</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!------------------------------------------------------------------------------</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!BOP</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! !IROUTINE: Adjust_Kzz</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! !INTERFACE:</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!</code></a>
  <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">SUBROUTINE </code><code class="funcname">ADJUST_KZZ</code>(<code class="vardecl">press3c</code>, <code class="vardecl">tropp</code>, <code class="vardecl">kzz</code>, <code class="vardecl">i1</code>, <code class="vardecl">i2</code>, <code class="vardecl">ju1</code>, <code class="vardecl">j2</code>, <code class="vardecl">k1</code>, <code class="vardecl">k2</code>, <code class="label">&</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="label">&   </code><code class="vardecl">ilo</code>, <code class="vardecl">ihi</code>, <code class="vardecl">julo</code>, <code class="vardecl">jhi</code>)</a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">IMPLICIT NONE</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! !INPUT PARAMETERS</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">i1</code>, <code class="vardecl">i2</code>, <code class="vardecl">ju1</code>, <code class="vardecl">j2</code>, <code class="vardecl">k1</code>, <code class="vardecl">k2</code>, <code class="vardecl">ilo</code>, <code class="vardecl">ihi</code>, <code class="vardecl">julo</code>, <code class="vardecl">jhi</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! atmospheric pressure at the center </code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">press3c</code>(<code class="vardecl">ilo</code>:<code class="vardecl">ihi</code>, <code class="vardecl">julo</code>:<code class="vardecl">jhi</code>, <code class="vardecl">k1</code>:<code class="vardecl">k2</code>)</a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! of each grid box (mb)</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! tropopause pressure (mb)</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">tropp</code>(<code class="vardecl">i1</code>:<code class="vardecl">i2</code>, <code class="vardecl">ju1</code>:<code class="vardecl">j2</code>)</a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! !INPUT/OUTPUT PARAMETERS:</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! vertical diffusion coefficients (m^2/s)</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8</code>, <code class="typename">INTENT(INOUT) </code>:: <code class="vardecl">kzz</code>(<code class="vardecl">i1</code>:<code class="vardecl">i2</code>, <code class="vardecl">ju1</code>:<code class="vardecl">j2</code>, <code class="vardecl">k1</code>:<code class="vardecl">k2</code>)</a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">INTRINSIC </code><code class="funcname">MAXVAL</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">result1</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">LOGICAL</code>, DIMENSION(i2-i1+<code class="constant">1</code>, j2-ju1+<code class="constant">1</code>, k2-k1+<code class="constant">1</code>) :: <code class="vardecl">mask</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! !DESCRIPTION:</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!   Makes the kzz (vertical diffusion) zero above the tropopause.</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!EOP</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!------------------------------------------------------------------------------</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!BOC</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile">result1 = <code class="funcname">MAXVAL</code>(kzz)</a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">IF</code> (result1 .GT. <code class="constant">0.0d0</code>) <code class="keyword">THEN</code></a>
      <a href="null_p.html#updatediffusion_mod" target="origFile">mask(<code class="constant">1</code>:i2-i1+<code class="constant">1</code>, <code class="constant">1</code>:j2-ju1+<code class="constant">1</code>, :) = press3c(i1:i2, ju1:j2, :) .LT. <code class="label">&</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="label">&       </code><code class="funcname">SPREAD</code>(tropp(:, :), <code class="constant">3</code>, k2) + <code class="constant">100.0d0</code></a>
      <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">WHERE </code>(mask(<code class="constant">1</code>:i2-i1+<code class="constant">1</code>, <code class="constant">1</code>:j2-ju1+<code class="constant">1</code>, :)) kzz(i1:i2, ju1:j2, :) = <code class="label">&</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="label">&         </code><code class="constant">0.0d0</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">END IF</code></a>
<a name="do_vert_diffu_adm"></a>    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">RETURN</code></a>
  <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">END SUBROUTINE </code><code class="funcname">ADJUST_KZZ</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!  Differentiation of do_vert_diffu in reverse (adjoint) mode:</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!   gradient     of useful results: vert_diffu_coef kzz press3c</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!                press3e *(concentration.parray3d) pbl tdt psf</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!   with respect to varying inputs: vert_diffu_coef kzz press3c</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!                press3e *(concentration.parray3d) pbl tdt psf</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!   Plus diff mem management of: concentration.parray3d:in</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!EOP</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!------------------------------------------------------------------------------</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!BOC</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! !IROUTINE: Do_Vert_Diffu</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! !INTERFACE:</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!</code></a>
  <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">SUBROUTINE </code><code class="funcname">DO_VERT_DIFFU_ADM</code>(<code class="vardecl">tdt</code>, <code class="vardecl">tdt_ad</code>, <code class="vardecl">vert_diffu_coef</code>, <code class="label">&</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="label">&   </code><code class="vardecl">vert_diffu_coef_ad</code>, <code class="vardecl">pbl</code>, <code class="vardecl">pbl_ad</code>, <code class="vardecl">kzz</code>, <code class="vardecl">kzz_ad</code>, <code class="vardecl">press3c</code>, <code class="vardecl">press3c_ad</code>, <code class="label">&</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="label">&   </code><code class="vardecl">press3e</code>, <code class="vardecl">press3e_ad</code>, <code class="vardecl">psf</code>, <code class="vardecl">psf_ad</code>, <code class="vardecl">concentration</code>, <code class="vardecl">concentration_ad</code>, <code class="label">&</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="label">&   </code><code class="vardecl">isfixedconcentration</code>, <code class="vardecl">mettype</code>, <code class="vardecl">i1</code>, <code class="vardecl">i2</code>, <code class="vardecl">ju1</code>, <code class="vardecl">j2</code>, <code class="vardecl">k1</code>, <code class="vardecl">k2</code>, <code class="vardecl">ilo</code>, <code class="vardecl">ihi</code>, <code class="label">&</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="label">&   </code><code class="vardecl">julo</code>, <code class="vardecl">jhi</code>, <code class="vardecl">numspecies</code>)</a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">USE </code><code class="funcname">DIFFSIZES</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!  Hint: ISIZE2OFDrfconcentration_parray3d should be the size of dimension 2 of array *concentration%parray3d</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!  Hint: ISIZE1OFDrfconcentration_parray3d should be the size of dimension 1 of array *concentration%parray3d</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">IMPLICIT NONE</code></a>
<a href="null_p.html#updatediffusion_modi0" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#updatediffusion_modi0" target="origFile"><code class="comment">! !INPUT PARAMETERS:</code></a>
    <a href="null_p.html#updatediffusion_modi0" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">i1</code>, <code class="vardecl">i2</code>, <code class="vardecl">ju1</code>, <code class="vardecl">j2</code>, <code class="vardecl">k1</code>, <code class="vardecl">k2</code>, <code class="vardecl">ilo</code>, <code class="vardecl">ihi</code>, <code class="vardecl">julo</code>, <code class="vardecl">jhi</code></a>
    <a href="null_p.html#updatediffusion_modi1" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">numspecies</code></a>
<a href="null_p.html#updatediffusion_modi2" target="origFile"><code class="comment">! model time step (s)</code></a>
    <a href="null_p.html#updatediffusion_modi2" target="origFile"><code class="typename">REAL*8</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">tdt</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">tdt_ad</code></a>
<a href="null_p.html#updatediffusion_modi3" target="origFile"><code class="comment">! scalar vertical diffusion coefficient (m^2/s)</code></a>
    <a href="null_p.html#updatediffusion_modi3" target="origFile"><code class="typename">REAL*8</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">vert_diffu_coef</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">vert_diffu_coef_ad</code></a>
<a href="null_p.html#updatediffusion_modi4" target="origFile"><code class="comment">! planetary boundary layer depth (m)</code></a>
    <a href="null_p.html#updatediffusion_modi4" target="origFile"><code class="typename">REAL*8</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">pbl</code>(<code class="vardecl">i1</code>:<code class="vardecl">i2</code>, <code class="vardecl">ju1</code>:<code class="vardecl">j2</code>)</a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">pbl_ad</code>(<code class="vardecl">i1</code>:<code class="vardecl">i2</code>, <code class="vardecl">ju1</code>:<code class="vardecl">j2</code>)</a>
<a href="null_p.html#updatediffusion_modi5" target="origFile"><code class="comment">! vertical diffusion coefficients (m^2/s)</code></a>
    <a href="null_p.html#updatediffusion_modi5" target="origFile"><code class="typename">REAL*8</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">kzz</code>(<code class="vardecl">i1</code>:<code class="vardecl">i2</code>, <code class="vardecl">ju1</code>:<code class="vardecl">j2</code>, <code class="vardecl">k1</code>:<code class="vardecl">k2</code>)</a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">kzz_ad</code>(<code class="vardecl">i1</code>:<code class="vardecl">i2</code>, <code class="vardecl">ju1</code>:<code class="vardecl">j2</code>, <code class="vardecl">k1</code>:<code class="vardecl">k2</code>)</a>
<a href="null_p.html#updatediffusion_modi6" target="origFile"><code class="comment">! atmospheric pressure at the center of each grid box (mb)</code></a>
    <a href="null_p.html#updatediffusion_modi6" target="origFile"><code class="typename">REAL*8</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">press3c</code>(<code class="vardecl">ilo</code>:<code class="vardecl">ihi</code>, <code class="vardecl">julo</code>:<code class="vardecl">jhi</code>, <code class="vardecl">k1</code>:<code class="vardecl">k2</code>)</a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">press3c_ad</code>(<code class="vardecl">ilo</code>:<code class="vardecl">ihi</code>, <code class="vardecl">julo</code>:<code class="vardecl">jhi</code>, <code class="vardecl">k1</code>:<code class="vardecl">k2</code>)</a>
<a href="null_p.html#updatediffusion_modi7" target="origFile"><code class="comment">! atmospheric pressure at the edge   of each grid box (mb)</code></a>
    <a href="null_p.html#updatediffusion_modi7" target="origFile"><code class="typename">REAL*8</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">press3e</code>(<code class="vardecl">ilo</code>:<code class="vardecl">ihi</code>, <code class="vardecl">julo</code>:<code class="vardecl">jhi</code>, <code class="vardecl">k1</code>-<code class="constant">1</code>:<code class="vardecl">k2</code>)</a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">press3e_ad</code>(<code class="vardecl">ilo</code>:<code class="vardecl">ihi</code>, <code class="vardecl">julo</code>:<code class="vardecl">jhi</code>, <code class="vardecl">k1</code>-<code class="constant">1</code>:<code class="vardecl">k2</code>)</a>
<a href="null_p.html#updatediffusion_modi8" target="origFile"><code class="comment">! surface pressure field known at zone centers (mb)</code></a>
    <a href="null_p.html#updatediffusion_modi8" target="origFile"><code class="typename">REAL*8</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">psf</code>(<code class="vardecl">ilo</code>:<code class="vardecl">ihi</code>, <code class="vardecl">julo</code>:<code class="vardecl">jhi</code>)</a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">psf_ad</code>(<code class="vardecl">ilo</code>:<code class="vardecl">ihi</code>, <code class="vardecl">julo</code>:<code class="vardecl">jhi</code>)</a>
    <a href="null_p.html#updatediffusion_modi9" target="origFile"><code class="typename">LOGICAL</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">isfixedconcentration</code>(<code class="vardecl">numspecies</code>)</a>
    <a href="null_p.html#updatediffusion_modi10" target="origFile"><code class="typename">CHARACTER</code>(<code class="keyword">len</code>=esmf_maxstr), <code class="typename">INTENT(IN) </code>:: <code class="vardecl">mettype</code></a>
<a href="null_p.html#updatediffusion_modi11" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#updatediffusion_modi11" target="origFile"><code class="comment">! !INPUT/OUTPUT PARAMETERS:</code></a>
    <a href="null_p.html#updatediffusion_modi11" target="origFile"><code class="typename">TYPE(T_GMIARRAYBUNDLE)</code>, <code class="typename">INTENT(INOUT) </code>:: <code class="vardecl">concentration</code>(<code class="vardecl">numspecies</code>)</a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">TYPE(T_GMIARRAYBUNDLE)</code>, <code class="typename">INTENT(INOUT) </code>:: <code class="vardecl">concentration_ad</code>(<code class="vardecl">numspecies</code><code class="label">&</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="label">&   </code>)</a>
<a href="null_p.html#updatediffusion_modi12" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#updatediffusion_modi12" target="origFile"><code class="comment">! !DECLARED VARIABLES:</code></a>
<a href="null_p.html#updatediffusion_modi12" target="origFile"><code class="comment">! atmospheric scale height (m)</code></a>
    <a href="null_p.html#updatediffusion_modi12" target="origFile"><code class="typename">REAL*8</code>, <code class="typename">PARAMETER </code>:: <code class="vardecl">hzero</code>=<code class="constant">8000.0d0</code></a>
<a href="null_p.html#updatediffusion_modi13" target="origFile"><code class="comment">! (m^2)</code></a>
    <a href="null_p.html#updatediffusion_modi13" target="origFile"><code class="typename">REAL*8</code>, <code class="typename">PARAMETER </code>:: <code class="vardecl">hzero2</code>=<code class="vardecl">hzero</code>*<code class="vardecl">hzero</code></a>
<a href="null_p.html#updatediffusion_modi14" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#updatediffusion_modi14" target="origFile"><code class="comment">! !DESCRIPTION:</code></a>
<a href="null_p.html#updatediffusion_modi14" target="origFile"><code class="comment">!   Calculates vertical diffusion using an implicit technique.</code></a>
<a href="null_p.html#updatediffusion_modi14" target="origFile"><code class="comment">!   Note: Constituent mass is conserved during mixing.</code></a>
<a href="null_p.html#updatediffusion_modi14" target="origFile"><code class="comment">!          Constant field should remain constant.</code></a>
<a href="null_p.html#updatediffusion_modi14" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#updatediffusion_modi14" target="origFile"><code class="comment">! !LOCAL VARIABLES:</code></a>
    <a href="null_p.html#updatediffusion_modi14" target="origFile"><code class="typename">INTEGER </code>:: <code class="vardecl">ik</code>, <code class="vardecl">ic</code></a>
    <a href="null_p.html#updatediffusion_modi15" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">avdiff</code>(<code class="vardecl">i1</code>:<code class="vardecl">i2</code>, <code class="vardecl">ju1</code>:<code class="vardecl">j2</code>, <code class="vardecl">k1</code>:<code class="vardecl">k2</code>-<code class="constant">1</code>)</a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">avdiff_ad</code>(<code class="vardecl">i1</code>:<code class="vardecl">i2</code>, <code class="vardecl">ju1</code>:<code class="vardecl">j2</code>, <code class="vardecl">k1</code>:<code class="vardecl">k2</code>-<code class="constant">1</code>)</a>
    <a href="null_p.html#updatediffusion_modi16" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">bvdiff</code>(<code class="vardecl">i1</code>:<code class="vardecl">i2</code>, <code class="vardecl">ju1</code>:<code class="vardecl">j2</code>, <code class="vardecl">k1</code>:<code class="vardecl">k2</code>-<code class="constant">1</code>)</a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">bvdiff_ad</code>(<code class="vardecl">i1</code>:<code class="vardecl">i2</code>, <code class="vardecl">ju1</code>:<code class="vardecl">j2</code>, <code class="vardecl">k1</code>:<code class="vardecl">k2</code>-<code class="constant">1</code>)</a>
    <a href="null_p.html#updatediffusion_modi17" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">cvdiff</code>(<code class="vardecl">i1</code>:<code class="vardecl">i2</code>, <code class="vardecl">ju1</code>:<code class="vardecl">j2</code>, <code class="vardecl">k1</code>:<code class="vardecl">k2</code>-<code class="constant">1</code>)</a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">cvdiff_ad</code>(<code class="vardecl">i1</code>:<code class="vardecl">i2</code>, <code class="vardecl">ju1</code>:<code class="vardecl">j2</code>, <code class="vardecl">k1</code>:<code class="vardecl">k2</code>-<code class="constant">1</code>)</a>
    <a href="null_p.html#updatediffusion_modi18" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">vdiff</code>(<code class="vardecl">i1</code>:<code class="vardecl">i2</code>, <code class="vardecl">ju1</code>:<code class="vardecl">j2</code>, <code class="vardecl">k1</code>:<code class="vardecl">k2</code>-<code class="constant">1</code>)</a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">vdiff_ad</code>(<code class="vardecl">i1</code>:<code class="vardecl">i2</code>, <code class="vardecl">ju1</code>:<code class="vardecl">j2</code>, <code class="vardecl">k1</code>:<code class="vardecl">k2</code>-<code class="constant">1</code>)</a>
    <a href="null_p.html#updatediffusion_modi19" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">bb</code>(<code class="vardecl">i1</code>:<code class="vardecl">i2</code>, <code class="vardecl">ju1</code>:<code class="vardecl">j2</code>, <code class="vardecl">k1</code>:<code class="vardecl">k2</code>-<code class="constant">1</code>)</a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">bb_ad</code>(<code class="vardecl">i1</code>:<code class="vardecl">i2</code>, <code class="vardecl">ju1</code>:<code class="vardecl">j2</code>, <code class="vardecl">k1</code>:<code class="vardecl">k2</code>-<code class="constant">1</code>)</a>
    <a href="null_p.html#updatediffusion_modi20" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">cc</code>(<code class="vardecl">i1</code>:<code class="vardecl">i2</code>, <code class="vardecl">ju1</code>:<code class="vardecl">j2</code>, <code class="vardecl">k1</code>:<code class="vardecl">k2</code>-<code class="constant">1</code>)</a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">cc_ad</code>(<code class="vardecl">i1</code>:<code class="vardecl">i2</code>, <code class="vardecl">ju1</code>:<code class="vardecl">j2</code>, <code class="vardecl">k1</code>:<code class="vardecl">k2</code>-<code class="constant">1</code>)</a>
    <a href="null_p.html#updatediffusion_modi21" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">rr</code>(<code class="vardecl">i1</code>:<code class="vardecl">i2</code>, <code class="vardecl">ju1</code>:<code class="vardecl">j2</code>, <code class="vardecl">k1</code>:<code class="vardecl">k2</code>-<code class="constant">1</code>)</a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">rr_ad</code>(<code class="vardecl">i1</code>:<code class="vardecl">i2</code>, <code class="vardecl">ju1</code>:<code class="vardecl">j2</code>, <code class="vardecl">k1</code>:<code class="vardecl">k2</code>-<code class="constant">1</code>)</a>
    <a href="null_p.html#updatediffusion_modi22" target="origFile"><code class="keyword">INTRINSIC </code><code class="funcname">MAXVAL</code></a>
    <a href="null_p.html#updatediffusion_modi23" target="origFile"><code class="keyword">INTRINSIC </code><code class="funcname">LOG</code></a>
    <a href="null_p.html#updatediffusion_modi24" target="origFile"><code class="keyword">INTRINSIC </code><code class="funcname">ABS</code></a>
    <a href="null_p.html#updatediffusion_modi25" target="origFile"><code class="keyword">INTRINSIC </code><code class="funcname">TRIM</code></a>
    <a href="null_p.html#updatediffusion_modi26" target="origFile"><code class="typename">REAL*8</code>, DIMENSION(i1:i2, ju1:j2) :: <code class="vardecl">abs0</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8</code>, DIMENSION(i1:i2, ju1:j2) :: <code class="vardecl">abs0_ad</code></a>
    <a href="null_p.html#updatediffusion_modi27" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">result1</code></a>
    <a href="null_p.html#updatediffusion_modi28" target="origFile"><code class="typename">LOGICAL</code>, DIMENSION(i2-i1+<code class="constant">1</code>, j2-ju1+<code class="constant">1</code>) :: <code class="vardecl">mask</code></a>
    <a href="null_p.html#updatediffusion_modi29" target="origFile"><code class="typename">LOGICAL</code>, DIMENSION(i2-i1+<code class="constant">1</code>, j2-ju1+<code class="constant">1</code>) :: <code class="vardecl">mask0</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8</code>, DIMENSION(i2-i1+<code class="constant">1</code>, j2-ju1+<code class="constant">1</code>) :: <code class="vardecl">temp</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8</code>, DIMENSION(i2-i1+<code class="constant">1</code>, j2-ju1+<code class="constant">1</code>) :: <code class="vardecl">temp0</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8</code>, DIMENSION(i2-i1+<code class="constant">1</code>, j2-ju1+<code class="constant">1</code>) :: <code class="vardecl">temp1</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8</code>, DIMENSION(i1:i2, ju1:j2) :: <code class="vardecl">temp2</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8</code>, DIMENSION(i2-i1+<code class="constant">1</code>, j2-ju1+<code class="constant">1</code>) :: <code class="vardecl">temp3</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8</code>, DIMENSION(i2-i1+<code class="constant">1</code>, j2-ju1+<code class="constant">1</code>) :: <code class="vardecl">temp4</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8</code>, DIMENSION(i2-i1+<code class="constant">1</code>, j2-ju1+<code class="constant">1</code>) :: <code class="vardecl">temp_ad</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8</code>, DIMENSION(i2-i1+<code class="constant">1</code>, j2-ju1+<code class="constant">1</code>) :: <code class="vardecl">temp_ad0</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8</code>, DIMENSION(i2-i1+<code class="constant">1</code>, j2-ju1+<code class="constant">1</code>) :: <code class="vardecl">temp_ad1</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8</code>, DIMENSION(i1:i2, ju1:j2) :: <code class="vardecl">temp_ad2</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8</code>, DIMENSION(i2-i1+<code class="constant">1</code>, j2-ju1+<code class="constant">1</code>, k2-k1) :: <code class="vardecl">temp5</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8</code>, DIMENSION(i2-i1+<code class="constant">1</code>, j2-ju1+<code class="constant">1</code>, k2-k1) :: <code class="vardecl">temp6</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8</code>, DIMENSION(i2-i1+<code class="constant">1</code>, j2-ju1+<code class="constant">1</code>, k2-k1) :: <code class="vardecl">temp_ad3</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8</code>, DIMENSION(i2-i1+<code class="constant">1</code>, j2-ju1+<code class="constant">1</code>, k2-k1) :: <code class="vardecl">temp_ad4</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8</code>, DIMENSION(i2-i1+<code class="constant">1</code>, j2-ju1+<code class="constant">1</code>, k2-k1) :: <code class="vardecl">temp7</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8</code>, DIMENSION(i2-i1+<code class="constant">1</code>, j2-ju1+<code class="constant">1</code>, k2-k1) :: <code class="vardecl">temp8</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8</code>, DIMENSION(i2-i1+<code class="constant">1</code>, j2-ju1+<code class="constant">1</code>, k2-k1) :: <code class="vardecl">temp9</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8</code>, DIMENSION(i2-i1+<code class="constant">1</code>, j2-ju1+<code class="constant">1</code>, k2-k1) :: <code class="vardecl">temp10</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8</code>, DIMENSION(i2-i1+<code class="constant">1</code>, j2-ju1+<code class="constant">1</code>, k2-k1) :: <code class="vardecl">temp11</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8</code>, DIMENSION(i2-i1+<code class="constant">1</code>, j2-ju1+<code class="constant">1</code>, k2-k1) :: <code class="vardecl">temp12</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8</code>, DIMENSION(i2-i1+<code class="constant">1</code>, j2-ju1+<code class="constant">1</code>, k2-k1) :: <code class="vardecl">temp_ad5</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8</code>, DIMENSION(i2-i1+<code class="constant">1</code>, j2-ju1+<code class="constant">1</code>, k2-k1) :: <code class="vardecl">temp_ad6</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8</code>, DIMENSION(i2-i1+<code class="constant">1</code>, j2-ju1+<code class="constant">1</code>, k2-k1) :: <code class="vardecl">temp_ad7</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8</code>, DIMENSION(i2-i1+<code class="constant">1</code>, j2-ju1+<code class="constant">1</code>, k2-k1) :: <code class="vardecl">temp_ad8</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8</code>, DIMENSION(i2-i1+<code class="constant">1</code>, j2-ju1+<code class="constant">1</code>, k2-k1) :: <code class="vardecl">temp_ad9</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8</code>, DIMENSION(i2-i1+<code class="constant">1</code>, j2-ju1+<code class="constant">1</code>, k2-k1) :: <code class="vardecl">temp_ad10</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8</code>, DIMENSION(i2-i1+<code class="constant">1</code>, j2-ju1+<code class="constant">1</code>, k2-k1) :: <code class="vardecl">temp13</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8</code>, DIMENSION(i2-i1+<code class="constant">1</code>, j2-ju1+<code class="constant">1</code>, k2-k1) :: <code class="vardecl">temp14</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8</code>, DIMENSION(i2-i1+<code class="constant">1</code>, j2-ju1+<code class="constant">1</code>, k2-k1) :: <code class="vardecl">temp15</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8</code>, DIMENSION(i2-i1+<code class="constant">1</code>, j2-ju1+<code class="constant">1</code>, k2-k1) :: <code class="vardecl">temp16</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8</code>, DIMENSION(i2-i1+<code class="constant">1</code>, j2-ju1+<code class="constant">1</code>, k2-k1) :: <code class="vardecl">temp17</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8</code>, DIMENSION(i2-i1+<code class="constant">1</code>, j2-ju1+<code class="constant">1</code>, k2-k1) :: <code class="vardecl">temp18</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8</code>, DIMENSION(i2-i1+<code class="constant">1</code>, j2-ju1+<code class="constant">1</code>, k2-k1) :: <code class="vardecl">temp_ad11</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8</code>, DIMENSION(i2-i1+<code class="constant">1</code>, j2-ju1+<code class="constant">1</code>, k2-k1) :: <code class="vardecl">temp_ad12</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8</code>, DIMENSION(i2-i1+<code class="constant">1</code>, j2-ju1+<code class="constant">1</code>, k2-k1) :: <code class="vardecl">temp_ad13</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8</code>, DIMENSION(i2-i1+<code class="constant">1</code>, j2-ju1+<code class="constant">1</code>, k2-k1) :: <code class="vardecl">temp_ad14</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8</code>, DIMENSION(i2-i1+<code class="constant">1</code>, j2-ju1+<code class="constant">1</code>, k2-k1) :: <code class="vardecl">temp_ad15</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8</code>, DIMENSION(i2-i1+<code class="constant">1</code>, j2-ju1+<code class="constant">1</code>, k2-k1) :: <code class="vardecl">temp_ad16</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8</code>, DIMENSION(i2-i1+<code class="constant">1</code>, j2-ju1+<code class="constant">1</code>) :: <code class="vardecl">temp_ad17</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8</code>, DIMENSION(i2-i1+<code class="constant">1</code>, j2-ju1+<code class="constant">1</code>) :: <code class="vardecl">temp_ad18</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8</code>, DIMENSION(i2-i1+<code class="constant">1</code>, j2-ju1+<code class="constant">1</code>) :: <code class="vardecl">temp_ad19</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">INTEGER </code>:: <code class="vardecl">branch</code></a>
<a href="null_p.html#updatediffusion_modi30" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#updatediffusion_modi30" target="origFile"><code class="comment">!EOP</code></a>
<a href="null_p.html#updatediffusion_modi30" target="origFile"><code class="comment">!------------------------------------------------------------------------------</code></a>
<a href="null_p.html#updatediffusion_modi30" target="origFile"><code class="comment">!BOC</code></a>
    <a href="null_p.html#updatediffusion_modi30" target="origFile">avdiff(:, :, :) = <code class="constant">0.0d0</code></a>
    <a href="null_p.html#updatediffusion_modi31" target="origFile">bvdiff(:, :, :) = <code class="constant">0.0d0</code></a>
    <a href="null_p.html#updatediffusion_modi32" target="origFile">cvdiff(:, :, :) = <code class="constant">0.0d0</code></a>
    <a href="null_p.html#updatediffusion_modi33" target="origFile">bb(:, :, :) = <code class="constant">0.0d0</code></a>
    <a href="null_p.html#updatediffusion_modi34" target="origFile">cc(:, :, :) = <code class="constant">0.0d0</code></a>
    <a href="null_p.html#updatediffusion_modi35" target="origFile">rr(:, :, :) = <code class="constant">0.0d0</code></a>
<a href="null_p.html#updatediffusion_modi36" target="origFile"><code class="comment">! --------------------------------------------------------</code></a>
<a href="null_p.html#updatediffusion_modi36" target="origFile"><code class="comment">! If there was no kzz in the met file, it was set to &lt; 0.</code></a>
<a href="null_p.html#updatediffusion_modi36" target="origFile"><code class="comment">! In this case calculate a vertical diffusion coefficient,</code></a>
<a href="null_p.html#updatediffusion_modi36" target="origFile"><code class="comment">! otherwise use kzz.</code></a>
<a href="null_p.html#updatediffusion_modi36" target="origFile"><code class="comment">! --------------------------------------------------------</code></a>
    <a href="null_p.html#updatediffusion_modi36" target="origFile">result1 = <code class="funcname">MAXVAL</code>(kzz)</a>
    <a href="null_p.html#updatediffusion_modi37" target="origFile"><code class="keyword">IF</code> (result1 .LT. <code class="constant">0.0d0</code>) <code class="keyword">THEN</code></a>
<a href="null_p.html#updatediffusion_modi38" target="origFile"><code class="comment">! ------------------------------------------------------</code></a>
<a href="null_p.html#updatediffusion_modi38" target="origFile"><code class="comment">! Set up the vertical diffusion coefficients.</code></a>
<a href="null_p.html#updatediffusion_modi38" target="origFile"><code class="comment">! First put height (m) into vdiff, then put simple</code></a>
<a href="null_p.html#updatediffusion_modi38" target="origFile"><code class="comment">! parameterization for diffusion coefficient into vdiff,</code></a>
<a href="null_p.html#updatediffusion_modi38" target="origFile"><code class="comment">! then put it into units of per mb</code></a>
<a href="null_p.html#updatediffusion_modi38" target="origFile"><code class="comment">! ------------------------------------------------------</code></a>
      <a href="null_p.html#updatediffusion_modi38" target="origFile">vdiff = <code class="constant">0.0d0</code></a>
      <a href="null_p.html#updatediffusion_modi47" target="origFile"><code class="keyword">DO </code>ik=<code class="constant">1</code>,<code class="constant">10</code></a>
        <a href="null_p.html#updatediffusion_modi39" target="origFile">vdiff(:, :, ik) = -(hzero*<code class="funcname">LOG</code>(press3e(i1:i2, ju1:j2, ik)/psf(i1:<code class="label">&</code></a>
<a href="null_p.html#updatediffusion_modi39" target="origFile"><code class="label">&         </code>i2, ju1:j2)))</a>
        <a href="null_p.html#updatediffusion_modi40" target="origFile"><code class="keyword">CALL </code><code class="funcname">PUSHBOOLEANARRAY</code>(mask, (i2-i1+<code class="constant">1</code>)*(j2-ju1+<code class="constant">1</code>))</a>
        <a href="null_p.html#updatediffusion_modi40" target="origFile">mask(:, :) = vdiff(:, :, ik) .LT. pbl(:, :)</a>
        <a href="null_p.html#updatediffusion_modi41" target="origFile"><code class="keyword">CALL </code><code class="funcname">PUSHBOOLEANARRAY</code>(mask0, (i2-i1+<code class="constant">1</code>)*(j2-ju1+<code class="constant">1</code>))</a>
        <a href="null_p.html#updatediffusion_modi41" target="origFile">mask0(:, :) = vdiff(:, :, ik) - pbl(:, :)*<code class="constant">0.5d0 </code>.GE. <code class="constant">0.0</code></a>
        <a href="null_p.html#updatediffusion_modi42" target="origFile"><code class="keyword">CALL </code><code class="funcname">PUSHREAL8ARRAY</code>(abs0, (i2-i1+<code class="constant">1</code>)*(j2-ju1+<code class="constant">1</code>))</a>
        <a href="null_p.html#updatediffusion_modi47" target="origFile"><code class="keyword">WHERE </code>(mask0(:, :)) </a><a href="null_p.html#updatediffusion_modi42" target="origFile">abs0 = vdiff(:, :, ik) - pbl(:, :)*<code class="constant">0.5d0</code></a>
        <a href="null_p.html#updatediffusion_modi43" target="origFile"><code class="keyword">CALL </code><code class="funcname">PUSHREAL8ARRAY</code>(abs0, (i2-i1+<code class="constant">1</code>)*(j2-ju1+<code class="constant">1</code>))</a>
        <a href="null_p.html#updatediffusion_modi47" target="origFile"><code class="keyword">WHERE </code>(.NOT.mask0(:, :)) </a><a href="null_p.html#updatediffusion_modi43" target="origFile">abs0 = -(vdiff(:, :, ik)-pbl(:, :)*<code class="label">&</code></a>
<a href="null_p.html#updatediffusion_modi43" target="origFile"><code class="label">&           </code><code class="constant">0.5d0</code>)</a>
        <a href="null_p.html#updatediffusion_modi47" target="origFile"><code class="keyword">WHERE </code>(mask(:, :)) </a>
          <a href="null_p.html#updatediffusion_modi44" target="origFile">vdiff(:, :, ik) = vert_diffu_coef*(<code class="constant">1.0d0</code>-<code class="constant">2.0d0</code>*(abs0/pbl(:, :)<code class="label">&</code></a>
<a href="null_p.html#updatediffusion_modi44" target="origFile"><code class="label">&           </code>))</a>
        <a href="null_p.html#updatediffusion_modi47" target="origFile"><code class="keyword">ELSEWHERE</code></a>
          <a href="null_p.html#updatediffusion_modi45" target="origFile">vdiff(:, :, ik) = <code class="constant">0.0d0</code></a>
        <a href="null_p.html#updatediffusion_modi47" target="origFile"><code class="keyword">END WHERE</code></a>
        <a href="null_p.html#updatediffusion_modi46" target="origFile"><code class="keyword">CALL </code><code class="funcname">PUSHREAL8ARRAY</code>(vdiff(:, :, ik), (i2-i1+<code class="constant">1</code>)*(j2-ju1+<code class="constant">1</code>))</a>
        <a href="null_p.html#updatediffusion_modi46" target="origFile">vdiff(:, :, ik) = vdiff(:, :, ik)/hzero2*(press3e(i1:i2, ju1:j2<code class="label">&</code></a>
<a href="null_p.html#updatediffusion_modi46" target="origFile"><code class="label">&         </code>, ik)*press3e(i1:i2, ju1:j2, ik))/(press3c(i1:i2, ju1:j2, ik)-<code class="label">&</code></a>
<a href="null_p.html#updatediffusion_modi46" target="origFile"><code class="label">&         </code>press3c(i1:i2, ju1:j2, ik+<code class="constant">1</code>))</a>
      <a href="null_p.html#updatediffusion_modi47" target="origFile"><code class="keyword">END DO</code></a>
      <a href="null_p.html#updatediffusion_modi37" target="origFile"><code class="keyword">CALL </code><code class="funcname">PUSHCONTROL1B</code>(<code class="constant">0</code>)</a>
    <a href="null_p.html#updatediffusion_modi37" target="origFile"><code class="keyword">ELSE</code></a>
      <a href="null_p.html#updatediffusion_modi48" target="origFile">vdiff(:, :, k1:k2-<code class="constant">1</code>) = kzz(:, :, k1:k2-<code class="constant">1</code>)/hzero2*(press3e(i1:i2, <code class="label">&</code></a>
<a href="null_p.html#updatediffusion_modi48" target="origFile"><code class="label">&       </code>ju1:j2, k1:k2-<code class="constant">1</code>)*press3e(i1:i2, ju1:j2, k1:k2-<code class="constant">1</code>))/(press3c(i1:i2<code class="label">&</code></a>
<a href="null_p.html#updatediffusion_modi48" target="origFile"><code class="label">&       </code>, ju1:j2, k1:k2-<code class="constant">1</code>)-press3c(i1:i2, ju1:j2, k1+<code class="constant">1</code>:k2))</a>
      <a href="null_p.html#updatediffusion_modi37" target="origFile"><code class="keyword">CALL </code><code class="funcname">PUSHCONTROL1B</code>(<code class="constant">1</code>)</a>
    <a href="null_p.html#updatediffusion_modi37" target="origFile"><code class="keyword">END IF</code></a>
<a href="null_p.html#updatediffusion_modi49" target="origFile"><code class="comment">! -----------------------------------------------------------</code></a>
<a href="null_p.html#updatediffusion_modi49" target="origFile"><code class="comment">! Construct the tri-diagonal matrix which will be used in the</code></a>
<a href="null_p.html#updatediffusion_modi49" target="origFile"><code class="comment">! implicit vertical diffusion solution.</code></a>
<a href="null_p.html#updatediffusion_modi49" target="origFile"><code class="comment">!   avdiff is the lower band</code></a>
<a href="null_p.html#updatediffusion_modi49" target="origFile"><code class="comment">!   bvdiff is the main diagonal</code></a>
<a href="null_p.html#updatediffusion_modi49" target="origFile"><code class="comment">!   cvdiff is the upper band</code></a>
<a href="null_p.html#updatediffusion_modi49" target="origFile"><code class="comment">! -----------------------------------------------------------</code></a>
<a href="null_p.html#updatediffusion_modi49" target="origFile"><code class="comment">! -----------------------</code></a>
<a href="null_p.html#updatediffusion_modi49" target="origFile"><code class="comment">! First do the top layer.</code></a>
<a href="null_p.html#updatediffusion_modi49" target="origFile"><code class="comment">! -----------------------</code></a>
    <a href="null_p.html#updatediffusion_modi49" target="origFile">avdiff(:, :, k2-<code class="constant">1</code>) = <code class="constant">0.0d0</code></a>
    <a href="null_p.html#updatediffusion_modi50" target="origFile">bvdiff(:, :, k2-<code class="constant">1</code>) = vdiff(:, :, k2-<code class="constant">2</code>)</a>
    <a href="null_p.html#updatediffusion_modi51" target="origFile">cvdiff(:, :, k2-<code class="constant">1</code>) = -vdiff(:, :, k2-<code class="constant">2</code>)</a>
<a href="null_p.html#updatediffusion_modi52" target="origFile"><code class="comment">! ----------------------</code></a>
<a href="null_p.html#updatediffusion_modi52" target="origFile"><code class="comment">! Now do all the layers.</code></a>
<a href="null_p.html#updatediffusion_modi52" target="origFile"><code class="comment">! ----------------------</code></a>
    <a href="null_p.html#updatediffusion_modi52" target="origFile">avdiff(:, :, k1+<code class="constant">1</code>:k2-<code class="constant">2</code>) = -vdiff(:, :, k1+<code class="constant">1</code>:k2-<code class="constant">2</code>)</a>
    <a href="null_p.html#updatediffusion_modi53" target="origFile">bvdiff(:, :, k1+<code class="constant">1</code>:k2-<code class="constant">2</code>) = vdiff(:, :, k1+<code class="constant">1</code>:k2-<code class="constant">2</code>) + vdiff(:, :, k1:k2<code class="label">&</code></a>
<a href="null_p.html#updatediffusion_modi53" target="origFile"><code class="label">&     </code>-<code class="constant">3</code>)</a>
    <a href="null_p.html#updatediffusion_modi54" target="origFile">cvdiff(:, :, k1+<code class="constant">1</code>:k2-<code class="constant">2</code>) = -vdiff(:, :, k1:k2-<code class="constant">3</code>)</a>
<a href="null_p.html#updatediffusion_modi55" target="origFile"><code class="comment">! ------------------------------------</code></a>
<a href="null_p.html#updatediffusion_modi55" target="origFile"><code class="comment">! Now do the layer next to the ground.</code></a>
<a href="null_p.html#updatediffusion_modi55" target="origFile"><code class="comment">! ------------------------------------</code></a>
    <a href="null_p.html#updatediffusion_modi55" target="origFile">avdiff(:, :, k1) = -vdiff(:, :, k1)</a>
    <a href="null_p.html#updatediffusion_modi56" target="origFile">bvdiff(:, :, k1) = vdiff(:, :, k1)</a>
    <a href="null_p.html#updatediffusion_modi57" target="origFile">cvdiff(:, :, k1) = <code class="constant">0.0d0</code></a>
<a href="null_p.html#updatediffusion_modi58" target="origFile"><code class="comment">! ---------------------------------------------------</code></a>
<a href="null_p.html#updatediffusion_modi58" target="origFile"><code class="comment">! Now convert them to the proper dimensionless units.</code></a>
<a href="null_p.html#updatediffusion_modi58" target="origFile"><code class="comment">! ---------------------------------------------------</code></a>
    <a href="null_p.html#updatediffusion_modi58" target="origFile"><code class="keyword">IF</code> (<code class="funcname">TRIM</code>(mettype) .EQ. <code class="string">'MERRA2' </code>.OR. <code class="funcname">TRIM</code>(mettype) .EQ. <code class="string">'FPIT'</code>) <code class="keyword">THEN</code></a>
      <a href="null_p.html#updatediffusion_modi59" target="origFile"><code class="keyword">CALL </code><code class="funcname">PUSHREAL8ARRAY</code>(avdiff, (i2-i1+<code class="constant">1</code>)*(j2-ju1+<code class="constant">1</code>)*(k2-k1))</a>
      <a href="null_p.html#updatediffusion_modi59" target="origFile">avdiff(i1:i2, ju1:j2, k1:k2-<code class="constant">1</code>) = avdiff(i1:i2, ju1:j2, k1:k2-<code class="constant">1</code>)*<code class="label">&</code></a>
<a href="null_p.html#updatediffusion_modi59" target="origFile"><code class="label">&       </code>tdt/(press3e(i1:i2, ju1:j2, k1:k2-<code class="constant">1</code>)-press3e(i1:i2, ju1:j2, k1+<code class="constant">1</code><code class="label">&</code></a>
<a href="null_p.html#updatediffusion_modi59" target="origFile"><code class="label">&       </code>:k2))</a>
      <a href="null_p.html#updatediffusion_modi60" target="origFile"><code class="keyword">CALL </code><code class="funcname">PUSHREAL8ARRAY</code>(bvdiff, (i2-i1+<code class="constant">1</code>)*(j2-ju1+<code class="constant">1</code>)*(k2-k1))</a>
      <a href="null_p.html#updatediffusion_modi60" target="origFile">bvdiff(i1:i2, ju1:j2, k1:k2-<code class="constant">1</code>) = bvdiff(i1:i2, ju1:j2, k1:k2-<code class="constant">1</code>)*<code class="label">&</code></a>
<a href="null_p.html#updatediffusion_modi60" target="origFile"><code class="label">&       </code>tdt/(press3e(i1:i2, ju1:j2, k1:k2-<code class="constant">1</code>)-press3e(i1:i2, ju1:j2, k1+<code class="constant">1</code><code class="label">&</code></a>
<a href="null_p.html#updatediffusion_modi60" target="origFile"><code class="label">&       </code>:k2)) + <code class="constant">1.0d0</code></a>
      <a href="null_p.html#updatediffusion_modi61" target="origFile"><code class="keyword">CALL </code><code class="funcname">PUSHREAL8ARRAY</code>(cvdiff, (i2-i1+<code class="constant">1</code>)*(j2-ju1+<code class="constant">1</code>)*(k2-k1))</a>
      <a href="null_p.html#updatediffusion_modi61" target="origFile">cvdiff(i1:i2, ju1:j2, k1:k2-<code class="constant">1</code>) = cvdiff(i1:i2, ju1:j2, k1:k2-<code class="constant">1</code>)*<code class="label">&</code></a>
<a href="null_p.html#updatediffusion_modi61" target="origFile"><code class="label">&       </code>tdt/(press3e(i1:i2, ju1:j2, k1:k2-<code class="constant">1</code>)-press3e(i1:i2, ju1:j2, k1+<code class="constant">1</code><code class="label">&</code></a>
<a href="null_p.html#updatediffusion_modi61" target="origFile"><code class="label">&       </code>:k2))</a>
      <a href="null_p.html#updatediffusion_modi58" target="origFile"><code class="keyword">CALL </code><code class="funcname">PUSHCONTROL2B</code>(<code class="constant">2</code>)</a>
    <a href="null_p.html#updatediffusion_modi58" target="origFile"><code class="keyword">ELSE </code></a><a href="null_p.html#updatediffusion_modi62" target="origFile"><code class="keyword">IF</code> (<code class="funcname">TRIM</code>(mettype) .EQ. <code class="string">'MERRA1'</code>) <code class="keyword">THEN</code></a>
      <a href="null_p.html#updatediffusion_modi63" target="origFile"><code class="keyword">CALL </code><code class="funcname">PUSHREAL8ARRAY</code>(avdiff, (i2-i1+<code class="constant">1</code>)*(j2-ju1+<code class="constant">1</code>)*(k2-k1))</a>
      <a href="null_p.html#updatediffusion_modi63" target="origFile">avdiff(i1:i2, ju1:j2, k1:k2-<code class="constant">1</code>) = avdiff(i1:i2, ju1:j2, k1:k2-<code class="constant">1</code>)*<code class="label">&</code></a>
<a href="null_p.html#updatediffusion_modi63" target="origFile"><code class="label">&       </code>tdt/(press3e(i1:i2, ju1:j2, k1-<code class="constant">1</code>:k2-<code class="constant">2</code>)-press3e(i1:i2, ju1:j2, k1<code class="label">&</code></a>
<a href="null_p.html#updatediffusion_modi63" target="origFile"><code class="label">&       </code>:k2-<code class="constant">1</code>))</a>
      <a href="null_p.html#updatediffusion_modi64" target="origFile"><code class="keyword">CALL </code><code class="funcname">PUSHREAL8ARRAY</code>(bvdiff, (i2-i1+<code class="constant">1</code>)*(j2-ju1+<code class="constant">1</code>)*(k2-k1))</a>
      <a href="null_p.html#updatediffusion_modi64" target="origFile">bvdiff(i1:i2, ju1:j2, k1:k2-<code class="constant">1</code>) = bvdiff(i1:i2, ju1:j2, k1:k2-<code class="constant">1</code>)*<code class="label">&</code></a>
<a href="null_p.html#updatediffusion_modi64" target="origFile"><code class="label">&       </code>tdt/(press3e(i1:i2, ju1:j2, k1-<code class="constant">1</code>:k2-<code class="constant">2</code>)-press3e(i1:i2, ju1:j2, k1<code class="label">&</code></a>
<a href="null_p.html#updatediffusion_modi64" target="origFile"><code class="label">&       </code>:k2-<code class="constant">1</code>)) + <code class="constant">1.0d0</code></a>
      <a href="null_p.html#updatediffusion_modi65" target="origFile"><code class="keyword">CALL </code><code class="funcname">PUSHREAL8ARRAY</code>(cvdiff, (i2-i1+<code class="constant">1</code>)*(j2-ju1+<code class="constant">1</code>)*(k2-k1))</a>
      <a href="null_p.html#updatediffusion_modi65" target="origFile">cvdiff(i1:i2, ju1:j2, k1:k2-<code class="constant">1</code>) = cvdiff(i1:i2, ju1:j2, k1:k2-<code class="constant">1</code>)*<code class="label">&</code></a>
<a href="null_p.html#updatediffusion_modi65" target="origFile"><code class="label">&       </code>tdt/(press3e(i1:i2, ju1:j2, k1-<code class="constant">1</code>:k2-<code class="constant">2</code>)-press3e(i1:i2, ju1:j2, k1<code class="label">&</code></a>
<a href="null_p.html#updatediffusion_modi65" target="origFile"><code class="label">&       </code>:k2-<code class="constant">1</code>))</a>
      <a href="null_p.html#updatediffusion_modi62" target="origFile"><code class="keyword">CALL </code><code class="funcname">PUSHCONTROL2B</code>(<code class="constant">1</code>)</a>
    <a href="null_p.html#updatediffusion_modi62" target="origFile"><code class="keyword">ELSE</code></a>
      <a href="null_p.html#updatediffusion_modi62" target="origFile"><code class="keyword">CALL </code><code class="funcname">PUSHCONTROL2B</code>(<code class="constant">0</code>)</a>
    <a href="null_p.html#updatediffusion_modi58" target="origFile"><code class="keyword">END IF</code></a>
<a href="null_p.html#updatediffusion_modi77" target="origFile"><code class="comment">! ---------------------</code></a>
<a href="null_p.html#updatediffusion_modi77" target="origFile"><code class="comment">! Now solve the system.</code></a>
<a href="null_p.html#updatediffusion_modi77" target="origFile"><code class="comment">! ---------------------</code></a>
<a href="null_p.html#updatediffusion_modi77" target="origFile"><code class="label">icloop:</code><code class="keyword">DO </code>ic=<code class="constant">1</code>,numspecies</a>
<a href="null_p.html#updatediffusion_modi66" target="origFile"><code class="comment">!   ======================================</code></a>
      <a href="null_p.html#updatediffusion_modi66" target="origFile"><code class="keyword">IF</code> (isfixedconcentration(ic)) <code class="keyword">THEN</code></a>
        <a href="null_p.html#updatediffusion_modi66" target="origFile"><code class="keyword">CALL </code><code class="funcname">PUSHCONTROL1B</code>(<code class="constant">0</code>)</a>
      <a href="null_p.html#updatediffusion_modi66" target="origFile"><code class="keyword">ELSE</code></a>
<a href="null_p.html#updatediffusion_modi67" target="origFile"><code class="comment">!   ======================================</code></a>
<a href="null_p.html#updatediffusion_modi67" target="origFile"><code class="comment">! -----------------------------------------</code></a>
<a href="null_p.html#updatediffusion_modi67" target="origFile"><code class="comment">! Set up the right hand side of the system.</code></a>
<a href="null_p.html#updatediffusion_modi67" target="origFile"><code class="comment">! -----------------------------------------</code></a>
        <a href="null_p.html#updatediffusion_modi67" target="origFile"><code class="keyword">CALL </code><code class="funcname">PUSHREAL8ARRAY</code>(bb(:, :, k2-<code class="constant">1</code>), (i2-i1+<code class="constant">1</code>)*(j2-ju1+<code class="constant">1</code>))</a>
        <a href="null_p.html#updatediffusion_modi67" target="origFile">bb(:, :, k2-<code class="constant">1</code>) = bvdiff(:, :, k2-<code class="constant">1</code>)</a>
        <a href="null_p.html#updatediffusion_modi68" target="origFile"><code class="keyword">CALL </code><code class="funcname">PUSHREAL8ARRAY</code>(rr(:, :, k2-<code class="constant">1</code>), (i2-i1+<code class="constant">1</code>)*(j2-ju1+<code class="constant">1</code>))</a>
        <a href="null_p.html#updatediffusion_modi68" target="origFile">rr(:, :, k2-<code class="constant">1</code>) = concentration(ic)%parray3d(:, :, k2-<code class="constant">1</code>)</a>
<a href="null_p.html#updatediffusion_modi73" target="origFile"><code class="comment">! ---------------------------------</code></a>
<a href="null_p.html#updatediffusion_modi73" target="origFile"><code class="comment">! Eliminate the lower diagonal (a).</code></a>
<a href="null_p.html#updatediffusion_modi73" target="origFile"><code class="comment">! ---------------------------------</code></a>
        <a href="null_p.html#updatediffusion_modi73" target="origFile"><code class="keyword">DO </code>ik=k2-<code class="constant">1</code>,k1+<code class="constant">1</code>,-<code class="constant">1</code></a>
          <a href="null_p.html#updatediffusion_modi69" target="origFile"><code class="keyword">CALL </code><code class="funcname">PUSHREAL8ARRAY</code>(cc(:, :, ik), (i2-i1+<code class="constant">1</code>)*(j2-ju1+<code class="constant">1</code>))</a>
          <a href="null_p.html#updatediffusion_modi69" target="origFile">cc(:, :, ik) = cvdiff(:, :, ik)/bb(:, :, ik)</a>
          <a href="null_p.html#updatediffusion_modi70" target="origFile"><code class="keyword">CALL </code><code class="funcname">PUSHREAL8ARRAY</code>(rr(:, :, ik), (i2-i1+<code class="constant">1</code>)*(j2-ju1+<code class="constant">1</code>))</a>
          <a href="null_p.html#updatediffusion_modi70" target="origFile">rr(:, :, ik) = rr(:, :, ik)/bb(:, :, ik)</a>
          <a href="null_p.html#updatediffusion_modi71" target="origFile"><code class="keyword">CALL </code><code class="funcname">PUSHREAL8ARRAY</code>(bb(:, :, ik-<code class="constant">1</code>), (i2-i1+<code class="constant">1</code>)*(j2-ju1+<code class="constant">1</code>))</a>
          <a href="null_p.html#updatediffusion_modi71" target="origFile">bb(:, :, ik-<code class="constant">1</code>) = bvdiff(:, :, ik-<code class="constant">1</code>) - avdiff(:, :, ik-<code class="constant">1</code>)*cc(:<code class="label">&</code></a>
<a href="null_p.html#updatediffusion_modi71" target="origFile"><code class="label">&           </code>, :, ik)</a>
          <a href="null_p.html#updatediffusion_modi72" target="origFile"><code class="keyword">CALL </code><code class="funcname">PUSHREAL8ARRAY</code>(rr(:, :, ik-<code class="constant">1</code>), (i2-i1+<code class="constant">1</code>)*(j2-ju1+<code class="constant">1</code>))</a>
          <a href="null_p.html#updatediffusion_modi72" target="origFile">rr(:, :, ik-<code class="constant">1</code>) = concentration(ic)%parray3d(:, :, ik-<code class="constant">1</code>) - <code class="label">&</code></a>
<a href="null_p.html#updatediffusion_modi72" target="origFile"><code class="label">&           </code>avdiff(:, :, ik-<code class="constant">1</code>)*rr(:, :, ik)</a>
        <a href="null_p.html#updatediffusion_modi73" target="origFile"><code class="keyword">END DO</code></a>
<a href="null_p.html#updatediffusion_modi74" target="origFile"><code class="comment">! -------------------------------</code></a>
<a href="null_p.html#updatediffusion_modi74" target="origFile"><code class="comment">! Solve for the new mixing ratio.</code></a>
<a href="null_p.html#updatediffusion_modi74" target="origFile"><code class="comment">! -------------------------------</code></a>
        <a href="null_p.html#updatediffusion_modi74" target="origFile"><code class="keyword">CALL </code><code class="funcname">PUSHREAL8ARRAY</code>(concentration(ic)%parray3d(:, :, k1), <code class="label">&</code></a>
<a name="p1"></a><a href="null_p.html#updatediffusion_modi74" target="origFile"><code class="label">&                     </code>ISIZE1OFDrfconcentration_parray3d*<code class="label">&</code></a>
<a href="null_p.html#updatediffusion_modi74" target="origFile"><code class="label">&                     </code>ISIZE2OFDrfconcentration_parray3d)</a>
        <a href="msg.html#p1" target="msg"><code class="comment"><img src="danger.gif" align=middle border=0 alt="!" /></code></a><a href="null_p.html#updatediffusion_modi74" target="origFile">concentration(ic)%parray3d(:, :, k1) = rr(:, :, k1)/bb(:, :, k1)</a>
        <a href="null_p.html#updatediffusion_modi76" target="origFile"><code class="keyword">DO </code>ik=k1+<code class="constant">1</code>,k2-<code class="constant">1</code></a>
          <a href="null_p.html#updatediffusion_modi75" target="origFile"><code class="keyword">CALL </code><code class="funcname">PUSHREAL8ARRAY</code>(concentration(ic)%parray3d(:, :, ik), <code class="label">&</code></a>
<a name="p2"></a><a href="null_p.html#updatediffusion_modi75" target="origFile"><code class="label">&                       </code>ISIZE1OFDrfconcentration_parray3d*<code class="label">&</code></a>
<a href="null_p.html#updatediffusion_modi75" target="origFile"><code class="label">&                       </code>ISIZE2OFDrfconcentration_parray3d)</a>
          <a href="msg.html#p2" target="msg"><code class="comment"><img src="danger.gif" align=middle border=0 alt="!" /></code></a><a href="null_p.html#updatediffusion_modi75" target="origFile">concentration(ic)%parray3d(:, :, ik) = rr(:, :, ik) - <code class="label">&</code></a>
<a href="null_p.html#updatediffusion_modi75" target="origFile"><code class="label">&           </code>concentration(ic)%parray3d(:, :, ik-<code class="constant">1</code>)*cc(:, :, ik)</a>
        <a href="null_p.html#updatediffusion_modi76" target="origFile"><code class="keyword">END DO</code></a>
        <a href="null_p.html#updatediffusion_modi66" target="origFile"><code class="keyword">CALL </code><code class="funcname">PUSHCONTROL1B</code>(<code class="constant">1</code>)</a>
      <a href="null_p.html#updatediffusion_modi66" target="origFile"><code class="keyword">END IF</code></a>
    <a href="null_p.html#updatediffusion_modi77" target="origFile"><code class="keyword">END DO </code><code class="label">icloop</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile">cvdiff_ad = <code class="constant">0.0_8</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile">bb_ad = <code class="constant">0.0_8</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile">rr_ad = <code class="constant">0.0_8</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile">bvdiff_ad = <code class="constant">0.0_8</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile">cc_ad = <code class="constant">0.0_8</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile">avdiff_ad = <code class="constant">0.0_8</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">DO </code>ic=numspecies,<code class="constant">1</code>,<code class="constant">-1</code></a>
      <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">CALL </code><code class="funcname">POPCONTROL1B</code>(branch)</a>
<a name="do_vert_diffu_admi29"></a>      <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">IF</code> (branch .NE. <code class="constant">0</code>) <code class="keyword">THEN</code></a>
        <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">DO </code>ik=k2-<code class="constant">1</code>,k1+<code class="constant">1</code>,<code class="constant">-1</code></a>
          <a href="null_p.html#updatediffusion_modi75" target="origFile"><code class="keyword">CALL </code><code class="funcname">POPREAL8ARRAY</code>(concentration(ic)%parray3d(:, :, ik), <code class="label">&</code></a>
<a href="null_p.html#updatediffusion_modi75" target="origFile"><code class="label">&                      </code>ISIZE1OFDrfconcentration_parray3d*<code class="label">&</code></a>
<a href="null_p.html#updatediffusion_modi75" target="origFile"><code class="label">&                      </code>ISIZE2OFDrfconcentration_parray3d)</a>
          <a href="null_p.html#updatediffusion_modi75" target="origFile">rr_ad(:, :, ik) = rr_ad(:, :, ik) + concentration_ad(ic)%<code class="label">&</code></a>
<a href="null_p.html#updatediffusion_modi75" target="origFile"><code class="label">&           </code>parray3d(:, :, ik)</a>
          <a href="null_p.html#updatediffusion_modi75" target="origFile">concentration_ad(ic)%parray3d(:, :, ik-<code class="constant">1</code>) = concentration_ad(<code class="label">&</code></a>
<a href="null_p.html#updatediffusion_modi75" target="origFile"><code class="label">&           </code>ic)%parray3d(:, :, ik-<code class="constant">1</code>) - cc(:, :, ik)*concentration_ad(ic)<code class="label">&</code></a>
<a href="null_p.html#updatediffusion_modi75" target="origFile"><code class="label">&           </code>%parray3d(:, :, ik)</a>
          <a href="null_p.html#updatediffusion_modi75" target="origFile">cc_ad(:, :, ik) = cc_ad(:, :, ik) - concentration(ic)%parray3d<code class="label">&</code></a>
<a href="null_p.html#updatediffusion_modi75" target="origFile"><code class="label">&           </code>(:, :, ik-<code class="constant">1</code>)*concentration_ad(ic)%parray3d(:, :, ik)</a>
<a name="do_vert_diffu_admi28"></a>          <a href="null_p.html#updatediffusion_mod" target="origFile">concentration_ad(ic)%parray3d(:, :, ik) = <code class="constant">0.0_8</code></a>
        <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">END DO</code></a>
        <a href="null_p.html#updatediffusion_modi74" target="origFile"><code class="keyword">CALL </code><code class="funcname">POPREAL8ARRAY</code>(concentration(ic)%parray3d(:, :, k1), <code class="label">&</code></a>
<a href="null_p.html#updatediffusion_modi74" target="origFile"><code class="label">&                    </code>ISIZE1OFDrfconcentration_parray3d*<code class="label">&</code></a>
<a href="null_p.html#updatediffusion_modi74" target="origFile"><code class="label">&                    </code>ISIZE2OFDrfconcentration_parray3d)</a>
        <a href="null_p.html#updatediffusion_modi74" target="origFile">temp_ad19 = concentration_ad(ic)%parray3d(:, :, k1)/bb(:, :, k1)</a>
        <a href="null_p.html#updatediffusion_modi74" target="origFile">rr_ad(:, :, k1) = rr_ad(:, :, k1) + temp_ad19</a>
        <a href="null_p.html#updatediffusion_modi74" target="origFile">bb_ad(:, :, k1) = bb_ad(:, :, k1) - rr(:, :, k1)*temp_ad19/bb(:<code class="label">&</code></a>
<a href="null_p.html#updatediffusion_modi74" target="origFile"><code class="label">&         </code>, :, k1)</a>
<a name="do_vert_diffu_admi24"></a>        <a href="null_p.html#updatediffusion_mod" target="origFile">concentration_ad(ic)%parray3d(:, :, k1) = <code class="constant">0.0_8</code></a>
        <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">DO </code>ik=k1+<code class="constant">1</code>,k2-<code class="constant">1</code>,<code class="constant">1</code></a>
          <a href="null_p.html#updatediffusion_modi72" target="origFile"><code class="keyword">CALL </code><code class="funcname">POPREAL8ARRAY</code>(rr(:, :, ik-<code class="constant">1</code>), (i2-i1+<code class="constant">1</code>)*(j2-ju1+<code class="constant">1</code>))</a>
          <a href="null_p.html#updatediffusion_modi72" target="origFile">concentration_ad(ic)%parray3d(:, :, ik-<code class="constant">1</code>) = concentration_ad(<code class="label">&</code></a>
<a href="null_p.html#updatediffusion_modi72" target="origFile"><code class="label">&           </code>ic)%parray3d(:, :, ik-<code class="constant">1</code>) + rr_ad(:, :, ik-<code class="constant">1</code>)</a>
          <a href="null_p.html#updatediffusion_modi72" target="origFile">avdiff_ad(:, :, ik-<code class="constant">1</code>) = avdiff_ad(:, :, ik-<code class="constant">1</code>) - cc(:, :, ik)*<code class="label">&</code></a>
<a href="null_p.html#updatediffusion_modi72" target="origFile"><code class="label">&           </code>bb_ad(:, :, ik-<code class="constant">1</code>) - rr(:, :, ik)*rr_ad(:, :, ik-<code class="constant">1</code>)</a>
          <a href="null_p.html#updatediffusion_modi72" target="origFile">rr_ad(:, :, ik) = rr_ad(:, :, ik) - avdiff(:, :, ik-<code class="constant">1</code>)*rr_ad(:<code class="label">&</code></a>
<a name="do_vert_diffu_admi25"></a><a href="null_p.html#updatediffusion_modi72" target="origFile"><code class="label">&           </code>, :, ik-<code class="constant">1</code>)</a>
          <a href="null_p.html#updatediffusion_mod" target="origFile">rr_ad(:, :, ik-<code class="constant">1</code>) = <code class="constant">0.0_8</code></a>
          <a href="null_p.html#updatediffusion_modi71" target="origFile"><code class="keyword">CALL </code><code class="funcname">POPREAL8ARRAY</code>(bb(:, :, ik-<code class="constant">1</code>), (i2-i1+<code class="constant">1</code>)*(j2-ju1+<code class="constant">1</code>))</a>
          <a href="null_p.html#updatediffusion_modi71" target="origFile">bvdiff_ad(:, :, ik-<code class="constant">1</code>) = bvdiff_ad(:, :, ik-<code class="constant">1</code>) + bb_ad(:, :, ik<code class="label">&</code></a>
<a href="null_p.html#updatediffusion_modi71" target="origFile"><code class="label">&           </code>-<code class="constant">1</code>)</a>
          <a href="null_p.html#updatediffusion_modi71" target="origFile">cc_ad(:, :, ik) = cc_ad(:, :, ik) - avdiff(:, :, ik-<code class="constant">1</code>)*bb_ad(:<code class="label">&</code></a>
<a name="do_vert_diffu_admi26"></a><a href="null_p.html#updatediffusion_modi71" target="origFile"><code class="label">&           </code>, :, ik-<code class="constant">1</code>)</a>
          <a href="null_p.html#updatediffusion_mod" target="origFile">bb_ad(:, :, ik-<code class="constant">1</code>) = <code class="constant">0.0_8</code></a>
          <a href="null_p.html#updatediffusion_modi70" target="origFile"><code class="keyword">CALL </code><code class="funcname">POPREAL8ARRAY</code>(rr(:, :, ik), (i2-i1+<code class="constant">1</code>)*(j2-ju1+<code class="constant">1</code>))</a>
<a name="do_vert_diffu_admi27"></a>          <a href="null_p.html#updatediffusion_modi70" target="origFile">temp_ad17 = rr_ad(:, :, ik)/bb(:, :, ik)</a>
          <a href="null_p.html#updatediffusion_modi70" target="origFile">rr_ad(:, :, ik) = temp_ad17</a>
          <a href="null_p.html#updatediffusion_modi69" target="origFile"><code class="keyword">CALL </code><code class="funcname">POPREAL8ARRAY</code>(cc(:, :, ik), (i2-i1+<code class="constant">1</code>)*(j2-ju1+<code class="constant">1</code>))</a>
          <a href="null_p.html#updatediffusion_modi69" target="origFile">temp_ad18 = cc_ad(:, :, ik)/bb(:, :, ik)</a>
          <a href="null_p.html#updatediffusion_modi70" target="origFile">bb_ad(:, :, ik) = bb_ad(:, :, ik) - cvdiff(:, :, ik)*temp_ad18<code class="label">&</code></a>
<a href="null_p.html#updatediffusion_modi70" target="origFile"><code class="label">&           </code>/bb(:, :, ik) - rr(:, :, ik)*temp_ad17/bb(:, :, ik)</a>
          <a href="null_p.html#updatediffusion_modi69" target="origFile">cvdiff_ad(:, :, ik) = cvdiff_ad(:, :, ik) + temp_ad18</a>
<a name="do_vert_diffu_admi22"></a>          <a href="null_p.html#updatediffusion_mod" target="origFile">cc_ad(:, :, ik) = <code class="constant">0.0_8</code></a>
        <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">END DO</code></a>
        <a href="null_p.html#updatediffusion_modi68" target="origFile"><code class="keyword">CALL </code><code class="funcname">POPREAL8ARRAY</code>(rr(:, :, k2-<code class="constant">1</code>), (i2-i1+<code class="constant">1</code>)*(j2-ju1+<code class="constant">1</code>))</a>
        <a href="null_p.html#updatediffusion_modi68" target="origFile">concentration_ad(ic)%parray3d(:, :, k2-<code class="constant">1</code>) = concentration_ad(ic)<code class="label">&</code></a>
<a name="do_vert_diffu_admi23"></a><a href="null_p.html#updatediffusion_modi68" target="origFile"><code class="label">&         </code>%parray3d(:, :, k2-<code class="constant">1</code>) + rr_ad(:, :, k2-<code class="constant">1</code>)</a>
        <a href="null_p.html#updatediffusion_mod" target="origFile">rr_ad(:, :, k2-<code class="constant">1</code>) = <code class="constant">0.0_8</code></a>
        <a href="null_p.html#updatediffusion_modi67" target="origFile"><code class="keyword">CALL </code><code class="funcname">POPREAL8ARRAY</code>(bb(:, :, k2-<code class="constant">1</code>), (i2-i1+<code class="constant">1</code>)*(j2-ju1+<code class="constant">1</code>))</a>
        <a href="null_p.html#updatediffusion_modi67" target="origFile">bvdiff_ad(:, :, k2-<code class="constant">1</code>) = bvdiff_ad(:, :, k2-<code class="constant">1</code>) + bb_ad(:, :, k2-<code class="constant">1</code><code class="label">&</code></a>
<a href="null_p.html#updatediffusion_modi67" target="origFile"><code class="label">&         </code>)</a>
        <a href="null_p.html#updatediffusion_mod" target="origFile">bb_ad(:, :, k2-<code class="constant">1</code>) = <code class="constant">0.0_8</code></a>
      <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">END IF</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">END DO</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">CALL </code><code class="funcname">POPCONTROL2B</code>(branch)</a>
<a name="do_vert_diffu_admi19"></a>    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">IF</code> (branch .NE. <code class="constant">0</code>) <code class="keyword">THEN</code></a>
      <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">IF</code> (branch .EQ. <code class="constant">1</code>) <code class="keyword">THEN</code></a>
        <a href="null_p.html#updatediffusion_modi65" target="origFile"><code class="keyword">CALL </code><code class="funcname">POPREAL8ARRAY</code>(cvdiff, (i2-i1+<code class="constant">1</code>)*(j2-ju1+<code class="constant">1</code>)*(k2-k1))</a>
        <a href="null_p.html#updatediffusion_modi65" target="origFile">temp17 = press3e(i1:i2, ju1:j2, k1-<code class="constant">1</code>:k2-<code class="constant">2</code>) - press3e(i1:i2, ju1:<code class="label">&</code></a>
<a href="null_p.html#updatediffusion_modi65" target="origFile"><code class="label">&         </code>j2, k1:k2-<code class="constant">1</code>)</a>
        <a href="null_p.html#updatediffusion_modi65" target="origFile">temp_ad11 = cvdiff_ad(i1:i2, ju1:j2, k1:k2-<code class="constant">1</code>)/temp17</a>
        <a href="null_p.html#updatediffusion_modi65" target="origFile">temp18 = cvdiff(i1:i2, ju1:j2, k1:k2-<code class="constant">1</code>)</a>
        <a href="null_p.html#updatediffusion_modi65" target="origFile">temp_ad12 = -(temp18*tdt*temp_ad11/temp17)</a>
        <a href="null_p.html#updatediffusion_modi65" target="origFile">press3e_ad(i1:i2, ju1:j2, k1-<code class="constant">1</code>:k2-<code class="constant">2</code>) = press3e_ad(i1:i2, ju1:j2<code class="label">&</code></a>
<a href="null_p.html#updatediffusion_modi65" target="origFile"><code class="label">&         </code>, k1-<code class="constant">1</code>:k2-<code class="constant">2</code>) + temp_ad12</a>
        <a href="null_p.html#updatediffusion_modi65" target="origFile">press3e_ad(i1:i2, ju1:j2, k1:k2-<code class="constant">1</code>) = press3e_ad(i1:i2, ju1:j2, <code class="label">&</code></a>
<a name="do_vert_diffu_admi20"></a><a href="null_p.html#updatediffusion_modi65" target="origFile"><code class="label">&         </code>k1:k2-<code class="constant">1</code>) - temp_ad12</a>
        <a href="null_p.html#updatediffusion_modi65" target="origFile">cvdiff_ad(i1:i2, ju1:j2, k1:k2-<code class="constant">1</code>) = tdt*temp_ad11</a>
        <a href="null_p.html#updatediffusion_modi64" target="origFile"><code class="keyword">CALL </code><code class="funcname">POPREAL8ARRAY</code>(bvdiff, (i2-i1+<code class="constant">1</code>)*(j2-ju1+<code class="constant">1</code>)*(k2-k1))</a>
        <a href="null_p.html#updatediffusion_modi64" target="origFile">temp15 = press3e(i1:i2, ju1:j2, k1-<code class="constant">1</code>:k2-<code class="constant">2</code>) - press3e(i1:i2, ju1:<code class="label">&</code></a>
<a href="null_p.html#updatediffusion_modi64" target="origFile"><code class="label">&         </code>j2, k1:k2-<code class="constant">1</code>)</a>
        <a href="null_p.html#updatediffusion_modi64" target="origFile">temp_ad13 = bvdiff_ad(i1:i2, ju1:j2, k1:k2-<code class="constant">1</code>)/temp15</a>
        <a href="null_p.html#updatediffusion_modi64" target="origFile">temp16 = bvdiff(i1:i2, ju1:j2, k1:k2-<code class="constant">1</code>)</a>
        <a href="null_p.html#updatediffusion_modi64" target="origFile">temp_ad15 = -(temp16*tdt*temp_ad13/temp15)</a>
        <a href="null_p.html#updatediffusion_modi64" target="origFile">press3e_ad(i1:i2, ju1:j2, k1-<code class="constant">1</code>:k2-<code class="constant">2</code>) = press3e_ad(i1:i2, ju1:j2<code class="label">&</code></a>
<a href="null_p.html#updatediffusion_modi64" target="origFile"><code class="label">&         </code>, k1-<code class="constant">1</code>:k2-<code class="constant">2</code>) + temp_ad15</a>
        <a href="null_p.html#updatediffusion_modi64" target="origFile">press3e_ad(i1:i2, ju1:j2, k1:k2-<code class="constant">1</code>) = press3e_ad(i1:i2, ju1:j2, <code class="label">&</code></a>
<a name="do_vert_diffu_admi21"></a><a href="null_p.html#updatediffusion_modi64" target="origFile"><code class="label">&         </code>k1:k2-<code class="constant">1</code>) - temp_ad15</a>
        <a href="null_p.html#updatediffusion_modi64" target="origFile">bvdiff_ad(i1:i2, ju1:j2, k1:k2-<code class="constant">1</code>) = tdt*temp_ad13</a>
        <a href="null_p.html#updatediffusion_modi63" target="origFile"><code class="keyword">CALL </code><code class="funcname">POPREAL8ARRAY</code>(avdiff, (i2-i1+<code class="constant">1</code>)*(j2-ju1+<code class="constant">1</code>)*(k2-k1))</a>
        <a href="null_p.html#updatediffusion_modi63" target="origFile">temp13 = press3e(i1:i2, ju1:j2, k1-<code class="constant">1</code>:k2-<code class="constant">2</code>) - press3e(i1:i2, ju1:<code class="label">&</code></a>
<a href="null_p.html#updatediffusion_modi63" target="origFile"><code class="label">&         </code>j2, k1:k2-<code class="constant">1</code>)</a>
        <a href="null_p.html#updatediffusion_modi63" target="origFile">temp_ad14 = avdiff_ad(i1:i2, ju1:j2, k1:k2-<code class="constant">1</code>)/temp13</a>
        <a href="null_p.html#updatediffusion_modi63" target="origFile">temp14 = avdiff(i1:i2, ju1:j2, k1:k2-<code class="constant">1</code>)</a>
        <a href="null_p.html#updatediffusion_modi65" target="origFile">tdt_ad = tdt_ad + <code class="funcname">SUM</code>(temp16*temp_ad13) + <code class="funcname">SUM</code>(temp14*temp_ad14) <code class="label">&</code></a>
<a href="null_p.html#updatediffusion_modi65" target="origFile"><code class="label">&         </code>+ <code class="funcname">SUM</code>(temp18*temp_ad11)</a>
        <a href="null_p.html#updatediffusion_modi63" target="origFile">temp_ad16 = -(temp14*tdt*temp_ad14/temp13)</a>
        <a href="null_p.html#updatediffusion_modi63" target="origFile">press3e_ad(i1:i2, ju1:j2, k1-<code class="constant">1</code>:k2-<code class="constant">2</code>) = press3e_ad(i1:i2, ju1:j2<code class="label">&</code></a>
<a href="null_p.html#updatediffusion_modi63" target="origFile"><code class="label">&         </code>, k1-<code class="constant">1</code>:k2-<code class="constant">2</code>) + temp_ad16</a>
        <a href="null_p.html#updatediffusion_modi63" target="origFile">press3e_ad(i1:i2, ju1:j2, k1:k2-<code class="constant">1</code>) = press3e_ad(i1:i2, ju1:j2, <code class="label">&</code></a>
<a href="null_p.html#updatediffusion_modi63" target="origFile"><code class="label">&         </code>k1:k2-<code class="constant">1</code>) - temp_ad16</a>
<a name="do_vert_diffu_admi16"></a>        <a href="null_p.html#updatediffusion_modi63" target="origFile">avdiff_ad(i1:i2, ju1:j2, k1:k2-<code class="constant">1</code>) = tdt*temp_ad14</a>
      <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">ELSE</code></a>
        <a href="null_p.html#updatediffusion_modi61" target="origFile"><code class="keyword">CALL </code><code class="funcname">POPREAL8ARRAY</code>(cvdiff, (i2-i1+<code class="constant">1</code>)*(j2-ju1+<code class="constant">1</code>)*(k2-k1))</a>
        <a href="null_p.html#updatediffusion_modi61" target="origFile">temp11 = press3e(i1:i2, ju1:j2, k1:k2-<code class="constant">1</code>) - press3e(i1:i2, ju1:j2<code class="label">&</code></a>
<a href="null_p.html#updatediffusion_modi61" target="origFile"><code class="label">&         </code>, k1+<code class="constant">1</code>:k2)</a>
        <a href="null_p.html#updatediffusion_modi61" target="origFile">temp_ad5 = cvdiff_ad(i1:i2, ju1:j2, k1:k2-<code class="constant">1</code>)/temp11</a>
        <a href="null_p.html#updatediffusion_modi61" target="origFile">temp12 = cvdiff(i1:i2, ju1:j2, k1:k2-<code class="constant">1</code>)</a>
        <a href="null_p.html#updatediffusion_modi61" target="origFile">temp_ad6 = -(temp12*tdt*temp_ad5/temp11)</a>
        <a href="null_p.html#updatediffusion_modi61" target="origFile">press3e_ad(i1:i2, ju1:j2, k1:k2-<code class="constant">1</code>) = press3e_ad(i1:i2, ju1:j2, <code class="label">&</code></a>
<a href="null_p.html#updatediffusion_modi61" target="origFile"><code class="label">&         </code>k1:k2-<code class="constant">1</code>) + temp_ad6</a>
        <a href="null_p.html#updatediffusion_modi61" target="origFile">press3e_ad(i1:i2, ju1:j2, k1+<code class="constant">1</code>:k2) = press3e_ad(i1:i2, ju1:j2, <code class="label">&</code></a>
<a name="do_vert_diffu_admi17"></a><a href="null_p.html#updatediffusion_modi61" target="origFile"><code class="label">&         </code>k1+<code class="constant">1</code>:k2) - temp_ad6</a>
        <a href="null_p.html#updatediffusion_modi61" target="origFile">cvdiff_ad(i1:i2, ju1:j2, k1:k2-<code class="constant">1</code>) = tdt*temp_ad5</a>
        <a href="null_p.html#updatediffusion_modi60" target="origFile"><code class="keyword">CALL </code><code class="funcname">POPREAL8ARRAY</code>(bvdiff, (i2-i1+<code class="constant">1</code>)*(j2-ju1+<code class="constant">1</code>)*(k2-k1))</a>
        <a href="null_p.html#updatediffusion_modi60" target="origFile">temp9 = press3e(i1:i2, ju1:j2, k1:k2-<code class="constant">1</code>) - press3e(i1:i2, ju1:j2<code class="label">&</code></a>
<a href="null_p.html#updatediffusion_modi60" target="origFile"><code class="label">&         </code>, k1+<code class="constant">1</code>:k2)</a>
        <a href="null_p.html#updatediffusion_modi60" target="origFile">temp_ad7 = bvdiff_ad(i1:i2, ju1:j2, k1:k2-<code class="constant">1</code>)/temp9</a>
        <a href="null_p.html#updatediffusion_modi60" target="origFile">temp10 = bvdiff(i1:i2, ju1:j2, k1:k2-<code class="constant">1</code>)</a>
        <a href="null_p.html#updatediffusion_modi60" target="origFile">temp_ad9 = -(temp10*tdt*temp_ad7/temp9)</a>
        <a href="null_p.html#updatediffusion_modi60" target="origFile">press3e_ad(i1:i2, ju1:j2, k1:k2-<code class="constant">1</code>) = press3e_ad(i1:i2, ju1:j2, <code class="label">&</code></a>
<a href="null_p.html#updatediffusion_modi60" target="origFile"><code class="label">&         </code>k1:k2-<code class="constant">1</code>) + temp_ad9</a>
        <a href="null_p.html#updatediffusion_modi60" target="origFile">press3e_ad(i1:i2, ju1:j2, k1+<code class="constant">1</code>:k2) = press3e_ad(i1:i2, ju1:j2, <code class="label">&</code></a>
<a name="do_vert_diffu_admi18"></a><a href="null_p.html#updatediffusion_modi60" target="origFile"><code class="label">&         </code>k1+<code class="constant">1</code>:k2) - temp_ad9</a>
        <a href="null_p.html#updatediffusion_modi60" target="origFile">bvdiff_ad(i1:i2, ju1:j2, k1:k2-<code class="constant">1</code>) = tdt*temp_ad7</a>
        <a href="null_p.html#updatediffusion_modi59" target="origFile"><code class="keyword">CALL </code><code class="funcname">POPREAL8ARRAY</code>(avdiff, (i2-i1+<code class="constant">1</code>)*(j2-ju1+<code class="constant">1</code>)*(k2-k1))</a>
        <a href="null_p.html#updatediffusion_modi59" target="origFile">temp7 = press3e(i1:i2, ju1:j2, k1:k2-<code class="constant">1</code>) - press3e(i1:i2, ju1:j2<code class="label">&</code></a>
<a href="null_p.html#updatediffusion_modi59" target="origFile"><code class="label">&         </code>, k1+<code class="constant">1</code>:k2)</a>
        <a href="null_p.html#updatediffusion_modi59" target="origFile">temp_ad8 = avdiff_ad(i1:i2, ju1:j2, k1:k2-<code class="constant">1</code>)/temp7</a>
        <a href="null_p.html#updatediffusion_modi59" target="origFile">temp8 = avdiff(i1:i2, ju1:j2, k1:k2-<code class="constant">1</code>)</a>
        <a href="null_p.html#updatediffusion_modi61" target="origFile">tdt_ad = tdt_ad + <code class="funcname">SUM</code>(temp10*temp_ad7) + <code class="funcname">SUM</code>(temp8*temp_ad8) + <code class="label">&</code></a>
<a href="null_p.html#updatediffusion_modi61" target="origFile"><code class="label">&         </code><code class="funcname">SUM</code>(temp12*temp_ad5)</a>
        <a href="null_p.html#updatediffusion_modi59" target="origFile">temp_ad10 = -(temp8*tdt*temp_ad8/temp7)</a>
        <a href="null_p.html#updatediffusion_modi59" target="origFile">press3e_ad(i1:i2, ju1:j2, k1:k2-<code class="constant">1</code>) = press3e_ad(i1:i2, ju1:j2, <code class="label">&</code></a>
<a href="null_p.html#updatediffusion_modi59" target="origFile"><code class="label">&         </code>k1:k2-<code class="constant">1</code>) + temp_ad10</a>
        <a href="null_p.html#updatediffusion_modi59" target="origFile">press3e_ad(i1:i2, ju1:j2, k1+<code class="constant">1</code>:k2) = press3e_ad(i1:i2, ju1:j2, <code class="label">&</code></a>
<a href="null_p.html#updatediffusion_modi59" target="origFile"><code class="label">&         </code>k1+<code class="constant">1</code>:k2) - temp_ad10</a>
        <a href="null_p.html#updatediffusion_modi59" target="origFile">avdiff_ad(i1:i2, ju1:j2, k1:k2-<code class="constant">1</code>) = tdt*temp_ad8</a>
      <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">END IF</code></a>
<a name="do_vert_diffu_admi10"></a>    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">END IF</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile">cvdiff_ad(:, :, k1) = <code class="constant">0.0_8</code></a>
    <a href="null_p.html#updatediffusion_modi56" target="origFile">vdiff_ad = <code class="constant">0.0_8</code></a>
    <a href="null_p.html#updatediffusion_modi56" target="origFile">vdiff_ad(:, :, k1) = vdiff_ad(:, :, k1) + bvdiff_ad(:, :, k1) - <code class="label">&</code></a>
<a href="null_p.html#updatediffusion_modi56" target="origFile"><code class="label">&     </code>avdiff_ad(:, :, k1)</a>
<a name="do_vert_diffu_admi12"></a>    <a href="null_p.html#updatediffusion_mod" target="origFile">bvdiff_ad(:, :, k1) = <code class="constant">0.0_8</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile">avdiff_ad(:, :, k1) = <code class="constant">0.0_8</code></a>
    <a href="null_p.html#updatediffusion_modi54" target="origFile">vdiff_ad(:, :, k1:k2-<code class="constant">3</code>) = vdiff_ad(:, :, k1:k2-<code class="constant">3</code>) - cvdiff_ad(:, :, <code class="label">&</code></a>
<a name="do_vert_diffu_admi13"></a><a href="null_p.html#updatediffusion_modi54" target="origFile"><code class="label">&     </code>k1+<code class="constant">1</code>:k2-<code class="constant">2</code>)</a>
    <a href="null_p.html#updatediffusion_mod" target="origFile">cvdiff_ad(:, :, k1+<code class="constant">1</code>:k2-<code class="constant">2</code>) = <code class="constant">0.0_8</code></a>
    <a href="null_p.html#updatediffusion_modi53" target="origFile">vdiff_ad(:, :, k1+<code class="constant">1</code>:k2-<code class="constant">2</code>) = vdiff_ad(:, :, k1+<code class="constant">1</code>:k2-<code class="constant">2</code>) + bvdiff_ad(:<code class="label">&</code></a>
<a href="null_p.html#updatediffusion_modi53" target="origFile"><code class="label">&     </code>, :, k1+<code class="constant">1</code>:k2-<code class="constant">2</code>)</a>
    <a href="null_p.html#updatediffusion_modi53" target="origFile">vdiff_ad(:, :, k1:k2-<code class="constant">3</code>) = vdiff_ad(:, :, k1:k2-<code class="constant">3</code>) + bvdiff_ad(:, :, <code class="label">&</code></a>
<a name="do_vert_diffu_admi14"></a><a href="null_p.html#updatediffusion_modi53" target="origFile"><code class="label">&     </code>k1+<code class="constant">1</code>:k2-<code class="constant">2</code>)</a>
    <a href="null_p.html#updatediffusion_mod" target="origFile">bvdiff_ad(:, :, k1+<code class="constant">1</code>:k2-<code class="constant">2</code>) = <code class="constant">0.0_8</code></a>
<a name="do_vert_diffu_admi15"></a>    <a href="null_p.html#updatediffusion_modi52" target="origFile">vdiff_ad(:, :, k1+<code class="constant">1</code>:k2-<code class="constant">2</code>) = vdiff_ad(:, :, k1+<code class="constant">1</code>:k2-<code class="constant">2</code>) - avdiff_ad(:<code class="label">&</code></a>
<a href="null_p.html#updatediffusion_modi52" target="origFile"><code class="label">&     </code>, :, k1+<code class="constant">1</code>:k2-<code class="constant">2</code>)</a>
    <a href="null_p.html#updatediffusion_modi51" target="origFile">vdiff_ad(:, :, k2-<code class="constant">2</code>) = vdiff_ad(:, :, k2-<code class="constant">2</code>) + bvdiff_ad(:, :, k2-<code class="constant">1</code>) <code class="label">&</code></a>
<a href="null_p.html#updatediffusion_modi51" target="origFile"><code class="label">&     </code>- cvdiff_ad(:, :, k2-<code class="constant">1</code>)</a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">CALL </code><code class="funcname">POPCONTROL1B</code>(branch)</a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">IF</code> (branch .EQ. <code class="constant">0</code>) <code class="keyword">THEN</code></a>
<a name="do_vert_diffu_admi0"></a>      <a href="null_p.html#updatediffusion_mod" target="origFile">abs0_ad = <code class="constant">0.0_8</code></a>
      <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">DO </code>ik=<code class="constant">10</code>,<code class="constant">1</code>,<code class="constant">-1</code></a>
        <a href="null_p.html#updatediffusion_modi46" target="origFile"><code class="keyword">CALL </code><code class="funcname">POPREAL8ARRAY</code>(vdiff(:, :, ik), (i2-i1+<code class="constant">1</code>)*(j2-ju1+<code class="constant">1</code>))</a>
        <a href="null_p.html#updatediffusion_modi46" target="origFile">temp4 = hzero2*(press3c(i1:i2, ju1:j2, ik)-press3c(i1:i2, ju1:j2<code class="label">&</code></a>
<a href="null_p.html#updatediffusion_modi46" target="origFile"><code class="label">&         </code>, ik+<code class="constant">1</code>))</a>
        <a href="null_p.html#updatediffusion_modi46" target="origFile">temp_ad = vdiff_ad(:, :, ik)/temp4</a>
        <a href="null_p.html#updatediffusion_modi46" target="origFile">temp3 = press3e(i1:i2, ju1:j2, ik)</a>
        <a href="null_p.html#updatediffusion_modi46" target="origFile">temp_ad0 = -(hzero2*vdiff(:, :, ik)*temp3**<code class="constant">2</code>*temp_ad/temp4)</a>
        <a href="null_p.html#updatediffusion_modi46" target="origFile">press3c_ad(i1:i2, ju1:j2, ik) = press3c_ad(i1:i2, ju1:j2, ik) + <code class="label">&</code></a>
<a href="null_p.html#updatediffusion_modi46" target="origFile"><code class="label">&         </code>temp_ad0</a>
        <a href="null_p.html#updatediffusion_modi46" target="origFile">press3c_ad(i1:i2, ju1:j2, ik+<code class="constant">1</code>) = press3c_ad(i1:i2, ju1:j2, ik+<code class="constant">1</code><code class="label">&</code></a>
<a name="do_vert_diffu_admi2"></a><a href="null_p.html#updatediffusion_modi46" target="origFile"><code class="label">&         </code>) - temp_ad0</a>
<a name="do_vert_diffu_admi3"></a>        <a href="null_p.html#updatediffusion_modi46" target="origFile">vdiff_ad(:, :, ik) = temp3**<code class="constant">2</code>*temp_ad</a>
<a name="do_vert_diffu_admi4"></a>        <a href="null_p.html#updatediffusion_modi44" target="origFile">temp2 = abs0/pbl(:, :)</a>
<a name="do_vert_diffu_admi5"></a>        <a href="null_p.html#updatediffusion_modi43" target="origFile"><code class="keyword">CALL </code><code class="funcname">POPREAL8ARRAY</code>(abs0, (i2-i1+<code class="constant">1</code>)*(j2-ju1+<code class="constant">1</code>))</a>
<a name="do_vert_diffu_admi6"></a>        <a href="null_p.html#updatediffusion_modi42" target="origFile"><code class="keyword">CALL </code><code class="funcname">POPREAL8ARRAY</code>(abs0, (i2-i1+<code class="constant">1</code>)*(j2-ju1+<code class="constant">1</code>))</a>
<a name="do_vert_diffu_admi7"></a>        <a href="null_p.html#updatediffusion_modi41" target="origFile"><code class="keyword">CALL </code><code class="funcname">POPBOOLEANARRAY</code>(mask0, (i2-i1+<code class="constant">1</code>)*(j2-ju1+<code class="constant">1</code>))</a>
        <a href="null_p.html#updatediffusion_modi40" target="origFile"><code class="keyword">CALL </code><code class="funcname">POPBOOLEANARRAY</code>(mask, (i2-i1+<code class="constant">1</code>)*(j2-ju1+<code class="constant">1</code>))</a>
        <a href="null_p.html#updatediffusion_modi39" target="origFile">temp1 = psf(i1:i2, ju1:j2)</a>
        <a href="null_p.html#updatediffusion_modi39" target="origFile">temp0 = press3e(i1:i2, ju1:j2, ik)</a>
        <a href="null_p.html#updatediffusion_modi39" target="origFile">temp = temp0/temp1</a>
        <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">WHERE </code>(.NOT.mask(:, :)) vdiff_ad(:, :, ik) = <code class="constant">0.0_8</code></a>
        <a href="null_p.html#updatediffusion_modi44" target="origFile">vert_diffu_coef_ad = vert_diffu_coef_ad + <code class="funcname">SUM</code>((<code class="constant">1.0d0</code>-<code class="constant">2.0d0</code>*temp2<code class="label">&</code></a>
<a href="null_p.html#updatediffusion_modi44" target="origFile"><code class="label">&         </code>)*vdiff_ad(:, :, ik), <code class="keyword">MASK</code>=mask)</a>
        <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">WHERE </code>(mask(:, :)) </a>
          <a href="null_p.html#updatediffusion_modi44" target="origFile">temp_ad2 = -(vert_diffu_coef*<code class="constant">2.0d0</code>*vdiff_ad(:, :, ik)/pbl(:, :<code class="label">&</code></a>
<a href="null_p.html#updatediffusion_modi44" target="origFile"><code class="label">&           </code>))</a>
          <a href="null_p.html#updatediffusion_modi44" target="origFile">abs0_ad = abs0_ad + temp_ad2</a>
          <a href="null_p.html#updatediffusion_modi44" target="origFile">pbl_ad = pbl_ad - temp2*temp_ad2</a>
          <a href="null_p.html#updatediffusion_mod" target="origFile">vdiff_ad(:, :, ik) = <code class="constant">0.0_8</code></a>
        <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">END WHERE</code></a>
        <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">WHERE </code>(.NOT.mask0(:, :)) </a>
          <a href="null_p.html#updatediffusion_modi43" target="origFile">pbl_ad = pbl_ad + <code class="constant">0.5d0</code>*abs0_ad</a>
          <a href="null_p.html#updatediffusion_modi43" target="origFile">vdiff_ad(:, :, ik) = vdiff_ad(:, :, ik) - abs0_ad</a>
          <a href="null_p.html#updatediffusion_mod" target="origFile">abs0_ad = <code class="constant">0.0_8</code></a>
        <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">ELSEWHERE</code></a>
          <a href="null_p.html#updatediffusion_modi42" target="origFile">vdiff_ad(:, :, ik) = vdiff_ad(:, :, ik) + abs0_ad</a>
          <a href="null_p.html#updatediffusion_modi42" target="origFile">pbl_ad = pbl_ad - <code class="constant">0.5d0</code>*abs0_ad</a>
          <a href="null_p.html#updatediffusion_mod" target="origFile">abs0_ad = <code class="constant">0.0_8</code></a>
        <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">END WHERE</code></a>
        <a href="null_p.html#updatediffusion_modi39" target="origFile">temp_ad1 = -(hzero*vdiff_ad(:, :, ik)/(temp1*temp))</a>
        <a href="null_p.html#updatediffusion_modi46" target="origFile">press3e_ad(i1:i2, ju1:j2, ik) = press3e_ad(i1:i2, ju1:j2, ik) + <code class="label">&</code></a>
<a href="null_p.html#updatediffusion_modi46" target="origFile"><code class="label">&         </code>temp_ad1 + <code class="constant">2</code>*temp3*vdiff(:, :, ik)*temp_ad</a>
        <a href="null_p.html#updatediffusion_modi39" target="origFile">psf_ad(i1:i2, ju1:j2) = psf_ad(i1:i2, ju1:j2) - temp*temp_ad1</a>
        <a href="null_p.html#updatediffusion_mod" target="origFile">vdiff_ad(:, :, ik) = <code class="constant">0.0_8</code></a>
<a name="do_vert_diffu_admi8"></a>      <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">END DO</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">ELSE</code></a>
      <a href="null_p.html#updatediffusion_modi48" target="origFile">temp6 = hzero2*(press3c(i1:i2, ju1:j2, k1:k2-<code class="constant">1</code>)-press3c(i1:i2, ju1<code class="label">&</code></a>
<a href="null_p.html#updatediffusion_modi48" target="origFile"><code class="label">&       </code>:j2, k1+<code class="constant">1</code>:k2))</a>
      <a href="null_p.html#updatediffusion_modi48" target="origFile">temp_ad3 = vdiff_ad(:, :, k1:k2-<code class="constant">1</code>)/temp6</a>
      <a href="null_p.html#updatediffusion_modi48" target="origFile">temp5 = press3e(i1:i2, ju1:j2, k1:k2-<code class="constant">1</code>)</a>
      <a href="null_p.html#updatediffusion_modi48" target="origFile">temp_ad4 = -(hzero2*kzz(:, :, k1:k2-<code class="constant">1</code>)*temp5**<code class="constant">2</code>*temp_ad3/temp6)</a>
      <a href="null_p.html#updatediffusion_modi48" target="origFile">kzz_ad(:, :, k1:k2-<code class="constant">1</code>) = kzz_ad(:, :, k1:k2-<code class="constant">1</code>) + temp5**<code class="constant">2</code>*temp_ad3</a>
      <a href="null_p.html#updatediffusion_modi48" target="origFile">press3e_ad(i1:i2, ju1:j2, k1:k2-<code class="constant">1</code>) = press3e_ad(i1:i2, ju1:j2, k1:<code class="label">&</code></a>
<a href="null_p.html#updatediffusion_modi48" target="origFile"><code class="label">&       </code>k2-<code class="constant">1</code>) + <code class="constant">2</code>*temp5*kzz(:, :, k1:k2-<code class="constant">1</code>)*temp_ad3</a>
      <a href="null_p.html#updatediffusion_modi48" target="origFile">press3c_ad(i1:i2, ju1:j2, k1:k2-<code class="constant">1</code>) = press3c_ad(i1:i2, ju1:j2, k1:<code class="label">&</code></a>
<a href="null_p.html#updatediffusion_modi48" target="origFile"><code class="label">&       </code>k2-<code class="constant">1</code>) + temp_ad4</a>
      <a href="null_p.html#updatediffusion_modi48" target="origFile">press3c_ad(i1:i2, ju1:j2, k1+<code class="constant">1</code>:k2) = press3c_ad(i1:i2, ju1:j2, k1+<code class="label">&</code></a>
<a href="null_p.html#updatediffusion_modi48" target="origFile"><code class="label">&       </code><code class="constant">1</code>:k2) - temp_ad4</a>
<a name="do_vert_diffu"></a>    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">END IF</code></a>
  <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">END SUBROUTINE </code><code class="funcname">DO_VERT_DIFFU_ADM</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!EOP</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!------------------------------------------------------------------------------</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!BOC</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! !IROUTINE: Do_Vert_Diffu</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! !INTERFACE:</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!</code></a>
  <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">SUBROUTINE </code><code class="funcname">DO_VERT_DIFFU</code>(<code class="vardecl">tdt</code>, <code class="vardecl">vert_diffu_coef</code>, <code class="vardecl">pbl</code>, <code class="vardecl">kzz</code>, <code class="vardecl">press3c</code>, <code class="label">&</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="label">&   </code><code class="vardecl">press3e</code>, <code class="vardecl">psf</code>, <code class="vardecl">concentration</code>, <code class="vardecl">isfixedconcentration</code>, <code class="vardecl">mettype</code>, <code class="vardecl">i1</code>, <code class="vardecl">i2</code>, <code class="label">&</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="label">&   </code><code class="vardecl">ju1</code>, <code class="vardecl">j2</code>, <code class="vardecl">k1</code>, <code class="vardecl">k2</code>, <code class="vardecl">ilo</code>, <code class="vardecl">ihi</code>, <code class="vardecl">julo</code>, <code class="vardecl">jhi</code>, <code class="vardecl">numspecies</code>)</a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">IMPLICIT NONE</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! !INPUT PARAMETERS:</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">i1</code>, <code class="vardecl">i2</code>, <code class="vardecl">ju1</code>, <code class="vardecl">j2</code>, <code class="vardecl">k1</code>, <code class="vardecl">k2</code>, <code class="vardecl">ilo</code>, <code class="vardecl">ihi</code>, <code class="vardecl">julo</code>, <code class="vardecl">jhi</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">numspecies</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! model time step (s)</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">tdt</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! scalar vertical diffusion coefficient (m^2/s)</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">vert_diffu_coef</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! planetary boundary layer depth (m)</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">pbl</code>(<code class="vardecl">i1</code>:<code class="vardecl">i2</code>, <code class="vardecl">ju1</code>:<code class="vardecl">j2</code>)</a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! vertical diffusion coefficients (m^2/s)</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">kzz</code>(<code class="vardecl">i1</code>:<code class="vardecl">i2</code>, <code class="vardecl">ju1</code>:<code class="vardecl">j2</code>, <code class="vardecl">k1</code>:<code class="vardecl">k2</code>)</a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! atmospheric pressure at the center of each grid box (mb)</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">press3c</code>(<code class="vardecl">ilo</code>:<code class="vardecl">ihi</code>, <code class="vardecl">julo</code>:<code class="vardecl">jhi</code>, <code class="vardecl">k1</code>:<code class="vardecl">k2</code>)</a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! atmospheric pressure at the edge   of each grid box (mb)</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">press3e</code>(<code class="vardecl">ilo</code>:<code class="vardecl">ihi</code>, <code class="vardecl">julo</code>:<code class="vardecl">jhi</code>, <code class="vardecl">k1</code>-<code class="constant">1</code>:<code class="vardecl">k2</code>)</a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! surface pressure field known at zone centers (mb)</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">psf</code>(<code class="vardecl">ilo</code>:<code class="vardecl">ihi</code>, <code class="vardecl">julo</code>:<code class="vardecl">jhi</code>)</a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">LOGICAL</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">isfixedconcentration</code>(<code class="vardecl">numspecies</code>)</a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">CHARACTER</code>(<code class="keyword">len</code>=esmf_maxstr), <code class="typename">INTENT(IN) </code>:: <code class="vardecl">mettype</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! !INPUT/OUTPUT PARAMETERS:</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">TYPE(T_GMIARRAYBUNDLE)</code>, <code class="typename">INTENT(INOUT) </code>:: <code class="vardecl">concentration</code>(<code class="vardecl">numspecies</code>)</a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! !DECLARED VARIABLES:</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! atmospheric scale height (m)</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8</code>, <code class="typename">PARAMETER </code>:: <code class="vardecl">hzero</code>=<code class="constant">8000.0d0</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! (m^2)</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8</code>, <code class="typename">PARAMETER </code>:: <code class="vardecl">hzero2</code>=<code class="vardecl">hzero</code>*<code class="vardecl">hzero</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! !DESCRIPTION:</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!   Calculates vertical diffusion using an implicit technique.</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!   Note: Constituent mass is conserved during mixing.</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!          Constant field should remain constant.</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! !LOCAL VARIABLES:</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">INTEGER </code>:: <code class="vardecl">ik</code>, <code class="vardecl">ic</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">avdiff</code>(<code class="vardecl">i1</code>:<code class="vardecl">i2</code>, <code class="vardecl">ju1</code>:<code class="vardecl">j2</code>, <code class="vardecl">k1</code>:<code class="vardecl">k2</code>-<code class="constant">1</code>)</a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">bvdiff</code>(<code class="vardecl">i1</code>:<code class="vardecl">i2</code>, <code class="vardecl">ju1</code>:<code class="vardecl">j2</code>, <code class="vardecl">k1</code>:<code class="vardecl">k2</code>-<code class="constant">1</code>)</a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">cvdiff</code>(<code class="vardecl">i1</code>:<code class="vardecl">i2</code>, <code class="vardecl">ju1</code>:<code class="vardecl">j2</code>, <code class="vardecl">k1</code>:<code class="vardecl">k2</code>-<code class="constant">1</code>)</a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">vdiff</code>(<code class="vardecl">i1</code>:<code class="vardecl">i2</code>, <code class="vardecl">ju1</code>:<code class="vardecl">j2</code>, <code class="vardecl">k1</code>:<code class="vardecl">k2</code>-<code class="constant">1</code>)</a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">bb</code>(<code class="vardecl">i1</code>:<code class="vardecl">i2</code>, <code class="vardecl">ju1</code>:<code class="vardecl">j2</code>, <code class="vardecl">k1</code>:<code class="vardecl">k2</code>-<code class="constant">1</code>)</a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">cc</code>(<code class="vardecl">i1</code>:<code class="vardecl">i2</code>, <code class="vardecl">ju1</code>:<code class="vardecl">j2</code>, <code class="vardecl">k1</code>:<code class="vardecl">k2</code>-<code class="constant">1</code>)</a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">rr</code>(<code class="vardecl">i1</code>:<code class="vardecl">i2</code>, <code class="vardecl">ju1</code>:<code class="vardecl">j2</code>, <code class="vardecl">k1</code>:<code class="vardecl">k2</code>-<code class="constant">1</code>)</a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">INTRINSIC </code><code class="funcname">MAXVAL</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">INTRINSIC </code><code class="funcname">LOG</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">INTRINSIC </code><code class="funcname">ABS</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">INTRINSIC </code><code class="funcname">TRIM</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8</code>, DIMENSION(i1:i2, ju1:j2) :: <code class="vardecl">abs0</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">result1</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">LOGICAL</code>, DIMENSION(i2-i1+<code class="constant">1</code>, j2-ju1+<code class="constant">1</code>) :: <code class="vardecl">mask</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="typename">LOGICAL</code>, DIMENSION(i2-i1+<code class="constant">1</code>, j2-ju1+<code class="constant">1</code>) :: <code class="vardecl">mask0</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!EOP</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!------------------------------------------------------------------------------</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!BOC</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile">avdiff(:, :, :) = <code class="constant">0.0d0</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile">bvdiff(:, :, :) = <code class="constant">0.0d0</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile">cvdiff(:, :, :) = <code class="constant">0.0d0</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile">vdiff(:, :, :) = <code class="constant">0.0d0</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile">bb(:, :, :) = <code class="constant">0.0d0</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile">cc(:, :, :) = <code class="constant">0.0d0</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile">rr(:, :, :) = <code class="constant">0.0d0</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! --------------------------------------------------------</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! If there was no kzz in the met file, it was set to &lt; 0.</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! In this case calculate a vertical diffusion coefficient,</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! otherwise use kzz.</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! --------------------------------------------------------</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile">result1 = <code class="funcname">MAXVAL</code>(kzz)</a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">IF</code> (result1 .LT. <code class="constant">0.0d0</code>) <code class="keyword">THEN</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! ------------------------------------------------------</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! Set up the vertical diffusion coefficients.</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! First put height (m) into vdiff, then put simple</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! parameterization for diffusion coefficient into vdiff,</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! then put it into units of per mb</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! ------------------------------------------------------</code></a>
      <a href="null_p.html#updatediffusion_mod" target="origFile">vdiff = <code class="constant">0.0d0</code></a>
      <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">DO </code>ik=<code class="constant">1</code>,<code class="constant">10</code></a>
        <a href="null_p.html#updatediffusion_mod" target="origFile">vdiff(:, :, ik) = -(hzero*<code class="funcname">LOG</code>(press3e(i1:i2, ju1:j2, ik)/psf(i1:<code class="label">&</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="label">&         </code>i2, ju1:j2)))</a>
        <a href="null_p.html#updatediffusion_mod" target="origFile">mask(:, :) = vdiff(:, :, ik) .LT. pbl(:, :)</a>
        <a href="null_p.html#updatediffusion_mod" target="origFile">mask0(:, :) = vdiff(:, :, ik) - pbl(:, :)*<code class="constant">0.5d0 </code>.GE. <code class="constant">0.0</code></a>
        <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">WHERE </code>(mask0(:, :)) </a>
          <a href="null_p.html#updatediffusion_mod" target="origFile">abs0 = vdiff(:, :, ik) - pbl(:, :)*<code class="constant">0.5d0</code></a>
        <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">ELSEWHERE</code></a>
          <a href="null_p.html#updatediffusion_mod" target="origFile">abs0 = -(vdiff(:, :, ik)-pbl(:, :)*<code class="constant">0.5d0</code>)</a>
        <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">END WHERE</code></a>
        <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">WHERE </code>(mask(:, :)) </a>
          <a href="null_p.html#updatediffusion_mod" target="origFile">vdiff(:, :, ik) = vert_diffu_coef*(<code class="constant">1.0d0</code>-<code class="constant">2.0d0</code>*(abs0/pbl(:, :)<code class="label">&</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="label">&           </code>))</a>
        <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">ELSEWHERE</code></a>
          <a href="null_p.html#updatediffusion_mod" target="origFile">vdiff(:, :, ik) = <code class="constant">0.0d0</code></a>
        <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">END WHERE</code></a>
        <a href="null_p.html#updatediffusion_mod" target="origFile">vdiff(:, :, ik) = vdiff(:, :, ik)/hzero2*(press3e(i1:i2, ju1:j2<code class="label">&</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="label">&         </code>, ik)*press3e(i1:i2, ju1:j2, ik))/(press3c(i1:i2, ju1:j2, ik)-<code class="label">&</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="label">&         </code>press3c(i1:i2, ju1:j2, ik+<code class="constant">1</code>))</a>
      <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">END DO</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">ELSE</code></a>
      <a href="null_p.html#updatediffusion_mod" target="origFile">vdiff(:, :, k1:k2-<code class="constant">1</code>) = kzz(:, :, k1:k2-<code class="constant">1</code>)/hzero2*(press3e(i1:i2, <code class="label">&</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="label">&       </code>ju1:j2, k1:k2-<code class="constant">1</code>)*press3e(i1:i2, ju1:j2, k1:k2-<code class="constant">1</code>))/(press3c(i1:i2<code class="label">&</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="label">&       </code>, ju1:j2, k1:k2-<code class="constant">1</code>)-press3c(i1:i2, ju1:j2, k1+<code class="constant">1</code>:k2))</a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">END IF</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! -----------------------------------------------------------</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! Construct the tri-diagonal matrix which will be used in the</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! implicit vertical diffusion solution.</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!   avdiff is the lower band</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!   bvdiff is the main diagonal</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!   cvdiff is the upper band</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! -----------------------------------------------------------</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! -----------------------</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! First do the top layer.</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! -----------------------</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile">avdiff(:, :, k2-<code class="constant">1</code>) = <code class="constant">0.0d0</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile">bvdiff(:, :, k2-<code class="constant">1</code>) = vdiff(:, :, k2-<code class="constant">2</code>)</a>
    <a href="null_p.html#updatediffusion_mod" target="origFile">cvdiff(:, :, k2-<code class="constant">1</code>) = -vdiff(:, :, k2-<code class="constant">2</code>)</a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! ----------------------</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! Now do all the layers.</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! ----------------------</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile">avdiff(:, :, k1+<code class="constant">1</code>:k2-<code class="constant">2</code>) = -vdiff(:, :, k1+<code class="constant">1</code>:k2-<code class="constant">2</code>)</a>
    <a href="null_p.html#updatediffusion_mod" target="origFile">bvdiff(:, :, k1+<code class="constant">1</code>:k2-<code class="constant">2</code>) = vdiff(:, :, k1+<code class="constant">1</code>:k2-<code class="constant">2</code>) + vdiff(:, :, k1:k2<code class="label">&</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="label">&     </code>-<code class="constant">3</code>)</a>
    <a href="null_p.html#updatediffusion_mod" target="origFile">cvdiff(:, :, k1+<code class="constant">1</code>:k2-<code class="constant">2</code>) = -vdiff(:, :, k1:k2-<code class="constant">3</code>)</a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! ------------------------------------</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! Now do the layer next to the ground.</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! ------------------------------------</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile">avdiff(:, :, k1) = -vdiff(:, :, k1)</a>
    <a href="null_p.html#updatediffusion_mod" target="origFile">bvdiff(:, :, k1) = vdiff(:, :, k1)</a>
    <a href="null_p.html#updatediffusion_mod" target="origFile">cvdiff(:, :, k1) = <code class="constant">0.0d0</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! ---------------------------------------------------</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! Now convert them to the proper dimensionless units.</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! ---------------------------------------------------</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">IF</code> (<code class="funcname">TRIM</code>(mettype) .EQ. <code class="string">'MERRA2' </code>.OR. <code class="funcname">TRIM</code>(mettype) .EQ. <code class="string">'FPIT'</code>) <code class="keyword">THEN</code></a>
      <a href="null_p.html#updatediffusion_mod" target="origFile">avdiff(i1:i2, ju1:j2, k1:k2-<code class="constant">1</code>) = avdiff(i1:i2, ju1:j2, k1:k2-<code class="constant">1</code>)*<code class="label">&</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="label">&       </code>tdt/(press3e(i1:i2, ju1:j2, k1:k2-<code class="constant">1</code>)-press3e(i1:i2, ju1:j2, k1+<code class="constant">1</code><code class="label">&</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="label">&       </code>:k2))</a>
      <a href="null_p.html#updatediffusion_mod" target="origFile">bvdiff(i1:i2, ju1:j2, k1:k2-<code class="constant">1</code>) = bvdiff(i1:i2, ju1:j2, k1:k2-<code class="constant">1</code>)*<code class="label">&</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="label">&       </code>tdt/(press3e(i1:i2, ju1:j2, k1:k2-<code class="constant">1</code>)-press3e(i1:i2, ju1:j2, k1+<code class="constant">1</code><code class="label">&</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="label">&       </code>:k2)) + <code class="constant">1.0d0</code></a>
      <a href="null_p.html#updatediffusion_mod" target="origFile">cvdiff(i1:i2, ju1:j2, k1:k2-<code class="constant">1</code>) = cvdiff(i1:i2, ju1:j2, k1:k2-<code class="constant">1</code>)*<code class="label">&</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="label">&       </code>tdt/(press3e(i1:i2, ju1:j2, k1:k2-<code class="constant">1</code>)-press3e(i1:i2, ju1:j2, k1+<code class="constant">1</code><code class="label">&</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="label">&       </code>:k2))</a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">ELSE IF</code> (<code class="funcname">TRIM</code>(mettype) .EQ. <code class="string">'MERRA1'</code>) <code class="keyword">THEN</code></a>
      <a href="null_p.html#updatediffusion_mod" target="origFile">avdiff(i1:i2, ju1:j2, k1:k2-<code class="constant">1</code>) = avdiff(i1:i2, ju1:j2, k1:k2-<code class="constant">1</code>)*<code class="label">&</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="label">&       </code>tdt/(press3e(i1:i2, ju1:j2, k1-<code class="constant">1</code>:k2-<code class="constant">2</code>)-press3e(i1:i2, ju1:j2, k1<code class="label">&</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="label">&       </code>:k2-<code class="constant">1</code>))</a>
      <a href="null_p.html#updatediffusion_mod" target="origFile">bvdiff(i1:i2, ju1:j2, k1:k2-<code class="constant">1</code>) = bvdiff(i1:i2, ju1:j2, k1:k2-<code class="constant">1</code>)*<code class="label">&</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="label">&       </code>tdt/(press3e(i1:i2, ju1:j2, k1-<code class="constant">1</code>:k2-<code class="constant">2</code>)-press3e(i1:i2, ju1:j2, k1<code class="label">&</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="label">&       </code>:k2-<code class="constant">1</code>)) + <code class="constant">1.0d0</code></a>
      <a href="null_p.html#updatediffusion_mod" target="origFile">cvdiff(i1:i2, ju1:j2, k1:k2-<code class="constant">1</code>) = cvdiff(i1:i2, ju1:j2, k1:k2-<code class="constant">1</code>)*<code class="label">&</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="label">&       </code>tdt/(press3e(i1:i2, ju1:j2, k1-<code class="constant">1</code>:k2-<code class="constant">2</code>)-press3e(i1:i2, ju1:j2, k1<code class="label">&</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="label">&       </code>:k2-<code class="constant">1</code>))</a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">END IF</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! ---------------------</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! Now solve the system.</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! ---------------------</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="label">icloop:</code><code class="keyword">DO </code>ic=<code class="constant">1</code>,numspecies</a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!   ======================================</code></a>
      <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">IF</code> (.NOT.isfixedconcentration(ic)) <code class="keyword">THEN</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">!   ======================================</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! -----------------------------------------</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! Set up the right hand side of the system.</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! -----------------------------------------</code></a>
        <a href="null_p.html#updatediffusion_mod" target="origFile">bb(:, :, k2-<code class="constant">1</code>) = bvdiff(:, :, k2-<code class="constant">1</code>)</a>
        <a href="null_p.html#updatediffusion_mod" target="origFile">rr(:, :, k2-<code class="constant">1</code>) = concentration(ic)%parray3d(:, :, k2-<code class="constant">1</code>)</a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! ---------------------------------</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! Eliminate the lower diagonal (a).</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! ---------------------------------</code></a>
        <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">DO </code>ik=k2-<code class="constant">1</code>,k1+<code class="constant">1</code>,-<code class="constant">1</code></a>
          <a href="null_p.html#updatediffusion_mod" target="origFile">cc(:, :, ik) = cvdiff(:, :, ik)/bb(:, :, ik)</a>
          <a href="null_p.html#updatediffusion_mod" target="origFile">rr(:, :, ik) = rr(:, :, ik)/bb(:, :, ik)</a>
          <a href="null_p.html#updatediffusion_mod" target="origFile">bb(:, :, ik-<code class="constant">1</code>) = bvdiff(:, :, ik-<code class="constant">1</code>) - avdiff(:, :, ik-<code class="constant">1</code>)*cc(:<code class="label">&</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="label">&           </code>, :, ik)</a>
          <a href="null_p.html#updatediffusion_mod" target="origFile">rr(:, :, ik-<code class="constant">1</code>) = concentration(ic)%parray3d(:, :, ik-<code class="constant">1</code>) - <code class="label">&</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="label">&           </code>avdiff(:, :, ik-<code class="constant">1</code>)*rr(:, :, ik)</a>
        <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">END DO</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! -------------------------------</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! Solve for the new mixing ratio.</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="comment">! -------------------------------</code></a>
        <a href="null_p.html#updatediffusion_mod" target="origFile">concentration(ic)%parray3d(:, :, k1) = rr(:, :, k1)/bb(:, :, k1)</a>
        <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">DO </code>ik=k1+<code class="constant">1</code>,k2-<code class="constant">1</code></a>
          <a href="null_p.html#updatediffusion_mod" target="origFile">concentration(ic)%parray3d(:, :, ik) = rr(:, :, ik) - <code class="label">&</code></a>
<a href="null_p.html#updatediffusion_mod" target="origFile"><code class="label">&           </code>concentration(ic)%parray3d(:, :, ik-<code class="constant">1</code>)*cc(:, :, ik)</a>
        <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">END DO</code></a>
      <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">END IF</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">END DO </code><code class="label">icloop</code></a>
    <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">RETURN</code></a>
  <a href="null_p.html#updatediffusion_mod" target="origFile"><code class="keyword">END SUBROUTINE </code><code class="funcname">DO_VERT_DIFFU</code></a>
<code class="keyword">END MODULE </code><code class="funcname">UPDATEDIFFUSION_MOD_B</code>
</pre>
</body>
