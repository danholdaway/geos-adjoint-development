<title>Generated by TAPENADE</title>
<link type="text/CSS" rel="stylesheet" href="tapenade.css">
<link type="text/CSS" rel="stylesheet" href="fortranStyle.css">
<body>
<pre><code class="comment">!        Generated by TAPENADE     (INRIA, Ecuador team)</code>
<code class="comment">!  Tapenade 3.12 (r6213) - 13 Oct 2016 10:30</code>
<code class="comment">!</code>
<code class="comment">!-------------------------------------------------------------------------</code>
<code class="comment">!         NASA/GSFC, Software Systems Support Office, Code 610.3         !</code>
<code class="comment">!-------------------------------------------------------------------------</code>
<code class="comment">!BOP</code>
<code class="comment">!</code>
<code class="comment">! !MODULE: convectiveTransport_mod </code>
<code class="comment">!</code>
<code class="comment">! !INTERFACE:</code>
<code class="comment">!</code>
<code class="keyword">MODULE </code><code class="funcname">CONVECTIVETRANSPORT_MOD_D</code>
  <code class="keyword">IMPLICIT NONE</code>
<code class="comment">!EOC</code>
<code class="comment">!------------------------------------------------------------------------------</code>
  PRIVATE 
  PUBLIC convectivetransport
  PUBLIC convectivetransport_tlm
<a name="convectivetransport_tlm"></a>
<code class="keyword">CONTAINS</code>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">!  Differentiation of convectivetransport in forward (tangent) mode:</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">!   variations   of useful results: qq</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">!   with respect to varying inputs: qq</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">! !DESCRIPTION:</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">! Module for the convective transport.</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">!EOP</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">!-----------------------------------------------------------------------------</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">!-----------------------------------------------------------------------------</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">!BOP</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">! !IROUTINE: convectiveTransport</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">! !INTERFACE:</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">!</code></a>
  <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="keyword">SUBROUTINE </code><code class="funcname">CONVECTIVETRANSPORT_TLM</code>(<code class="vardecl">il2g</code>, <code class="vardecl">delt</code>, <code class="vardecl">xmbsth</code>, <code class="vardecl">ideep</code>, <code class="vardecl">pbli</code>, <code class="label">&</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="label">&   </code><code class="vardecl">dui</code>, <code class="vardecl">eui</code>, <code class="vardecl">mui</code>, <code class="vardecl">mdi</code>, <code class="vardecl">dpi</code>, <code class="vardecl">fracis</code>, <code class="vardecl">qq</code>, <code class="vardecl">qq_tl</code>, <code class="vardecl">isfixedconcentration</code>, <code class="vardecl">i1</code><code class="label">&</code></a>
<a name="convectivetransport_tlmi0"></a><a href="null_p.html#convectivetransport_mod" target="origFile"><code class="label">&   </code>, <code class="vardecl">i2</code>, <code class="vardecl">k1</code>, <code class="vardecl">k2</code>, <code class="vardecl">ilong</code>, <code class="vardecl">numspecies</code>)</a>
    <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="keyword">IMPLICIT NONE</code></a>
<a href="null_p.html#convectivetransport_modi0" target="origFile"><code class="comment">!</code></a>
<a name="convectivetransport_tlmi1"></a><a href="null_p.html#convectivetransport_modi0" target="origFile"><code class="comment">! !INPUT PARAMETERS</code></a>
<a name="convectivetransport_tlmi2"></a>    <a href="null_p.html#convectivetransport_modi0" target="origFile"><code class="typename">LOGICAL</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">isfixedconcentration</code>(:)</a>
    <a href="null_p.html#convectivetransport_modi1" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">i1</code>, <code class="vardecl">i2</code>, <code class="vardecl">k1</code>, <code class="vardecl">k2</code>, <code class="vardecl">ilong</code>, <code class="vardecl">numspecies</code></a>
<a name="convectivetransport_tlmi3"></a><a href="null_p.html#convectivetransport_modi2" target="origFile"><code class="comment">! gathered max lon indices over which to operate</code></a>
    <a href="null_p.html#convectivetransport_modi2" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">il2g</code></a>
<a name="convectivetransport_tlmi4"></a><a href="null_p.html#convectivetransport_modi3" target="origFile"><code class="comment">! convection time step (s)</code></a>
    <a href="null_p.html#convectivetransport_modi3" target="origFile"><code class="typename">REAL*8</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">delt</code></a>
<a name="convectivetransport_tlmi5"></a><a href="null_p.html#convectivetransport_modi4" target="origFile"><code class="comment">! threshold below which we treat mass fluxes as zero (mb/s)</code></a>
    <a href="null_p.html#convectivetransport_modi4" target="origFile"><code class="typename">REAL*8</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">xmbsth</code></a>
<a name="convectivetransport_tlmi6"></a><a href="null_p.html#convectivetransport_modi5" target="origFile"><code class="comment">! gathering array</code></a>
    <a href="null_p.html#convectivetransport_modi5" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">ideep</code>(<code class="vardecl">ilong</code>)</a>
<a name="convectivetransport_tlmi7"></a><a href="null_p.html#convectivetransport_modi6" target="origFile"><code class="comment">! index of planetary boundary layer</code></a>
    <a href="null_p.html#convectivetransport_modi6" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">pbli</code>(<code class="vardecl">ilong</code>)</a>
<a name="convectivetransport_tlmi8"></a><a href="null_p.html#convectivetransport_modi7" target="origFile"><code class="comment">! mass detraining from updraft</code></a>
    <a href="null_p.html#convectivetransport_modi7" target="origFile"><code class="typename">REAL*8</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">dui</code>(<code class="vardecl">ilong</code>, <code class="vardecl">k1</code>:<code class="vardecl">k2</code>)</a>
<a name="convectivetransport_tlmi9"></a><a href="null_p.html#convectivetransport_modi8" target="origFile"><code class="comment">! mass entraining into updraft</code></a>
    <a href="null_p.html#convectivetransport_modi8" target="origFile"><code class="typename">REAL*8</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">eui</code>(<code class="vardecl">ilong</code>, <code class="vardecl">k1</code>:<code class="vardecl">k2</code>)</a>
<a name="convectivetransport_tlmi10"></a><a href="null_p.html#convectivetransport_modi9" target="origFile"><code class="comment">! mass flux up</code></a>
    <a href="null_p.html#convectivetransport_modi9" target="origFile"><code class="typename">REAL*8</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">mui</code>(<code class="vardecl">ilong</code>, <code class="vardecl">k1</code>:<code class="vardecl">k2</code>)</a>
<a name="convectivetransport_tlmi11"></a><a href="null_p.html#convectivetransport_modi10" target="origFile"><code class="comment">! mass flux down</code></a>
    <a href="null_p.html#convectivetransport_modi10" target="origFile"><code class="typename">REAL*8</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">mdi</code>(<code class="vardecl">ilong</code>, <code class="vardecl">k1</code>:<code class="vardecl">k2</code>)</a>
<a name="convectivetransport_tlmi12"></a><a href="null_p.html#convectivetransport_modi11" target="origFile"><code class="comment">! delta pressure between interfaces</code></a>
    <a href="null_p.html#convectivetransport_modi11" target="origFile"><code class="typename">REAL*8</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">dpi</code>(<code class="vardecl">ilong</code>, <code class="vardecl">k1</code>:<code class="vardecl">k2</code>)</a>
<a name="convectivetransport_tlmi13"></a><a href="null_p.html#convectivetransport_modi12" target="origFile"><code class="comment">! insoluble fraction of tracer</code></a>
    <a href="null_p.html#convectivetransport_modi12" target="origFile"><code class="typename">REAL*8</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">fracis</code>(<code class="vardecl">i1</code>:<code class="vardecl">i2</code>, <code class="vardecl">k1</code>:<code class="vardecl">k2</code>, <code class="vardecl">numspecies</code>)</a>
<a href="null_p.html#convectivetransport_modi13" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#convectivetransport_modi13" target="origFile"><code class="comment">! !INPUT/OUTPUT PARAMETERS:</code></a>
<a href="null_p.html#convectivetransport_modi13" target="origFile"><code class="comment">! tracer array including moisture (mixing ratio)</code></a>
<a name="convectivetransport_tlmi14"></a>    <a href="null_p.html#convectivetransport_modi13" target="origFile"><code class="typename">REAL*8</code>, <code class="typename">INTENT(INOUT) </code>:: <code class="vardecl">qq</code>(<code class="vardecl">i1</code>:<code class="vardecl">i2</code>, <code class="vardecl">k1</code>:<code class="vardecl">k2</code>, <code class="vardecl">numspecies</code>)</a>
    <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="typename">REAL*8</code>, <code class="typename">INTENT(INOUT) </code>:: <code class="vardecl">qq_tl</code>(<code class="vardecl">i1</code>:<code class="vardecl">i2</code>, <code class="vardecl">k1</code>:<code class="vardecl">k2</code>, <code class="vardecl">numspecies</code>)</a>
<a href="null_p.html#convectivetransport_modi14" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#convectivetransport_modi14" target="origFile"><code class="comment">! !DESCRIPTION:</code></a>
<a href="null_p.html#convectivetransport_modi14" target="origFile"><code class="comment">! This routine performs convective transport of trace species.</code></a>
<a href="null_p.html#convectivetransport_modi14" target="origFile"><code class="comment">! Note that we assume that the tracers are in a moist mixing ratio.</code></a>
<a href="null_p.html#convectivetransport_modi14" target="origFile"><code class="comment">!</code></a>
<a name="convectivetransport_tlmi15"></a><a href="null_p.html#convectivetransport_modi14" target="origFile"><code class="comment">! !DEFINED PARAMETERS:</code></a>
    <a href="null_p.html#convectivetransport_modi14" target="origFile"><code class="typename">REAL*8</code>, <code class="typename">PARAMETER </code>:: <code class="vardecl">small</code>=<code class="constant">1.0d-36</code></a>
<a href="null_p.html#convectivetransport_modi15" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#convectivetransport_modi15" target="origFile"><code class="comment">!EOP</code></a>
<a href="null_p.html#convectivetransport_modi15" target="origFile"><code class="comment">!-----------------------------------------------------------------------------</code></a>
<a href="null_p.html#convectivetransport_modi15" target="origFile"><code class="comment">!BOC</code></a>
<a href="null_p.html#convectivetransport_modi15" target="origFile"><code class="comment">!</code></a>
<a name="convectivetransport_tlmi16"></a><a href="null_p.html#convectivetransport_modi15" target="origFile"><code class="comment">! !LOCAL VARIABLES:</code></a>
<a name="convectivetransport_tlmi17"></a>    <a href="null_p.html#convectivetransport_modi15" target="origFile"><code class="typename">CHARACTER</code>(<code class="keyword">len</code>=<code class="constant">75</code>) :: <code class="vardecl">err_msg</code></a>
<a name="convectivetransport_tlmi18"></a>    <a href="null_p.html#convectivetransport_modi16" target="origFile"><code class="typename">INTEGER </code>:: <code class="vardecl">il</code>, <code class="vardecl">ik</code>, <code class="vardecl">ic</code></a>
    <a href="null_p.html#convectivetransport_modi17" target="origFile"><code class="typename">INTEGER </code>:: <code class="vardecl">km1</code>, <code class="vardecl">kp1</code></a>
<a href="null_p.html#convectivetransport_modi18" target="origFile"><code class="comment">! average mixing ratio in pbl</code></a>
<a name="convectivetransport_tlmi19"></a>    <a href="null_p.html#convectivetransport_modi18" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">avg_pbl</code></a>
    <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">avg_pbl_tl</code></a>
<a href="null_p.html#convectivetransport_modi19" target="origFile"><code class="comment">! mix ratio of constituent above</code></a>
<a name="convectivetransport_tlmi20"></a>    <a href="null_p.html#convectivetransport_modi19" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">cabv</code></a>
    <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">cabv_tl</code></a>
<a href="null_p.html#convectivetransport_modi20" target="origFile"><code class="comment">! mix ratio of constituent below</code></a>
<a name="convectivetransport_tlmi21"></a>    <a href="null_p.html#convectivetransport_modi20" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">cbel</code></a>
    <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">cbel_tl</code></a>
<a name="convectivetransport_tlmi22"></a><a href="null_p.html#convectivetransport_modi21" target="origFile"><code class="comment">! normalized diff. between cabv and cbel</code></a>
    <a href="null_p.html#convectivetransport_modi21" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">cdifr</code></a>
<a href="null_p.html#convectivetransport_modi22" target="origFile"><code class="comment">! flux coming into  each box at a k level</code></a>
<a name="convectivetransport_tlmi23"></a>    <a href="null_p.html#convectivetransport_modi22" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">fluxin</code></a>
    <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">fluxin_tl</code></a>
<a href="null_p.html#convectivetransport_modi23" target="origFile"><code class="comment">! flux going out of each box at a k level</code></a>
<a name="convectivetransport_tlmi24"></a>    <a href="null_p.html#convectivetransport_modi23" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">fluxout</code></a>
    <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">fluxout_tl</code></a>
<a name="convectivetransport_tlmi25"></a>    <a href="null_p.html#convectivetransport_modi24" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">maxc</code></a>
<a name="convectivetransport_tlmi26"></a>    <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">maxc_tl</code></a>
    <a href="null_p.html#convectivetransport_modi25" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">minc</code></a>
<a href="null_p.html#convectivetransport_modi26" target="origFile"><code class="comment">! mixing ratio of a scavenged tracer</code></a>
<a name="convectivetransport_tlmi27"></a>    <a href="null_p.html#convectivetransport_modi26" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">scav</code></a>
<a name="convectivetransport_tlmi28"></a>    <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">scav_tl</code></a>
    <a href="null_p.html#convectivetransport_modi27" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">sqrt_fisg</code></a>
<a href="null_p.html#convectivetransport_modi28" target="origFile"><code class="comment">!.sds - new temp variable for updraft concen calc</code></a>
<a name="convectivetransport_tlmi29"></a>    <a href="null_p.html#convectivetransport_modi28" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">temp_conu</code></a>
    <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">temp_conu_tl</code></a>
<a href="null_p.html#convectivetransport_modi29" target="origFile"><code class="comment">! mix ratio in env.      at interfaces</code></a>
<a name="convectivetransport_tlmi30"></a>    <a href="null_p.html#convectivetransport_modi29" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">chat</code>(<code class="vardecl">il2g</code>, <code class="vardecl">k1</code>:<code class="vardecl">k2</code>)</a>
    <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">chat_tl</code>(<code class="vardecl">il2g</code>, <code class="vardecl">k1</code>:<code class="vardecl">k2</code>)</a>
<a href="null_p.html#convectivetransport_modi30" target="origFile"><code class="comment">! mix ratio in updraft   at interfaces</code></a>
<a name="convectivetransport_tlmi31"></a>    <a href="null_p.html#convectivetransport_modi30" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">conu</code>(<code class="vardecl">il2g</code>, <code class="vardecl">k1</code>:<code class="vardecl">k2</code>)</a>
    <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">conu_tl</code>(<code class="vardecl">il2g</code>, <code class="vardecl">k1</code>:<code class="vardecl">k2</code>)</a>
<a href="null_p.html#convectivetransport_modi31" target="origFile"><code class="comment">! mix ratio in downdraft at interfaces</code></a>
<a name="convectivetransport_tlmi32"></a>    <a href="null_p.html#convectivetransport_modi31" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">cond</code>(<code class="vardecl">il2g</code>, <code class="vardecl">k1</code>:<code class="vardecl">k2</code>)</a>
    <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">cond_tl</code>(<code class="vardecl">il2g</code>, <code class="vardecl">k1</code>:<code class="vardecl">k2</code>)</a>
<a href="null_p.html#convectivetransport_modi32" target="origFile"><code class="comment">! gathered tend.  array</code></a>
<a name="convectivetransport_tlmi33"></a>    <a href="null_p.html#convectivetransport_modi32" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">dcondt</code>(<code class="vardecl">il2g</code>, <code class="vardecl">k1</code>:<code class="vardecl">k2</code>)</a>
    <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">dcondt_tl</code>(<code class="vardecl">il2g</code>, <code class="vardecl">k1</code>:<code class="vardecl">k2</code>)</a>
<a name="convectivetransport_tlmi34"></a><a href="null_p.html#convectivetransport_modi33" target="origFile"><code class="comment">! gathered downdraft entrainment</code></a>
    <a href="null_p.html#convectivetransport_modi33" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">edi</code>(<code class="vardecl">il2g</code>, <code class="vardecl">k1</code>:<code class="vardecl">k2</code>)</a>
<a name="convectivetransport_tlmi35"></a><a href="null_p.html#convectivetransport_modi34" target="origFile"><code class="comment">! gathered insoluble frac. of tracer</code></a>
    <a href="null_p.html#convectivetransport_modi34" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">fisg</code>(<code class="vardecl">il2g</code>, <code class="vardecl">k1</code>:<code class="vardecl">k2</code>)</a>
<a href="null_p.html#convectivetransport_modi35" target="origFile"><code class="comment">! gathered tracer array</code></a>
<a name="convectivetransport_tlmi36"></a>    <a href="null_p.html#convectivetransport_modi35" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">xconst</code>(<code class="vardecl">il2g</code>, <code class="vardecl">k1</code>:<code class="vardecl">k2</code>)</a>
<a name="convectivetransport_tlmi37"></a>    <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">xconst_tl</code>(<code class="vardecl">il2g</code>, <code class="vardecl">k1</code>:<code class="vardecl">k2</code>)</a>
<a name="convectivetransport_tlmi38"></a>    <a href="null_p.html#convectivetransport_modi36" target="origFile"><code class="keyword">INTRINSIC </code><code class="funcname">MAX</code></a>
<a name="convectivetransport_tlmi39"></a>    <a href="null_p.html#convectivetransport_modi37" target="origFile"><code class="keyword">INTRINSIC </code><code class="funcname">MIN</code></a>
<a name="convectivetransport_tlmi40"></a>    <a href="null_p.html#convectivetransport_modi38" target="origFile"><code class="keyword">INTRINSIC </code><code class="funcname">ABS</code></a>
<a name="convectivetransport_tlmi41"></a>    <a href="null_p.html#convectivetransport_modi39" target="origFile"><code class="keyword">INTRINSIC </code><code class="funcname">LOG</code></a>
<a name="convectivetransport_tlmi42"></a>    <a href="null_p.html#convectivetransport_modi40" target="origFile"><code class="keyword">INTRINSIC </code><code class="funcname">SUM</code></a>
<a name="convectivetransport_tlmi43"></a>    <a href="null_p.html#convectivetransport_modi41" target="origFile"><code class="keyword">INTRINSIC </code><code class="funcname">SQRT</code></a>
    <a href="null_p.html#convectivetransport_modi42" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">abs0</code></a>
<a name="convectivetransport_tlmi44"></a>    <a href="null_p.html#convectivetransport_modi43" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">min1</code></a>
<a name="convectivetransport_tlmi45"></a>    <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">min1_tl</code></a>
    <a href="null_p.html#convectivetransport_modi44" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">abs1</code></a>
<a name="convectivetransport_tlmi46"></a>    <a href="null_p.html#convectivetransport_modi45" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">min2</code></a>
    <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">min2_tl</code></a>
<a name="convectivetransport_tlmi47"></a>    <a href="null_p.html#convectivetransport_modi46" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">min3</code></a>
<a name="convectivetransport_tlmi48"></a>    <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">min3_tl</code></a>
    <a href="null_p.html#convectivetransport_modi47" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">max1</code></a>
    <a href="null_p.html#convectivetransport_modi48" target="origFile"><code class="typename">REAL*8</code>, DIMENSION((pbli(il)-k2)/(-<code class="constant">1</code>)+<code class="constant">1</code>) :: <code class="vardecl">arg1</code></a>
    <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="typename">REAL*8</code>, DIMENSION((pbli(il)-k2)/(-<code class="constant">1</code>)+<code class="constant">1</code>) :: <code class="vardecl">arg1_tl</code></a>
    <a href="null_p.html#convectivetransport_mod" target="origFile">conu_tl = <code class="constant">0.0_8</code></a>
    <a href="null_p.html#convectivetransport_mod" target="origFile">dcondt_tl = <code class="constant">0.0_8</code></a>
    <a href="null_p.html#convectivetransport_mod" target="origFile">chat_tl = <code class="constant">0.0_8</code></a>
<a name="convectivetransport_tlmi49"></a>    <a href="null_p.html#convectivetransport_mod" target="origFile">cond_tl = <code class="constant">0.0_8</code></a>
<a name="convectivetransport_tlmi50"></a>    <a href="null_p.html#convectivetransport_mod" target="origFile">xconst_tl = <code class="constant">0.0_8</code></a>
<a name="convectivetransport_tlmi54"></a><a href="null_p.html#convectivetransport_modi49" target="origFile"><code class="label">icloop:</code><code class="keyword">DO </code>ic=<code class="constant">1</code>,numspecies</a>
      <a href="null_p.html#convectivetransport_modi50" target="origFile"><code class="keyword">IF</code> (.NOT.isfixedconcentration(ic)) <code class="keyword">THEN</code></a>
<a href="null_p.html#convectivetransport_modi54" target="origFile"><code class="comment">! ------------------------------------------------</code></a>
<a href="null_p.html#convectivetransport_modi54" target="origFile"><code class="comment">! Gather up the constituent and set tend. to zero.</code></a>
<a name="convectivetransport_tlmi53"></a><a href="null_p.html#convectivetransport_modi54" target="origFile"><code class="comment">! ------------------------------------------------</code></a>
<a name="convectivetransport_tlmi51"></a>        <a href="null_p.html#convectivetransport_modi54" target="origFile"><code class="keyword">DO </code>ik=k1,k2</a>
<a name="convectivetransport_tlmi52"></a>          <a href="null_p.html#convectivetransport_modi53" target="origFile"><code class="keyword">DO </code>il=<code class="constant">1</code>,il2g</a>
<a name="convectivetransport_tlmi52"></a>            <a href="null_p.html#convectivetransport_modi51" target="origFile">fisg(il, ik) = fracis(ideep(il), ik, ic)</a>
            <a href="null_p.html#convectivetransport_modi52" target="origFile">xconst_tl(il, ik) = qq_tl(ideep(il), ik, ic)</a>
            <a href="null_p.html#convectivetransport_modi52" target="origFile">xconst(il, ik) = qq(ideep(il), ik, ic)</a>
<a name="convectivetransport_tlmi90"></a>          <a href="null_p.html#convectivetransport_modi53" target="origFile"><code class="keyword">END DO</code></a>
        <a href="null_p.html#convectivetransport_modi54" target="origFile"><code class="keyword">END DO</code></a>
<a href="null_p.html#convectivetransport_modi90" target="origFile"><code class="comment">! -----------------------------------------</code></a>
<a href="null_p.html#convectivetransport_modi90" target="origFile"><code class="comment">! From now on work only with gathered data.</code></a>
<a href="null_p.html#convectivetransport_modi90" target="origFile"><code class="comment">! -----------------------------------------</code></a>
<a href="null_p.html#convectivetransport_modi90" target="origFile"><code class="comment">! ----------------------------------------------------</code></a>
<a href="null_p.html#convectivetransport_modi90" target="origFile"><code class="comment">! Interpolate environment tracer values to interfaces.</code></a>
<a name="convectivetransport_tlmi55"></a><a href="null_p.html#convectivetransport_modi90" target="origFile"><code class="comment">! ----------------------------------------------------</code></a>
<a name="convectivetransport_tlmi56"></a><a href="null_p.html#convectivetransport_modi90" target="origFile"><code class="label">ikloop1:</code><code class="keyword">DO </code>ik=k1,k2</a>
          <a href="null_p.html#convectivetransport_modi55" target="origFile"><code class="keyword">IF</code> (k1 .LT. ik - <code class="constant">1</code>) <code class="keyword">THEN</code></a>
<a name="convectivetransport_tlmi57"></a>            <a href="null_p.html#convectivetransport_modi56" target="origFile">km1 = ik - <code class="constant">1</code></a>
          <a href="null_p.html#convectivetransport_modi55" target="origFile"><code class="keyword">ELSE</code></a>
<a name="convectivetransport_tlmi58"></a>            <a href="null_p.html#convectivetransport_modi57" target="origFile">km1 = k1</a>
<a name="convectivetransport_tlmi59"></a>          <a href="null_p.html#convectivetransport_modi55" target="origFile"><code class="keyword">END IF</code></a>
          <a href="null_p.html#convectivetransport_modi58" target="origFile"><code class="keyword">IF</code> (k2 .GT. ik + <code class="constant">1</code>) <code class="keyword">THEN</code></a>
<a name="convectivetransport_tlmi60"></a>            <a href="null_p.html#convectivetransport_modi59" target="origFile">kp1 = ik + <code class="constant">1</code></a>
          <a href="null_p.html#convectivetransport_modi58" target="origFile"><code class="keyword">ELSE</code></a>
<a name="convectivetransport_tlmi61"></a>            <a href="null_p.html#convectivetransport_modi60" target="origFile">kp1 = k2</a>
<a name="convectivetransport_tlmi89"></a>          <a href="null_p.html#convectivetransport_modi58" target="origFile"><code class="keyword">END IF</code></a>
<a name="convectivetransport_tlmi62"></a>          <a href="null_p.html#convectivetransport_modi61" target="origFile">edi(:, ik) = mdi(:, ik) - mdi(:, kp1)</a>
<a name="convectivetransport_tlmi63"></a>  <a href="null_p.html#convectivetransport_modi89" target="origFile"><code class="label">illoop1:</code><code class="keyword">DO </code>il=<code class="constant">1</code>,il2g</a>
            <a href="null_p.html#convectivetransport_modi62" target="origFile"><code class="keyword">IF</code> (xconst(il, km1) .GT. xconst(il, ik)) <code class="keyword">THEN</code></a>
<a name="convectivetransport_tlmi64"></a>              <a href="null_p.html#convectivetransport_modi63" target="origFile">minc = xconst(il, ik)</a>
            <a href="null_p.html#convectivetransport_modi62" target="origFile"><code class="keyword">ELSE</code></a>
<a name="convectivetransport_tlmi65"></a>              <a href="null_p.html#convectivetransport_modi64" target="origFile">minc = xconst(il, km1)</a>
<a name="convectivetransport_tlmi66"></a>            <a href="null_p.html#convectivetransport_modi62" target="origFile"><code class="keyword">END IF</code></a>
<a name="convectivetransport_tlmi66"></a>            <a href="null_p.html#convectivetransport_modi65" target="origFile"><code class="keyword">IF</code> (xconst(il, km1) .LT. xconst(il, ik)) <code class="keyword">THEN</code></a>
              <a href="null_p.html#convectivetransport_modi66" target="origFile">maxc_tl = xconst_tl(il, ik)</a>
<a name="convectivetransport_tlmi67"></a>              <a href="null_p.html#convectivetransport_modi66" target="origFile">maxc = xconst(il, ik)</a>
<a name="convectivetransport_tlmi67"></a>            <a href="null_p.html#convectivetransport_modi65" target="origFile"><code class="keyword">ELSE</code></a>
              <a href="null_p.html#convectivetransport_modi67" target="origFile">maxc_tl = xconst_tl(il, km1)</a>
<a name="convectivetransport_tlmi68"></a>              <a href="null_p.html#convectivetransport_modi67" target="origFile">maxc = xconst(il, km1)</a>
<a name="convectivetransport_tlmi69"></a>            <a href="null_p.html#convectivetransport_modi65" target="origFile"><code class="keyword">END IF</code></a>
            <a href="null_p.html#convectivetransport_modi68" target="origFile"><code class="keyword">IF</code> (minc .LT. <code class="constant">0.0d0</code>) <code class="keyword">THEN</code></a>
<a name="convectivetransport_tlmi70"></a>              <a href="null_p.html#convectivetransport_modi69" target="origFile">cdifr = <code class="constant">0.0d0</code></a>
<a name="convectivetransport_tlmi71"></a>            <a href="null_p.html#convectivetransport_modi68" target="origFile"><code class="keyword">ELSE</code></a>
              <a href="null_p.html#convectivetransport_modi70" target="origFile"><code class="keyword">IF</code> (xconst(il, ik) - xconst(il, km1) .GE. <code class="constant">0.</code>) <code class="keyword">THEN</code></a>
<a name="convectivetransport_tlmi72"></a>                <a href="null_p.html#convectivetransport_modi71" target="origFile">abs0 = xconst(il, ik) - xconst(il, km1)</a>
              <a href="null_p.html#convectivetransport_modi70" target="origFile"><code class="keyword">ELSE</code></a>
<a name="convectivetransport_tlmi73"></a>                <a href="null_p.html#convectivetransport_modi72" target="origFile">abs0 = -(xconst(il, ik)-xconst(il, km1))</a>
<a name="convectivetransport_tlmi74"></a>              <a href="null_p.html#convectivetransport_modi70" target="origFile"><code class="keyword">END IF</code></a>
              <a href="null_p.html#convectivetransport_modi73" target="origFile"><code class="keyword">IF</code> (maxc .LT. small) <code class="keyword">THEN</code></a>
<a name="convectivetransport_tlmi75"></a>                <a href="null_p.html#convectivetransport_modi74" target="origFile">max1 = small</a>
              <a href="null_p.html#convectivetransport_modi73" target="origFile"><code class="keyword">ELSE</code></a>
<a name="convectivetransport_tlmi76"></a>                <a href="null_p.html#convectivetransport_modi75" target="origFile">max1 = maxc</a>
              <a href="null_p.html#convectivetransport_modi73" target="origFile"><code class="keyword">END IF</code></a>
<a name="convectivetransport_tlmi77"></a>              <a href="null_p.html#convectivetransport_modi76" target="origFile">cdifr = abs0/max1</a>
<a name="convectivetransport_tlmi78"></a>            <a href="null_p.html#convectivetransport_modi68" target="origFile"><code class="keyword">END IF</code></a>
<a name="convectivetransport_tlmi79"></a>            <a href="null_p.html#convectivetransport_modi77" target="origFile"><code class="keyword">IF</code> (cdifr .GT. <code class="constant">1.0d-6</code>) <code class="keyword">THEN</code></a>
<a name="convectivetransport_tlmi79"></a>              <a href="null_p.html#convectivetransport_modi78" target="origFile"><code class="keyword">IF</code> (xconst(il, km1) .LT. maxc*<code class="constant">1.0d-12</code>) <code class="keyword">THEN</code></a>
                <a href="null_p.html#convectivetransport_modi79" target="origFile">cabv_tl = <code class="constant">1.0d-12</code>*maxc_tl</a>
<a name="convectivetransport_tlmi80"></a>                <a href="null_p.html#convectivetransport_modi79" target="origFile">cabv = maxc*<code class="constant">1.0d-12</code></a>
<a name="convectivetransport_tlmi80"></a>              <a href="null_p.html#convectivetransport_modi78" target="origFile"><code class="keyword">ELSE</code></a>
                <a href="null_p.html#convectivetransport_modi80" target="origFile">cabv_tl = xconst_tl(il, km1)</a>
<a name="convectivetransport_tlmi81"></a>                <a href="null_p.html#convectivetransport_modi80" target="origFile">cabv = xconst(il, km1)</a>
<a name="convectivetransport_tlmi82"></a>              <a href="null_p.html#convectivetransport_modi78" target="origFile"><code class="keyword">END IF</code></a>
<a name="convectivetransport_tlmi82"></a>              <a href="null_p.html#convectivetransport_modi81" target="origFile"><code class="keyword">IF</code> (xconst(il, ik) .LT. maxc*<code class="constant">1.0d-12</code>) <code class="keyword">THEN</code></a>
                <a href="null_p.html#convectivetransport_modi82" target="origFile">cbel_tl = <code class="constant">1.0d-12</code>*maxc_tl</a>
<a name="convectivetransport_tlmi83"></a>                <a href="null_p.html#convectivetransport_modi82" target="origFile">cbel = maxc*<code class="constant">1.0d-12</code></a>
<a name="convectivetransport_tlmi83"></a>              <a href="null_p.html#convectivetransport_modi81" target="origFile"><code class="keyword">ELSE</code></a>
                <a href="null_p.html#convectivetransport_modi83" target="origFile">cbel_tl = xconst_tl(il, ik)</a>
<a name="convectivetransport_tlmi84"></a>                <a href="null_p.html#convectivetransport_modi83" target="origFile">cbel = xconst(il, ik)</a>
              <a href="null_p.html#convectivetransport_modi81" target="origFile"><code class="keyword">END IF</code></a>
              <a href="null_p.html#convectivetransport_modi84" target="origFile">chat_tl(il, ik) = ((cabv_tl*cbel-cabv*cbel_tl)*(cabv-cbel)<code class="label">&</code></a>
<a href="null_p.html#convectivetransport_modi84" target="origFile"><code class="label">&               </code>/(cbel*cabv)-<code class="funcname">LOG</code>(cabv/cbel)*(cabv_tl-cbel_tl))*cabv*cbel<code class="label">&</code></a>
<a name="convectivetransport_tlmi84"></a><a href="null_p.html#convectivetransport_modi84" target="origFile"><code class="label">&               </code>/(cabv-cbel)**<code class="constant">2 </code>+ <code class="funcname">LOG</code>(cabv/cbel)*(cabv_tl*cbel+cabv*<code class="label">&</code></a>
<a href="null_p.html#convectivetransport_modi84" target="origFile"><code class="label">&               </code>cbel_tl)/(cabv-cbel)</a>
<a name="convectivetransport_tlmi85"></a>              <a href="null_p.html#convectivetransport_modi84" target="origFile">chat(il, ik) = <code class="funcname">LOG</code>(cabv/cbel)/(cabv-cbel)*cabv*cbel</a>
            <a href="null_p.html#convectivetransport_modi77" target="origFile"><code class="keyword">ELSE</code></a>
<a href="null_p.html#convectivetransport_modi85" target="origFile"><code class="comment">! ---------------------------------------------------</code></a>
<a href="null_p.html#convectivetransport_modi85" target="origFile"><code class="comment">! The two layers have only a small difference, so use</code></a>
<a href="null_p.html#convectivetransport_modi85" target="origFile"><code class="comment">! arithmetic mean.</code></a>
<a href="null_p.html#convectivetransport_modi85" target="origFile"><code class="comment">! ---------------------------------------------------</code></a>
<a name="convectivetransport_tlmi85"></a>              <a href="null_p.html#convectivetransport_modi85" target="origFile">chat_tl(il, ik) = <code class="constant">0.5d0</code>*(xconst_tl(il, ik)+xconst_tl(il, <code class="label">&</code></a>
<a href="null_p.html#convectivetransport_modi85" target="origFile"><code class="label">&               </code>km1))</a>
<a name="convectivetransport_tlmi86"></a>              <a href="null_p.html#convectivetransport_modi85" target="origFile">chat(il, ik) = <code class="constant">0.5d0</code>*(xconst(il, ik)+xconst(il, km1))</a>
            <a href="null_p.html#convectivetransport_modi77" target="origFile"><code class="keyword">END IF</code></a>
<a href="null_p.html#convectivetransport_modi86" target="origFile"><code class="comment">! -------------------------------------</code></a>
<a href="null_p.html#convectivetransport_modi86" target="origFile"><code class="comment">! Provisional up and down draft values.</code></a>
<a name="convectivetransport_tlmi86"></a><a href="null_p.html#convectivetransport_modi86" target="origFile"><code class="comment">! -------------------------------------</code></a>
<a name="convectivetransport_tlmi87"></a>            <a href="null_p.html#convectivetransport_modi86" target="origFile">conu_tl(il, ik) = chat_tl(il, ik)</a>
<a name="convectivetransport_tlmi87"></a>            <a href="null_p.html#convectivetransport_modi86" target="origFile">conu(il, ik) = chat(il, ik)</a>
<a name="convectivetransport_tlmi88"></a>            <a href="null_p.html#convectivetransport_modi87" target="origFile">cond_tl(il, ik) = chat_tl(il, km1)</a>
            <a href="null_p.html#convectivetransport_modi87" target="origFile">cond(il, ik) = chat(il, km1)</a>
<a href="null_p.html#convectivetransport_modi88" target="origFile"><code class="comment">! ------------------</code></a>
<a href="null_p.html#convectivetransport_modi88" target="origFile"><code class="comment">! Provisional tends.</code></a>
<a name="convectivetransport_tlmi88"></a><a href="null_p.html#convectivetransport_modi88" target="origFile"><code class="comment">! ------------------</code></a>
            <a href="null_p.html#convectivetransport_modi88" target="origFile">dcondt_tl(il, ik) = <code class="constant">0.0_8</code></a>
            <a href="null_p.html#convectivetransport_modi88" target="origFile">dcondt(il, ik) = <code class="constant">0.0d0</code></a>
<a name="convectivetransport_tlmi92"></a>          <a href="null_p.html#convectivetransport_modi89" target="origFile"><code class="keyword">END DO </code><code class="label">illoop1</code></a>
<a name="convectivetransport_tlmi93"></a>        <a href="null_p.html#convectivetransport_modi90" target="origFile"><code class="keyword">END DO </code><code class="label">ikloop1</code></a>
<a name="convectivetransport_tlmi96"></a>        <a href="null_p.html#convectivetransport_modi50" target="origFile"><code class="keyword">WHERE </code>(edi(:, :) .LT. <code class="constant">0.0d0</code>) </a><a href="null_p.html#convectivetransport_modi92" target="origFile">edi(:, :) = <code class="constant">0.0d0</code></a>
<a href="null_p.html#convectivetransport_modi93" target="origFile"><code class="label">illoop2:</code><code class="keyword">DO </code>il=<code class="constant">1</code>,il2g</a>
<a href="null_p.html#convectivetransport_modi96" target="origFile"><code class="comment">! ----------------------------------------------------------------------</code></a>
<a href="null_p.html#convectivetransport_modi96" target="origFile"><code class="comment">! Find the mixing ratio in the downdraft, top of atmosphere down.</code></a>
<a href="null_p.html#convectivetransport_modi96" target="origFile"><code class="comment">! NOTE: mass flux   in downdraft (mdi) will be zero or negative.</code></a>
<a href="null_p.html#convectivetransport_modi96" target="origFile"><code class="comment">!       entrainment in downdraft (edi) will be zero or positive.</code></a>
<a name="convectivetransport_tlmi94"></a><a href="null_p.html#convectivetransport_modi96" target="origFile"><code class="comment">! ----------------------------------------------------------------------</code></a>
 <a href="null_p.html#convectivetransport_modi96" target="origFile"><code class="label">ikloopdd:</code><code class="keyword">DO </code>ik=<code class="constant">2</code>,k2</a>
<a name="convectivetransport_tlmi95"></a>            <a href="null_p.html#convectivetransport_modi94" target="origFile"><code class="keyword">IF</code> (mdi(il, ik-<code class="constant">1</code>) .LT. -xmbsth .OR. edi(il, ik) .GT. xmbsth<code class="label">&</code></a>
<a href="null_p.html#convectivetransport_modi94" target="origFile"><code class="label">&           </code>) <code class="keyword">THEN</code></a>
<a name="convectivetransport_tlmi95"></a>              <a href="null_p.html#convectivetransport_modi95" target="origFile">cond_tl(il, ik) = (mdi(il, ik-<code class="constant">1</code>)*cond_tl(il, ik-<code class="constant">1</code>)-edi(il<code class="label">&</code></a>
<a href="null_p.html#convectivetransport_modi95" target="origFile"><code class="label">&               </code>, ik)*xconst_tl(il, ik))/(mdi(il, ik-<code class="constant">1</code>)-edi(il, ik))</a>
              <a href="null_p.html#convectivetransport_modi95" target="origFile">cond(il, ik) = (cond(il, ik-<code class="constant">1</code>)*mdi(il, ik-<code class="constant">1</code>)-xconst(il, ik<code class="label">&</code></a>
<a href="null_p.html#convectivetransport_modi95" target="origFile"><code class="label">&               </code>)*edi(il, ik))/(mdi(il, ik-<code class="constant">1</code>)-edi(il, ik))</a>
<a name="convectivetransport_tlmi97"></a>            <a href="null_p.html#convectivetransport_modi94" target="origFile"><code class="keyword">END IF</code></a>
          <a href="null_p.html#convectivetransport_modi96" target="origFile"><code class="keyword">END DO </code><code class="label">ikloopdd</code></a>
<a href="null_p.html#convectivetransport_modi97" target="origFile"><code class="comment">! ------------------------------------------------------</code></a>
<a href="null_p.html#convectivetransport_modi97" target="origFile"><code class="comment">! Calculate updrafts with scavenging from bottom to top.</code></a>
<a href="null_p.html#convectivetransport_modi97" target="origFile"><code class="comment">! Include the downdrafts.</code></a>
<a href="null_p.html#convectivetransport_modi97" target="origFile"><code class="comment">! ------------------------------------------------------</code></a>
<a href="null_p.html#convectivetransport_modi97" target="origFile"><code class="comment">! -------------------------------------</code></a>
<a name="p0"></a><a href="null_p.html#convectivetransport_modi97" target="origFile"><code class="comment">! Do the bottom most levels in the pbl.</code></a>
<a href="null_p.html#convectivetransport_modi97" target="origFile"><code class="comment">! -------------------------------------</code></a>
          <a href="null_p.html#convectivetransport_modi97" target="origFile"><code class="keyword">IF</code> (</a><a href="msg.html#p0" target="msg"><code class="comment"><img src="danger.gif" align=middle border=0 alt="!" /></code></a><a href="null_p.html#convectivetransport_modi97" target="origFile"><code class="funcname">SUM</code>(dpi(il, k2:pbli(il):-<code class="constant">1</code>)) .EQ. <code class="constant">0.0d0</code>) <code class="keyword">THEN</code></a>
<a name="convectivetransport_tlmi98"></a>            <a href="null_p.html#convectivetransport_modi97" target="origFile"><code class="keyword">GOTO </code><code class="label">100</code></a>
          <a href="null_p.html#convectivetransport_modi97" target="origFile"><code class="keyword">ELSE</code></a>
<a name="convectivetransport_tlmi98"></a>            <a href="null_p.html#convectivetransport_modi98" target="origFile">arg1_tl(:) = dpi(il, k2:pbli(il):-<code class="constant">1</code>)*xconst_tl(il, k2:pbli(<code class="label">&</code></a>
<a name="convectivetransport_tlmi99"></a><a href="null_p.html#convectivetransport_modi98" target="origFile"><code class="label">&             </code>il):-<code class="constant">1</code>)</a>
<a name="convectivetransport_tlmi99"></a>            <a href="null_p.html#convectivetransport_modi98" target="origFile">arg1(:) = xconst(il, k2:pbli(il):-<code class="constant">1</code>)*dpi(il, k2:pbli(il):-<code class="constant">1</code>)</a>
<a name="convectivetransport_tlmi100"></a>            <a href="null_p.html#convectivetransport_modi99" target="origFile">avg_pbl_tl = <code class="funcname">SUM</code>(arg1_tl(:))/<code class="funcname">SUM</code>(dpi(il, k2:pbli(il):-<code class="constant">1</code>))</a>
<a name="convectivetransport_tlmi101"></a>            <a href="null_p.html#convectivetransport_modi99" target="origFile">avg_pbl = <code class="funcname">SUM</code>(arg1(:))/<code class="funcname">SUM</code>(dpi(il, k2:pbli(il):-<code class="constant">1</code>))</a>
<a name="convectivetransport_tlmi101"></a>            <a href="null_p.html#convectivetransport_modi100" target="origFile">sqrt_fisg = <code class="funcname">SQRT</code>(fisg(il, pbli(il)))</a>
<a name="convectivetransport_tlmi102"></a>            <a href="null_p.html#convectivetransport_modi101" target="origFile">scav_tl = (<code class="constant">1.0d0</code>-sqrt_fisg)*avg_pbl_tl</a>
<a name="convectivetransport_tlmi102"></a>            <a href="null_p.html#convectivetransport_modi101" target="origFile">scav = avg_pbl*(<code class="constant">1.0d0</code>-sqrt_fisg)</a>
<a name="convectivetransport_tlmi103"></a>            <a href="null_p.html#convectivetransport_modi102" target="origFile">conu_tl(il, pbli(il)) = sqrt_fisg*avg_pbl_tl</a>
<a name="convectivetransport_tlmi104"></a>            <a href="null_p.html#convectivetransport_modi102" target="origFile">conu(il, pbli(il)) = avg_pbl*sqrt_fisg</a>
<a name="convectivetransport_tlmi104"></a>            <a href="null_p.html#convectivetransport_modi103" target="origFile"><code class="keyword">IF</code> (chat(il, pbli(il)) .GT. xconst(il, pbli(il)-<code class="constant">1</code>)) <code class="keyword">THEN</code></a>
              <a href="null_p.html#convectivetransport_modi104" target="origFile">min1_tl = xconst_tl(il, pbli(il)-<code class="constant">1</code>)</a>
<a name="convectivetransport_tlmi105"></a>              <a href="null_p.html#convectivetransport_modi104" target="origFile">min1 = xconst(il, pbli(il)-<code class="constant">1</code>)</a>
<a name="convectivetransport_tlmi105"></a>            <a href="null_p.html#convectivetransport_modi103" target="origFile"><code class="keyword">ELSE</code></a>
              <a href="null_p.html#convectivetransport_modi105" target="origFile">min1_tl = chat_tl(il, pbli(il))</a>
<a name="convectivetransport_tlmi106"></a>              <a href="null_p.html#convectivetransport_modi105" target="origFile">min1 = chat(il, pbli(il))</a>
            <a href="null_p.html#convectivetransport_modi103" target="origFile"><code class="keyword">END IF</code></a>
<a name="convectivetransport_tlmi106"></a>            <a href="null_p.html#convectivetransport_modi106" target="origFile">fluxin_tl = (mui(il, pbli(il))+mdi(il, pbli(il)))*min1_tl - <code class="label">&</code></a>
<a href="null_p.html#convectivetransport_modi106" target="origFile"><code class="label">&             </code>mdi(il, pbli(il))*cond_tl(il, pbli(il))</a>
<a name="convectivetransport_tlmi107"></a>            <a href="null_p.html#convectivetransport_modi106" target="origFile">fluxin = (mui(il, pbli(il))+mdi(il, pbli(il)))*min1 - mdi(il<code class="label">&</code></a>
<a href="null_p.html#convectivetransport_modi106" target="origFile"><code class="label">&             </code>, pbli(il))*cond(il, pbli(il))</a>
<a name="convectivetransport_tlmi107"></a>            <a href="null_p.html#convectivetransport_modi107" target="origFile">fluxout_tl = mui(il, pbli(il))*conu_tl(il, pbli(il)) + mui(<code class="label">&</code></a>
<a href="null_p.html#convectivetransport_modi107" target="origFile"><code class="label">&             </code>il, pbli(il))*scav_tl</a>
<a name="convectivetransport_tlmi108"></a>            <a href="null_p.html#convectivetransport_modi107" target="origFile">fluxout = mui(il, pbli(il))*conu(il, pbli(il)) + mui(il, <code class="label">&</code></a>
<a href="null_p.html#convectivetransport_modi107" target="origFile"><code class="label">&             </code>pbli(il))*scav</a>
<a name="convectivetransport_tlmi108"></a>            <a href="null_p.html#convectivetransport_modi108" target="origFile">dcondt_tl(il, k2) = (fluxin_tl-fluxout_tl)/<code class="funcname">SUM</code>(dpi(il, k2:<code class="label">&</code></a>
<a href="null_p.html#convectivetransport_modi108" target="origFile"><code class="label">&             </code>pbli(il):-<code class="constant">1</code>))</a>
<a name="convectivetransport_tlmi109"></a>            <a href="null_p.html#convectivetransport_modi108" target="origFile">dcondt(il, k2) = (fluxin-fluxout)/<code class="funcname">SUM</code>(dpi(il, k2:pbli(il):-<code class="constant">1</code><code class="label">&</code></a>
<a name="convectivetransport_tlmi111"></a><a href="null_p.html#convectivetransport_modi108" target="origFile"><code class="label">&             </code>))</a>
<a name="convectivetransport_tlmi110"></a>            <a href="null_p.html#convectivetransport_modi109" target="origFile"><code class="keyword">IF</code> (avg_pbl .GT. <code class="constant">0.0d0</code>) <code class="keyword">THEN</code></a>
              <a href="null_p.html#convectivetransport_modi111" target="origFile"><code class="keyword">DO </code>ik=k2,pbli(il),-<code class="constant">1</code></a>
                <a href="null_p.html#convectivetransport_modi110" target="origFile">qq_tl(ideep(il), ik, ic) = ((avg_pbl_tl+delt*dcondt_tl(<code class="label">&</code></a>
<a href="null_p.html#convectivetransport_modi110" target="origFile"><code class="label">&                 </code>il, k2))*avg_pbl-(avg_pbl+dcondt(il, k2)*delt)*<code class="label">&</code></a>
<a name="convectivetransport_tlmi110"></a><a href="null_p.html#convectivetransport_modi110" target="origFile"><code class="label">&                 </code>avg_pbl_tl)*xconst(il, ik)/avg_pbl**<code class="constant">2 </code>+ (avg_pbl+<code class="label">&</code></a>
<a href="null_p.html#convectivetransport_modi110" target="origFile"><code class="label">&                 </code>dcondt(il, k2)*delt)*xconst_tl(il, ik)/avg_pbl</a>
                <a href="null_p.html#convectivetransport_modi110" target="origFile">qq(ideep(il), ik, ic) = (avg_pbl+dcondt(il, k2)*delt)/<code class="label">&</code></a>
<a href="null_p.html#convectivetransport_modi110" target="origFile"><code class="label">&                 </code>avg_pbl*xconst(il, ik)</a>
<a name="convectivetransport_tlmi136"></a>              <a href="null_p.html#convectivetransport_modi111" target="origFile"><code class="keyword">END DO</code></a>
            <a href="null_p.html#convectivetransport_modi109" target="origFile"><code class="keyword">END IF</code></a>
<a href="null_p.html#convectivetransport_modi136" target="origFile"><code class="comment">! ---------------------------</code></a>
<a href="null_p.html#convectivetransport_modi136" target="origFile"><code class="comment">! Loop over all other levels.</code></a>
<a name="convectivetransport_tlmi112"></a><a href="null_p.html#convectivetransport_modi136" target="origFile"><code class="comment">! ---------------------------</code></a>
<a name="convectivetransport_tlmi113"></a>    <a href="null_p.html#convectivetransport_modi136" target="origFile"><code class="label">ikloop2:</code><code class="keyword">DO </code>ik=pbli(il)-<code class="constant">1</code>,<code class="constant">2</code>,-<code class="constant">1</code></a>
<a name="convectivetransport_tlmi114"></a>              <a href="null_p.html#convectivetransport_modi112" target="origFile">kp1 = ik + <code class="constant">1</code></a>
              <a href="null_p.html#convectivetransport_modi113" target="origFile">km1 = ik - <code class="constant">1</code></a>
<a href="null_p.html#convectivetransport_modi114" target="origFile"><code class="comment">! -----------------------------</code></a>
<a href="null_p.html#convectivetransport_modi114" target="origFile"><code class="comment">! Find mixing ratio in updraft.</code></a>
<a href="null_p.html#convectivetransport_modi114" target="origFile"><code class="comment">! -----------------------------</code></a>
<a name="convectivetransport_tlmi115"></a>              <a href="null_p.html#convectivetransport_modi114" target="origFile"><code class="keyword">IF</code> (mui(il, kp1) - dui(il, ik) + eui(il, ik) .GT. xmbsth) <code class="label">&</code></a>
<a name="convectivetransport_tlmi116"></a><a href="null_p.html#convectivetransport_modi114" target="origFile"><code class="label">&             </code><code class="keyword">THEN</code></a>
<a name="convectivetransport_tlmi117"></a>                <a href="null_p.html#convectivetransport_modi115" target="origFile">sqrt_fisg = <code class="funcname">SQRT</code>(fisg(il, ik))</a>
                <a href="null_p.html#convectivetransport_modi116" target="origFile"><code class="keyword">IF</code> (mui(il, kp1) + eui(il, ik) .GE. <code class="constant">0.</code>) <code class="keyword">THEN</code></a>
<a name="convectivetransport_tlmi118"></a>                  <a href="null_p.html#convectivetransport_modi117" target="origFile">abs1 = mui(il, kp1) + eui(il, ik)</a>
                <a href="null_p.html#convectivetransport_modi116" target="origFile"><code class="keyword">ELSE</code></a>
<a name="convectivetransport_tlmi119"></a>                  <a href="null_p.html#convectivetransport_modi118" target="origFile">abs1 = -(mui(il, kp1)+eui(il, ik))</a>
<a name="convectivetransport_tlmi120"></a>                <a href="null_p.html#convectivetransport_modi116" target="origFile"><code class="keyword">END IF</code></a>
                <a href="null_p.html#convectivetransport_modi119" target="origFile"><code class="keyword">IF</code> (abs1 .GE. xmbsth) <code class="keyword">THEN</code></a>
<a href="null_p.html#convectivetransport_modi120" target="origFile"><code class="comment">!... mix updraft and entrainment, then detrain this concentration</code></a>
<a name="convectivetransport_tlmi120"></a>                  <a href="null_p.html#convectivetransport_modi120" target="origFile">temp_conu_tl = (mui(il, kp1)*conu_tl(il, kp1)+eui(il, <code class="label">&</code></a>
<a href="null_p.html#convectivetransport_modi120" target="origFile"><code class="label">&                   </code>ik)*xconst_tl(il, ik))/(mui(il, kp1)+eui(il, ik))</a>
                  <a href="null_p.html#convectivetransport_modi120" target="origFile">temp_conu = (mui(il, kp1)*conu(il, kp1)+eui(il, ik)*<code class="label">&</code></a>
<a href="null_p.html#convectivetransport_modi120" target="origFile"><code class="label">&                   </code>xconst(il, ik))/(mui(il, kp1)+eui(il, ik))</a>
<a name="convectivetransport_tlmi121"></a><a href="null_p.html#convectivetransport_modi119" target="origFile"><code class="comment">!... if updraft and entrainment flux sum to 0.0, then take average concen</code></a>
                <a href="null_p.html#convectivetransport_modi119" target="origFile"><code class="keyword">ELSE</code></a>
<a name="convectivetransport_tlmi121"></a>                  <a href="null_p.html#convectivetransport_modi121" target="origFile">temp_conu_tl = (xconst_tl(il, ik)+conu_tl(il, kp1))/<code class="label">&</code></a>
<a href="null_p.html#convectivetransport_modi121" target="origFile"><code class="label">&                   </code><code class="constant">2.0d0</code></a>
<a name="convectivetransport_tlmi122"></a>                  <a href="null_p.html#convectivetransport_modi121" target="origFile">temp_conu = (xconst(il, ik)+conu(il, kp1))/<code class="constant">2.0d0</code></a>
                <a href="null_p.html#convectivetransport_modi119" target="origFile"><code class="keyword">END IF</code></a>
<a href="null_p.html#convectivetransport_modi122" target="origFile"><code class="comment">!</code></a>
                <a href="null_p.html#convectivetransport_modi122" target="origFile">scav_tl = ((<code class="constant">1.0d0</code>-fisg(il, ik))*(mui(il, kp1)*conu_tl(il<code class="label">&</code></a>
<a href="null_p.html#convectivetransport_modi122" target="origFile"><code class="label">&                 </code>, kp1)-dui(il, ik)*temp_conu_tl)+eui(il, ik)*(<code class="constant">1.0d0</code>-<code class="label">&</code></a>
<a name="convectivetransport_tlmi122"></a><a href="null_p.html#convectivetransport_modi122" target="origFile"><code class="label">&                 </code>sqrt_fisg)*xconst_tl(il, ik))/(mui(il, kp1)-dui(il, ik<code class="label">&</code></a>
<a href="null_p.html#convectivetransport_modi122" target="origFile"><code class="label">&                 </code>)+eui(il, ik))</a>
                <a href="null_p.html#convectivetransport_modi122" target="origFile">scav = ((mui(il, kp1)*conu(il, kp1)-dui(il, ik)*<code class="label">&</code></a>
<a href="null_p.html#convectivetransport_modi122" target="origFile"><code class="label">&                 </code>temp_conu)*(<code class="constant">1.0d0</code>-fisg(il, ik))+eui(il, ik)*xconst(il<code class="label">&</code></a>
<a name="convectivetransport_tlmi123"></a><a href="null_p.html#convectivetransport_modi122" target="origFile"><code class="label">&                 </code>, ik)*(<code class="constant">1.0d0</code>-sqrt_fisg))/(mui(il, kp1)-dui(il, ik)+eui<code class="label">&</code></a>
<a href="null_p.html#convectivetransport_modi122" target="origFile"><code class="label">&                 </code>(il, ik))</a>
                <a href="null_p.html#convectivetransport_modi123" target="origFile">conu_tl(il, ik) = (fisg(il, ik)*(mui(il, kp1)*conu_tl(il<code class="label">&</code></a>
<a href="null_p.html#convectivetransport_modi123" target="origFile"><code class="label">&                 </code>, kp1)-dui(il, ik)*temp_conu_tl)+eui(il, ik)*sqrt_fisg<code class="label">&</code></a>
<a name="convectivetransport_tlmi123"></a><a href="null_p.html#convectivetransport_modi123" target="origFile"><code class="label">&                 </code>*xconst_tl(il, ik))/(mui(il, kp1)-dui(il, ik)+eui(il, <code class="label">&</code></a>
<a href="null_p.html#convectivetransport_modi123" target="origFile"><code class="label">&                 </code>ik))</a>
                <a href="null_p.html#convectivetransport_modi123" target="origFile">conu(il, ik) = ((mui(il, kp1)*conu(il, kp1)-dui(il, ik)*<code class="label">&</code></a>
<a href="null_p.html#convectivetransport_modi123" target="origFile"><code class="label">&                 </code>temp_conu)*fisg(il, ik)+eui(il, ik)*xconst(il, ik)*<code class="label">&</code></a>
<a name="convectivetransport_tlmi124"></a><a href="null_p.html#convectivetransport_modi123" target="origFile"><code class="label">&                 </code>sqrt_fisg)/(mui(il, kp1)-dui(il, ik)+eui(il, ik))</a>
<a name="convectivetransport_tlmi124"></a>              <a href="null_p.html#convectivetransport_modi114" target="origFile"><code class="keyword">ELSE</code></a>
<a name="convectivetransport_tlmi125"></a>                <a href="null_p.html#convectivetransport_modi124" target="origFile">conu_tl(il, ik) = xconst_tl(il, ik)</a>
                <a href="null_p.html#convectivetransport_modi124" target="origFile">conu(il, ik) = xconst(il, ik)</a>
                <a href="null_p.html#convectivetransport_modi125" target="origFile">scav = <code class="constant">0.0d0</code></a>
<a name="convectivetransport_tlmi126"></a>                <a href="null_p.html#convectivetransport_modi114" target="origFile">scav_tl = <code class="constant">0.0_8</code></a>
<a name="convectivetransport_tlmi127"></a>              <a href="null_p.html#convectivetransport_modi114" target="origFile"><code class="keyword">END IF</code></a>
<a name="convectivetransport_tlmi127"></a>              <a href="null_p.html#convectivetransport_modi126" target="origFile"><code class="keyword">IF</code> (chat(il, ik) .GT. xconst(il, km1)) <code class="keyword">THEN</code></a>
                <a href="null_p.html#convectivetransport_modi127" target="origFile">min2_tl = xconst_tl(il, km1)</a>
<a name="convectivetransport_tlmi128"></a>                <a href="null_p.html#convectivetransport_modi127" target="origFile">min2 = xconst(il, km1)</a>
<a name="convectivetransport_tlmi128"></a>              <a href="null_p.html#convectivetransport_modi126" target="origFile"><code class="keyword">ELSE</code></a>
                <a href="null_p.html#convectivetransport_modi128" target="origFile">min2_tl = chat_tl(il, ik)</a>
<a name="convectivetransport_tlmi129"></a>                <a href="null_p.html#convectivetransport_modi128" target="origFile">min2 = chat(il, ik)</a>
              <a href="null_p.html#convectivetransport_modi126" target="origFile"><code class="keyword">END IF</code></a>
<a href="null_p.html#convectivetransport_modi129" target="origFile"><code class="comment">! -------------------------------------------------------</code></a>
<a href="null_p.html#convectivetransport_modi129" target="origFile"><code class="comment">! Calculate fluxes into and out of box.  With scavenging</code></a>
<a href="null_p.html#convectivetransport_modi129" target="origFile"><code class="comment">! included the net flux for the whole column is no longer</code></a>
<a href="null_p.html#convectivetransport_modi129" target="origFile"><code class="comment">! guaranteed to be zero.</code></a>
<a href="null_p.html#convectivetransport_modi129" target="origFile"><code class="comment">! Include the downdrafts.</code></a>
<a href="null_p.html#convectivetransport_modi129" target="origFile"><code class="comment">! -------------------------------------------------------</code></a>
<a name="convectivetransport_tlmi129"></a>              <a href="null_p.html#convectivetransport_modi129" target="origFile">fluxin_tl = mui(il, kp1)*conu_tl(il, kp1) + (mui(il, ik)+<code class="label">&</code></a>
<a href="null_p.html#convectivetransport_modi129" target="origFile"><code class="label">&               </code>mdi(il, ik))*min2_tl - mdi(il, ik)*cond_tl(il, ik)</a>
<a name="convectivetransport_tlmi130"></a>              <a href="null_p.html#convectivetransport_modi129" target="origFile">fluxin = mui(il, kp1)*conu(il, kp1) + (mui(il, ik)+mdi(il<code class="label">&</code></a>
<a name="convectivetransport_tlmi131"></a><a href="null_p.html#convectivetransport_modi129" target="origFile"><code class="label">&               </code>, ik))*min2 - mdi(il, ik)*cond(il, ik)</a>
<a name="convectivetransport_tlmi131"></a>              <a href="null_p.html#convectivetransport_modi130" target="origFile"><code class="keyword">IF</code> (chat(il, kp1) .GT. xconst(il, ik)) <code class="keyword">THEN</code></a>
                <a href="null_p.html#convectivetransport_modi131" target="origFile">min3_tl = xconst_tl(il, ik)</a>
<a name="convectivetransport_tlmi132"></a>                <a href="null_p.html#convectivetransport_modi131" target="origFile">min3 = xconst(il, ik)</a>
<a name="convectivetransport_tlmi132"></a>              <a href="null_p.html#convectivetransport_modi130" target="origFile"><code class="keyword">ELSE</code></a>
                <a href="null_p.html#convectivetransport_modi132" target="origFile">min3_tl = chat_tl(il, kp1)</a>
<a name="convectivetransport_tlmi133"></a>                <a href="null_p.html#convectivetransport_modi132" target="origFile">min3 = chat(il, kp1)</a>
              <a href="null_p.html#convectivetransport_modi130" target="origFile"><code class="keyword">END IF</code></a>
              <a href="null_p.html#convectivetransport_modi133" target="origFile">fluxout_tl = mui(il, ik)*conu_tl(il, ik) + (mui(il, kp1)+<code class="label">&</code></a>
<a name="convectivetransport_tlmi133"></a><a href="null_p.html#convectivetransport_modi133" target="origFile"><code class="label">&               </code>mdi(il, kp1))*min3_tl + (mui(il, ik)+mui(il, kp1))*<code class="constant">0.5d0</code><code class="label">&</code></a>
<a href="null_p.html#convectivetransport_modi133" target="origFile"><code class="label">&               </code>*scav_tl - mdi(il, kp1)*cond_tl(il, kp1)</a>
              <a href="null_p.html#convectivetransport_modi133" target="origFile">fluxout = mui(il, ik)*conu(il, ik) + (mui(il, kp1)+mdi(il<code class="label">&</code></a>
<a name="convectivetransport_tlmi134"></a><a href="null_p.html#convectivetransport_modi133" target="origFile"><code class="label">&               </code>, kp1))*min3 + (mui(il, ik)+mui(il, kp1))*<code class="constant">0.5d0</code>*scav - <code class="label">&</code></a>
<a name="convectivetransport_tlmi134"></a><a href="null_p.html#convectivetransport_modi133" target="origFile"><code class="label">&               </code>mdi(il, kp1)*cond(il, kp1)</a>
<a name="convectivetransport_tlmi135"></a>              <a href="null_p.html#convectivetransport_modi134" target="origFile">dcondt_tl(il, ik) = (fluxin_tl-fluxout_tl)/dpi(il, ik)</a>
              <a href="null_p.html#convectivetransport_modi134" target="origFile">dcondt(il, ik) = (fluxin-fluxout)/dpi(il, ik)</a>
<a href="null_p.html#convectivetransport_modi135" target="origFile"><code class="comment">! --------------------------------------------</code></a>
<a href="null_p.html#convectivetransport_modi135" target="origFile"><code class="comment">! Update and scatter data back to full arrays.</code></a>
<a href="null_p.html#convectivetransport_modi135" target="origFile"><code class="comment">! --------------------------------------------</code></a>
<a name="convectivetransport_tlmi135"></a>              <a href="null_p.html#convectivetransport_modi135" target="origFile">qq_tl(ideep(il), ik, ic) = xconst_tl(il, ik) + delt*<code class="label">&</code></a>
<a href="null_p.html#convectivetransport_modi135" target="origFile"><code class="label">&               </code>dcondt_tl(il, ik)</a>
              <a href="null_p.html#convectivetransport_modi135" target="origFile">qq(ideep(il), ik, ic) = xconst(il, ik) + dcondt(il, ik)*<code class="label">&</code></a>
<a href="null_p.html#convectivetransport_modi135" target="origFile"><code class="label">&               </code>delt</a>
            <a href="null_p.html#convectivetransport_modi136" target="origFile"><code class="keyword">END DO </code><code class="label">ikloop2</code></a>
          <a href="null_p.html#convectivetransport_modi97" target="origFile"><code class="keyword">END IF</code></a>
        <a href="null_p.html#convectivetransport_modi93" target="origFile"><code class="keyword">END DO </code><code class="label">illoop2</code></a>
<a name="convectivetransport_tlmi137"></a>      <a href="null_p.html#convectivetransport_modi50" target="origFile"><code class="keyword">END IF</code></a>
<a name="convectivetransport_tlmi138"></a>    <a href="null_p.html#convectivetransport_modi49" target="origFile"><code class="keyword">END DO </code><code class="label">icloop</code></a>
<a name="convectivetransport_tlmi139"></a>    <a href="null_p.html#convectivetransport_modi137" target="origFile"><code class="keyword">RETURN</code></a>
<a name="convectivetransport_tlmi140"></a> <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="label">100 </code></a><a href="null_p.html#convectivetransport_modi138" target="origFile">err_msg = <code class="string">'Problem in convectiveTransport.'</code></a>
    <a href="null_p.html#convectivetransport_modi139" target="origFile"><code class="keyword">PRINT*</code>, err_msg</a>
<a name="convectivetransport"></a>    <a href="null_p.html#convectivetransport_modi140" target="origFile"><code class="keyword">STOP</code></a>
  <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="keyword">END SUBROUTINE </code><code class="funcname">CONVECTIVETRANSPORT_TLM</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">! !DESCRIPTION:</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">! Module for the convective transport.</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">!EOP</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">!-----------------------------------------------------------------------------</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">!-----------------------------------------------------------------------------</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">!BOP</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">! !IROUTINE: convectiveTransport</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">! !INTERFACE:</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">!</code></a>
  <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="keyword">SUBROUTINE </code><code class="funcname">CONVECTIVETRANSPORT</code>(<code class="vardecl">il2g</code>, <code class="vardecl">delt</code>, <code class="vardecl">xmbsth</code>, <code class="vardecl">ideep</code>, <code class="vardecl">pbli</code>, <code class="vardecl">dui</code>, <code class="label">&</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="label">&   </code><code class="vardecl">eui</code>, <code class="vardecl">mui</code>, <code class="vardecl">mdi</code>, <code class="vardecl">dpi</code>, <code class="vardecl">fracis</code>, <code class="vardecl">qq</code>, <code class="vardecl">isfixedconcentration</code>, <code class="vardecl">i1</code>, <code class="vardecl">i2</code>, <code class="vardecl">k1</code>, <code class="vardecl">k2</code><code class="label">&</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="label">&   </code>, <code class="vardecl">ilong</code>, <code class="vardecl">numspecies</code>)</a>
    <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="keyword">IMPLICIT NONE</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">! !INPUT PARAMETERS</code></a>
    <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="typename">LOGICAL</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">isfixedconcentration</code>(:)</a>
    <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">i1</code>, <code class="vardecl">i2</code>, <code class="vardecl">k1</code>, <code class="vardecl">k2</code>, <code class="vardecl">ilong</code>, <code class="vardecl">numspecies</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">! gathered max lon indices over which to operate</code></a>
    <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">il2g</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">! convection time step (s)</code></a>
    <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="typename">REAL*8</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">delt</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">! threshold below which we treat mass fluxes as zero (mb/s)</code></a>
    <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="typename">REAL*8</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">xmbsth</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">! gathering array</code></a>
    <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">ideep</code>(<code class="vardecl">ilong</code>)</a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">! index of planetary boundary layer</code></a>
    <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">pbli</code>(<code class="vardecl">ilong</code>)</a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">! mass detraining from updraft</code></a>
    <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="typename">REAL*8</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">dui</code>(<code class="vardecl">ilong</code>, <code class="vardecl">k1</code>:<code class="vardecl">k2</code>)</a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">! mass entraining into updraft</code></a>
    <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="typename">REAL*8</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">eui</code>(<code class="vardecl">ilong</code>, <code class="vardecl">k1</code>:<code class="vardecl">k2</code>)</a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">! mass flux up</code></a>
    <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="typename">REAL*8</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">mui</code>(<code class="vardecl">ilong</code>, <code class="vardecl">k1</code>:<code class="vardecl">k2</code>)</a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">! mass flux down</code></a>
    <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="typename">REAL*8</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">mdi</code>(<code class="vardecl">ilong</code>, <code class="vardecl">k1</code>:<code class="vardecl">k2</code>)</a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">! delta pressure between interfaces</code></a>
    <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="typename">REAL*8</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">dpi</code>(<code class="vardecl">ilong</code>, <code class="vardecl">k1</code>:<code class="vardecl">k2</code>)</a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">! insoluble fraction of tracer</code></a>
    <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="typename">REAL*8</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">fracis</code>(<code class="vardecl">i1</code>:<code class="vardecl">i2</code>, <code class="vardecl">k1</code>:<code class="vardecl">k2</code>, <code class="vardecl">numspecies</code>)</a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">! !INPUT/OUTPUT PARAMETERS:</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">! tracer array including moisture (mixing ratio)</code></a>
    <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="typename">REAL*8</code>, <code class="typename">INTENT(INOUT) </code>:: <code class="vardecl">qq</code>(<code class="vardecl">i1</code>:<code class="vardecl">i2</code>, <code class="vardecl">k1</code>:<code class="vardecl">k2</code>, <code class="vardecl">numspecies</code>)</a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">! !DESCRIPTION:</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">! This routine performs convective transport of trace species.</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">! Note that we assume that the tracers are in a moist mixing ratio.</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">! !DEFINED PARAMETERS:</code></a>
    <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="typename">REAL*8</code>, <code class="typename">PARAMETER </code>:: <code class="vardecl">small</code>=<code class="constant">1.0d-36</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">!EOP</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">!-----------------------------------------------------------------------------</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">!BOC</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">! !LOCAL VARIABLES:</code></a>
    <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="typename">CHARACTER</code>(<code class="keyword">len</code>=<code class="constant">75</code>) :: <code class="vardecl">err_msg</code></a>
    <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="typename">INTEGER </code>:: <code class="vardecl">il</code>, <code class="vardecl">ik</code>, <code class="vardecl">ic</code></a>
    <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="typename">INTEGER </code>:: <code class="vardecl">km1</code>, <code class="vardecl">kp1</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">! average mixing ratio in pbl</code></a>
    <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">avg_pbl</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">! mix ratio of constituent above</code></a>
    <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">cabv</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">! mix ratio of constituent below</code></a>
    <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">cbel</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">! normalized diff. between cabv and cbel</code></a>
    <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">cdifr</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">! flux coming into  each box at a k level</code></a>
    <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">fluxin</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">! flux going out of each box at a k level</code></a>
    <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">fluxout</code></a>
    <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">maxc</code></a>
    <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">minc</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">! mixing ratio of a scavenged tracer</code></a>
    <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">scav</code></a>
    <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">sqrt_fisg</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">!.sds - new temp variable for updraft concen calc</code></a>
    <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">temp_conu</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">! mix ratio in env.      at interfaces</code></a>
    <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">chat</code>(<code class="vardecl">il2g</code>, <code class="vardecl">k1</code>:<code class="vardecl">k2</code>)</a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">! mix ratio in updraft   at interfaces</code></a>
    <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">conu</code>(<code class="vardecl">il2g</code>, <code class="vardecl">k1</code>:<code class="vardecl">k2</code>)</a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">! mix ratio in downdraft at interfaces</code></a>
    <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">cond</code>(<code class="vardecl">il2g</code>, <code class="vardecl">k1</code>:<code class="vardecl">k2</code>)</a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">! gathered tend.  array</code></a>
    <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">dcondt</code>(<code class="vardecl">il2g</code>, <code class="vardecl">k1</code>:<code class="vardecl">k2</code>)</a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">! gathered downdraft entrainment</code></a>
    <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">edi</code>(<code class="vardecl">il2g</code>, <code class="vardecl">k1</code>:<code class="vardecl">k2</code>)</a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">! gathered insoluble frac. of tracer</code></a>
    <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">fisg</code>(<code class="vardecl">il2g</code>, <code class="vardecl">k1</code>:<code class="vardecl">k2</code>)</a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">! gathered tracer array</code></a>
    <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">xconst</code>(<code class="vardecl">il2g</code>, <code class="vardecl">k1</code>:<code class="vardecl">k2</code>)</a>
    <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="keyword">INTRINSIC </code><code class="funcname">MAX</code></a>
    <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="keyword">INTRINSIC </code><code class="funcname">MIN</code></a>
    <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="keyword">INTRINSIC </code><code class="funcname">ABS</code></a>
    <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="keyword">INTRINSIC </code><code class="funcname">LOG</code></a>
    <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="keyword">INTRINSIC </code><code class="funcname">SUM</code></a>
    <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="keyword">INTRINSIC </code><code class="funcname">SQRT</code></a>
    <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">abs0</code></a>
    <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">min1</code></a>
    <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">abs1</code></a>
    <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">min2</code></a>
    <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">min3</code></a>
    <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">max1</code></a>
    <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="typename">REAL*8</code>, DIMENSION((pbli(il)-k2)/(-<code class="constant">1</code>)+<code class="constant">1</code>) :: <code class="vardecl">arg1</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="label">icloop:</code><code class="keyword">DO </code>ic=<code class="constant">1</code>,numspecies</a>
      <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="keyword">IF</code> (.NOT.isfixedconcentration(ic)) <code class="keyword">THEN</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">! ------------------------------------------------</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">! Gather up the constituent and set tend. to zero.</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">! ------------------------------------------------</code></a>
        <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="keyword">DO </code>ik=k1,k2</a>
          <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="keyword">DO </code>il=<code class="constant">1</code>,il2g</a>
            <a href="null_p.html#convectivetransport_mod" target="origFile">fisg(il, ik) = fracis(ideep(il), ik, ic)</a>
            <a href="null_p.html#convectivetransport_mod" target="origFile">xconst(il, ik) = qq(ideep(il), ik, ic)</a>
          <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="keyword">END DO</code></a>
        <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="keyword">END DO</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">! -----------------------------------------</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">! From now on work only with gathered data.</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">! -----------------------------------------</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">! ----------------------------------------------------</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">! Interpolate environment tracer values to interfaces.</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">! ----------------------------------------------------</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="label">ikloop1:</code><code class="keyword">DO </code>ik=k1,k2</a>
          <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="keyword">IF</code> (k1 .LT. ik - <code class="constant">1</code>) <code class="keyword">THEN</code></a>
            <a href="null_p.html#convectivetransport_mod" target="origFile">km1 = ik - <code class="constant">1</code></a>
          <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="keyword">ELSE</code></a>
            <a href="null_p.html#convectivetransport_mod" target="origFile">km1 = k1</a>
          <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="keyword">END IF</code></a>
          <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="keyword">IF</code> (k2 .GT. ik + <code class="constant">1</code>) <code class="keyword">THEN</code></a>
            <a href="null_p.html#convectivetransport_mod" target="origFile">kp1 = ik + <code class="constant">1</code></a>
          <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="keyword">ELSE</code></a>
            <a href="null_p.html#convectivetransport_mod" target="origFile">kp1 = k2</a>
          <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="keyword">END IF</code></a>
          <a href="null_p.html#convectivetransport_mod" target="origFile">edi(:, ik) = mdi(:, ik) - mdi(:, kp1)</a>
  <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="label">illoop1:</code><code class="keyword">DO </code>il=<code class="constant">1</code>,il2g</a>
            <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="keyword">IF</code> (xconst(il, km1) .GT. xconst(il, ik)) <code class="keyword">THEN</code></a>
              <a href="null_p.html#convectivetransport_mod" target="origFile">minc = xconst(il, ik)</a>
            <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="keyword">ELSE</code></a>
              <a href="null_p.html#convectivetransport_mod" target="origFile">minc = xconst(il, km1)</a>
            <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="keyword">END IF</code></a>
            <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="keyword">IF</code> (xconst(il, km1) .LT. xconst(il, ik)) <code class="keyword">THEN</code></a>
              <a href="null_p.html#convectivetransport_mod" target="origFile">maxc = xconst(il, ik)</a>
            <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="keyword">ELSE</code></a>
              <a href="null_p.html#convectivetransport_mod" target="origFile">maxc = xconst(il, km1)</a>
            <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="keyword">END IF</code></a>
            <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="keyword">IF</code> (minc .LT. <code class="constant">0.0d0</code>) <code class="keyword">THEN</code></a>
              <a href="null_p.html#convectivetransport_mod" target="origFile">cdifr = <code class="constant">0.0d0</code></a>
            <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="keyword">ELSE</code></a>
              <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="keyword">IF</code> (xconst(il, ik) - xconst(il, km1) .GE. <code class="constant">0.</code>) <code class="keyword">THEN</code></a>
                <a href="null_p.html#convectivetransport_mod" target="origFile">abs0 = xconst(il, ik) - xconst(il, km1)</a>
              <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="keyword">ELSE</code></a>
                <a href="null_p.html#convectivetransport_mod" target="origFile">abs0 = -(xconst(il, ik)-xconst(il, km1))</a>
              <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="keyword">END IF</code></a>
              <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="keyword">IF</code> (maxc .LT. small) <code class="keyword">THEN</code></a>
                <a href="null_p.html#convectivetransport_mod" target="origFile">max1 = small</a>
              <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="keyword">ELSE</code></a>
                <a href="null_p.html#convectivetransport_mod" target="origFile">max1 = maxc</a>
              <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="keyword">END IF</code></a>
              <a href="null_p.html#convectivetransport_mod" target="origFile">cdifr = abs0/max1</a>
            <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="keyword">END IF</code></a>
            <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="keyword">IF</code> (cdifr .GT. <code class="constant">1.0d-6</code>) <code class="keyword">THEN</code></a>
              <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="keyword">IF</code> (xconst(il, km1) .LT. maxc*<code class="constant">1.0d-12</code>) <code class="keyword">THEN</code></a>
                <a href="null_p.html#convectivetransport_mod" target="origFile">cabv = maxc*<code class="constant">1.0d-12</code></a>
              <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="keyword">ELSE</code></a>
                <a href="null_p.html#convectivetransport_mod" target="origFile">cabv = xconst(il, km1)</a>
              <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="keyword">END IF</code></a>
              <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="keyword">IF</code> (xconst(il, ik) .LT. maxc*<code class="constant">1.0d-12</code>) <code class="keyword">THEN</code></a>
                <a href="null_p.html#convectivetransport_mod" target="origFile">cbel = maxc*<code class="constant">1.0d-12</code></a>
              <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="keyword">ELSE</code></a>
                <a href="null_p.html#convectivetransport_mod" target="origFile">cbel = xconst(il, ik)</a>
              <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="keyword">END IF</code></a>
              <a href="null_p.html#convectivetransport_mod" target="origFile">chat(il, ik) = <code class="funcname">LOG</code>(cabv/cbel)/(cabv-cbel)*cabv*cbel</a>
            <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="keyword">ELSE</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">! ---------------------------------------------------</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">! The two layers have only a small difference, so use</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">! arithmetic mean.</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">! ---------------------------------------------------</code></a>
              <a href="null_p.html#convectivetransport_mod" target="origFile">chat(il, ik) = <code class="constant">0.5d0</code>*(xconst(il, ik)+xconst(il, km1))</a>
            <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="keyword">END IF</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">! -------------------------------------</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">! Provisional up and down draft values.</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">! -------------------------------------</code></a>
            <a href="null_p.html#convectivetransport_mod" target="origFile">conu(il, ik) = chat(il, ik)</a>
            <a href="null_p.html#convectivetransport_mod" target="origFile">cond(il, ik) = chat(il, km1)</a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">! ------------------</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">! Provisional tends.</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">! ------------------</code></a>
            <a href="null_p.html#convectivetransport_mod" target="origFile">dcondt(il, ik) = <code class="constant">0.0d0</code></a>
          <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="keyword">END DO </code><code class="label">illoop1</code></a>
        <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="keyword">END DO </code><code class="label">ikloop1</code></a>
        <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="keyword">WHERE </code>(edi(:, :) .LT. <code class="constant">0.0d0</code>) edi(:, :) = <code class="constant">0.0d0</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="label">illoop2:</code><code class="keyword">DO </code>il=<code class="constant">1</code>,il2g</a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">! ----------------------------------------------------------------------</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">! Find the mixing ratio in the downdraft, top of atmosphere down.</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">! NOTE: mass flux   in downdraft (mdi) will be zero or negative.</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">!       entrainment in downdraft (edi) will be zero or positive.</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">! ----------------------------------------------------------------------</code></a>
 <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="label">ikloopdd:</code><code class="keyword">DO </code>ik=<code class="constant">2</code>,k2</a>
            <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="keyword">IF</code> (mdi(il, ik-<code class="constant">1</code>) .LT. -xmbsth .OR. edi(il, ik) .GT. xmbsth<code class="label">&</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="label">&           </code>) cond(il, ik) = (cond(il, ik-<code class="constant">1</code>)*mdi(il, ik-<code class="constant">1</code>)-xconst(il, ik<code class="label">&</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="label">&               </code>)*edi(il, ik))/(mdi(il, ik-<code class="constant">1</code>)-edi(il, ik))</a>
          <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="keyword">END DO </code><code class="label">ikloopdd</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">! ------------------------------------------------------</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">! Calculate updrafts with scavenging from bottom to top.</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">! Include the downdrafts.</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">! ------------------------------------------------------</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">! -------------------------------------</code></a>
<a name="p0"></a><a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">! Do the bottom most levels in the pbl.</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">! -------------------------------------</code></a>
          <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="keyword">IF</code> (</a><a href="msg.html#p0" target="msg"><code class="comment"><img src="danger.gif" align=middle border=0 alt="!" /></code></a><a href="null_p.html#convectivetransport_mod" target="origFile"><code class="funcname">SUM</code>(dpi(il, k2:pbli(il):-<code class="constant">1</code>)) .EQ. <code class="constant">0.0d0</code>) <code class="keyword">THEN</code></a>
            <a href="null_p.html#convectivetransport_mod" target="origFile">err_msg = <code class="string">'Problem in convectiveTransport.'</code></a>
            <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="keyword">PRINT*</code>, err_msg</a>
            <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="keyword">STOP</code></a>
          <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="keyword">ELSE</code></a>
            <a href="null_p.html#convectivetransport_mod" target="origFile">arg1(:) = xconst(il, k2:pbli(il):-<code class="constant">1</code>)*dpi(il, k2:pbli(il):-<code class="constant">1</code>)</a>
            <a href="null_p.html#convectivetransport_mod" target="origFile">avg_pbl = <code class="funcname">SUM</code>(arg1(:))/<code class="funcname">SUM</code>(dpi(il, k2:pbli(il):-<code class="constant">1</code>))</a>
            <a href="null_p.html#convectivetransport_mod" target="origFile">sqrt_fisg = <code class="funcname">SQRT</code>(fisg(il, pbli(il)))</a>
            <a href="null_p.html#convectivetransport_mod" target="origFile">scav = avg_pbl*(<code class="constant">1.0d0</code>-sqrt_fisg)</a>
            <a href="null_p.html#convectivetransport_mod" target="origFile">conu(il, pbli(il)) = avg_pbl*sqrt_fisg</a>
            <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="keyword">IF</code> (chat(il, pbli(il)) .GT. xconst(il, pbli(il)-<code class="constant">1</code>)) <code class="keyword">THEN</code></a>
              <a href="null_p.html#convectivetransport_mod" target="origFile">min1 = xconst(il, pbli(il)-<code class="constant">1</code>)</a>
            <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="keyword">ELSE</code></a>
              <a href="null_p.html#convectivetransport_mod" target="origFile">min1 = chat(il, pbli(il))</a>
            <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="keyword">END IF</code></a>
            <a href="null_p.html#convectivetransport_mod" target="origFile">fluxin = (mui(il, pbli(il))+mdi(il, pbli(il)))*min1 - mdi(il<code class="label">&</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="label">&             </code>, pbli(il))*cond(il, pbli(il))</a>
            <a href="null_p.html#convectivetransport_mod" target="origFile">fluxout = mui(il, pbli(il))*conu(il, pbli(il)) + mui(il, <code class="label">&</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="label">&             </code>pbli(il))*scav</a>
            <a href="null_p.html#convectivetransport_mod" target="origFile">dcondt(il, k2) = (fluxin-fluxout)/<code class="funcname">SUM</code>(dpi(il, k2:pbli(il):-<code class="constant">1</code><code class="label">&</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="label">&             </code>))</a>
            <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="keyword">IF</code> (avg_pbl .GT. <code class="constant">0.0d0</code>) <code class="keyword">THEN</code></a>
              <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="keyword">DO </code>ik=k2,pbli(il),-<code class="constant">1</code></a>
                <a href="null_p.html#convectivetransport_mod" target="origFile">qq(ideep(il), ik, ic) = (avg_pbl+dcondt(il, k2)*delt)/<code class="label">&</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="label">&                 </code>avg_pbl*xconst(il, ik)</a>
              <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="keyword">END DO</code></a>
            <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="keyword">END IF</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">! ---------------------------</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">! Loop over all other levels.</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">! ---------------------------</code></a>
    <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="label">ikloop2:</code><code class="keyword">DO </code>ik=pbli(il)-<code class="constant">1</code>,<code class="constant">2</code>,-<code class="constant">1</code></a>
              <a href="null_p.html#convectivetransport_mod" target="origFile">kp1 = ik + <code class="constant">1</code></a>
              <a href="null_p.html#convectivetransport_mod" target="origFile">km1 = ik - <code class="constant">1</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">! -----------------------------</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">! Find mixing ratio in updraft.</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">! -----------------------------</code></a>
              <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="keyword">IF</code> (mui(il, kp1) - dui(il, ik) + eui(il, ik) .GT. xmbsth) <code class="label">&</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="label">&             </code><code class="keyword">THEN</code></a>
                <a href="null_p.html#convectivetransport_mod" target="origFile">sqrt_fisg = <code class="funcname">SQRT</code>(fisg(il, ik))</a>
                <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="keyword">IF</code> (mui(il, kp1) + eui(il, ik) .GE. <code class="constant">0.</code>) <code class="keyword">THEN</code></a>
                  <a href="null_p.html#convectivetransport_mod" target="origFile">abs1 = mui(il, kp1) + eui(il, ik)</a>
                <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="keyword">ELSE</code></a>
                  <a href="null_p.html#convectivetransport_mod" target="origFile">abs1 = -(mui(il, kp1)+eui(il, ik))</a>
                <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="keyword">END IF</code></a>
                <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="keyword">IF</code> (abs1 .GE. xmbsth) <code class="keyword">THEN</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">!... mix updraft and entrainment, then detrain this concentration</code></a>
                  <a href="null_p.html#convectivetransport_mod" target="origFile">temp_conu = (mui(il, kp1)*conu(il, kp1)+eui(il, ik)*<code class="label">&</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="label">&                   </code>xconst(il, ik))/(mui(il, kp1)+eui(il, ik))</a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">!... if updraft and entrainment flux sum to 0.0, then take average concen</code></a>
                <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="keyword">ELSE</code></a>
                  <a href="null_p.html#convectivetransport_mod" target="origFile">temp_conu = (xconst(il, ik)+conu(il, kp1))/<code class="constant">2.0d0</code></a>
                <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="keyword">END IF</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">!</code></a>
                <a href="null_p.html#convectivetransport_mod" target="origFile">scav = ((mui(il, kp1)*conu(il, kp1)-dui(il, ik)*<code class="label">&</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="label">&                 </code>temp_conu)*(<code class="constant">1.0d0</code>-fisg(il, ik))+eui(il, ik)*xconst(il<code class="label">&</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="label">&                 </code>, ik)*(<code class="constant">1.0d0</code>-sqrt_fisg))/(mui(il, kp1)-dui(il, ik)+eui<code class="label">&</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="label">&                 </code>(il, ik))</a>
                <a href="null_p.html#convectivetransport_mod" target="origFile">conu(il, ik) = ((mui(il, kp1)*conu(il, kp1)-dui(il, ik)*<code class="label">&</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="label">&                 </code>temp_conu)*fisg(il, ik)+eui(il, ik)*xconst(il, ik)*<code class="label">&</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="label">&                 </code>sqrt_fisg)/(mui(il, kp1)-dui(il, ik)+eui(il, ik))</a>
              <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="keyword">ELSE</code></a>
                <a href="null_p.html#convectivetransport_mod" target="origFile">conu(il, ik) = xconst(il, ik)</a>
                <a href="null_p.html#convectivetransport_mod" target="origFile">scav = <code class="constant">0.0d0</code></a>
              <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="keyword">END IF</code></a>
              <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="keyword">IF</code> (chat(il, ik) .GT. xconst(il, km1)) <code class="keyword">THEN</code></a>
                <a href="null_p.html#convectivetransport_mod" target="origFile">min2 = xconst(il, km1)</a>
              <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="keyword">ELSE</code></a>
                <a href="null_p.html#convectivetransport_mod" target="origFile">min2 = chat(il, ik)</a>
              <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="keyword">END IF</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">! -------------------------------------------------------</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">! Calculate fluxes into and out of box.  With scavenging</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">! included the net flux for the whole column is no longer</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">! guaranteed to be zero.</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">! Include the downdrafts.</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">! -------------------------------------------------------</code></a>
              <a href="null_p.html#convectivetransport_mod" target="origFile">fluxin = mui(il, kp1)*conu(il, kp1) + (mui(il, ik)+mdi(il<code class="label">&</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="label">&               </code>, ik))*min2 - mdi(il, ik)*cond(il, ik)</a>
              <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="keyword">IF</code> (chat(il, kp1) .GT. xconst(il, ik)) <code class="keyword">THEN</code></a>
                <a href="null_p.html#convectivetransport_mod" target="origFile">min3 = xconst(il, ik)</a>
              <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="keyword">ELSE</code></a>
                <a href="null_p.html#convectivetransport_mod" target="origFile">min3 = chat(il, kp1)</a>
              <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="keyword">END IF</code></a>
              <a href="null_p.html#convectivetransport_mod" target="origFile">fluxout = mui(il, ik)*conu(il, ik) + (mui(il, kp1)+mdi(il<code class="label">&</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="label">&               </code>, kp1))*min3 + (mui(il, ik)+mui(il, kp1))*<code class="constant">0.5d0</code>*scav - <code class="label">&</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="label">&               </code>mdi(il, kp1)*cond(il, kp1)</a>
              <a href="null_p.html#convectivetransport_mod" target="origFile">dcondt(il, ik) = (fluxin-fluxout)/dpi(il, ik)</a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">! --------------------------------------------</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">! Update and scatter data back to full arrays.</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="comment">! --------------------------------------------</code></a>
              <a href="null_p.html#convectivetransport_mod" target="origFile">qq(ideep(il), ik, ic) = xconst(il, ik) + dcondt(il, ik)*<code class="label">&</code></a>
<a href="null_p.html#convectivetransport_mod" target="origFile"><code class="label">&               </code>delt</a>
            <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="keyword">END DO </code><code class="label">ikloop2</code></a>
          <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="keyword">END IF</code></a>
        <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="keyword">END DO </code><code class="label">illoop2</code></a>
      <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="keyword">END IF</code></a>
    <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="keyword">END DO </code><code class="label">icloop</code></a>
    <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="keyword">RETURN</code></a>
  <a href="null_p.html#convectivetransport_mod" target="origFile"><code class="keyword">END SUBROUTINE </code><code class="funcname">CONVECTIVETRANSPORT</code></a>
<code class="keyword">END MODULE </code><code class="funcname">CONVECTIVETRANSPORT_MOD_D</code>
</pre>
</body>
