<title>Generated by TAPENADE</title>
<link type="text/CSS" rel="stylesheet" href="tapenade.css">
<link type="text/CSS" rel="stylesheet" href="fortranStyle.css">
<body>
<pre><code class="comment">!        Generated by TAPENADE     (INRIA, Ecuador team)</code>
<code class="comment">!  Tapenade 3.12 (r6213) - 13 Oct 2016 10:30</code>
<code class="comment">!</code>
<code class="keyword">MODULE </code><code class="funcname">MPP_MOD_D</code>
  <code class="keyword">USE </code><code class="funcname">FV_ARRAYS_MOD</code>, <code class="keyword">ONLY </code>: real8
  <code class="keyword">IMPLICIT NONE</code>
  PRIVATE 
  PUBLIC mpp_sum
  PUBLIC mpp_sum_tlm
  <code class="keyword">INTERFACE </code><code class="funcname">MPP_SUM</code>
      <code class="keyword">MODULE PROCEDURE </code><code class="funcname">MPP_SUM_R1</code>
      <code class="keyword">MODULE PROCEDURE </code><code class="funcname">MPP_SUM_R2</code>
  <code class="keyword">END INTERFACE</code>

  <code class="keyword">INTERFACE </code><code class="funcname">MPP_SUM_TLM</code>
      <code class="keyword">MODULE PROCEDURE </code><code class="funcname">MPP_SUM_R1_TLM</code>
  <code class="keyword">END INTERFACE</code>

<a name="mpp_sum_r1_tlm"></a>
<code class="keyword">CONTAINS</code>
<a href="null_p.html#mpp_mod" target="origFile"><code class="comment">!  Differentiation of mpp_sum_r1 in forward (tangent) mode:</code></a>
<a href="null_p.html#mpp_mod" target="origFile"><code class="comment">!   variations   of useful results: psums</code></a>
<a href="null_p.html#mpp_mod" target="origFile"><code class="comment">!   with respect to varying inputs: psums</code></a>
<a name="mpp_sum_r1_tlmi558"></a>  <a href="null_p.html#mpp_mod" target="origFile"><code class="keyword">SUBROUTINE </code><code class="funcname">MPP_SUM_R1_TLM</code>(<code class="vardecl">psums</code>, <code class="vardecl">psums_tl</code>, <code class="vardecl">dims</code>)</a>
    <a href="null_p.html#mpp_mod" target="origFile"><code class="keyword">IMPLICIT NONE</code></a>
<a name="mpp_sum_r1_tlmi559"></a>    <a href="null_p.html#mpp_modi558" target="origFile"><code class="typename">REAL(</code><code class="modifier">real8</code><code class="typename">)</code>, <code class="typename">INTENT(INOUT) </code>:: <code class="vardecl">psums</code>(:)</a>
<a name="mpp_sum_r1_tlmi560"></a>    <a href="null_p.html#mpp_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">real8</code><code class="typename">)</code>, <code class="typename">INTENT(INOUT) </code>:: <code class="vardecl">psums_tl</code>(:)</a>
<a name="mpp_sum_r1_tlmi561"></a>    <a href="null_p.html#mpp_modi559" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">dims</code></a>
<a name="mpp_sum_r1_tlmi561"></a>    <a href="null_p.html#mpp_modi560" target="origFile"><code class="keyword">INTRINSIC </code><code class="funcname">SUM</code></a>
    <a href="null_p.html#mpp_modi561" target="origFile">psums_tl = <code class="funcname">SUM</code>(psums_tl)</a>
<a name="mpp_sum_r1"></a>    <a href="null_p.html#mpp_modi561" target="origFile">psums = <code class="funcname">SUM</code>(psums)</a>
  <a href="null_p.html#mpp_mod" target="origFile"><code class="keyword">END SUBROUTINE </code><code class="funcname">MPP_SUM_R1_TLM</code></a>
  <a href="null_p.html#mpp_mod" target="origFile"><code class="keyword">SUBROUTINE </code><code class="funcname">MPP_SUM_R1</code>(<code class="vardecl">psums</code>, <code class="vardecl">dims</code>)</a>
    <a href="null_p.html#mpp_mod" target="origFile"><code class="keyword">IMPLICIT NONE</code></a>
    <a href="null_p.html#mpp_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">real8</code><code class="typename">)</code>, <code class="typename">INTENT(INOUT) </code>:: <code class="vardecl">psums</code>(:)</a>
    <a href="null_p.html#mpp_mod" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">dims</code></a>
    <a href="null_p.html#mpp_mod" target="origFile"><code class="keyword">INTRINSIC </code><code class="funcname">SUM</code></a>
<a name="mpp_sum_r2"></a>    <a href="null_p.html#mpp_mod" target="origFile">psums = <code class="funcname">SUM</code>(psums)</a>
  <a href="null_p.html#mpp_mod" target="origFile"><code class="keyword">END SUBROUTINE </code><code class="funcname">MPP_SUM_R1</code></a>
  <a href="null_p.html#mpp_mod" target="origFile"><code class="keyword">SUBROUTINE </code><code class="funcname">MPP_SUM_R2</code>(<code class="vardecl">psums</code>, <code class="vardecl">dims</code>)</a>
    <a href="null_p.html#mpp_mod" target="origFile"><code class="keyword">IMPLICIT NONE</code></a>
    <a href="null_p.html#mpp_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">real8</code><code class="typename">)</code>, <code class="typename">INTENT(INOUT) </code>:: <code class="vardecl">psums</code>(:, :)</a>
    <a href="null_p.html#mpp_mod" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">dims</code></a>
    <a href="null_p.html#mpp_mod" target="origFile"><code class="keyword">INTRINSIC </code><code class="funcname">SUM</code></a>
    <a href="null_p.html#mpp_mod" target="origFile">psums = <code class="funcname">SUM</code>(psums)</a>
  <a href="null_p.html#mpp_mod" target="origFile"><code class="keyword">END SUBROUTINE </code><code class="funcname">MPP_SUM_R2</code></a>
<code class="keyword">END MODULE </code><code class="funcname">MPP_MOD_D</code>
</pre>
</body>
