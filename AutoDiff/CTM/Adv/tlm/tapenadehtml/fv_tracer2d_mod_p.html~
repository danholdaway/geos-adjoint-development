<title>Generated by TAPENADE</title>
<link type="text/CSS" rel="stylesheet" href="tapenade.css">
<link type="text/CSS" rel="stylesheet" href="fortranStyle.css">
<body>
<pre><code class="comment">!        Generated by TAPENADE     (INRIA, Ecuador team)</code>
<code class="comment">!  Tapenade 3.12 (r6213) - 13 Oct 2016 10:30</code>
<code class="comment">!</code>
<code class="keyword">MODULE </code><code class="funcname">FV_TRACER2D_MOD</code>
  <code class="keyword">USE </code><code class="funcname">FV_ARRAYS_MOD</code>, <code class="keyword">ONLY </code>: fvprc, real4, real8
  <code class="keyword">USE </code><code class="funcname">TP_CORE_MOD</code>, <code class="keyword">ONLY </code>: fv_tp_2d
  <code class="keyword">USE </code><code class="funcname">FV_GRID_TOOLS_MOD</code>, <code class="keyword">ONLY </code>: area, rarea, dxa, dya, dx, dy
  <code class="keyword">USE </code><code class="funcname">FV_GRID_UTILS_MOD</code>, <code class="keyword">ONLY </code>: sina_u, sina_v, sin_sg
  <code class="keyword">USE </code><code class="funcname">FV_MP_MOD</code>, <code class="keyword">ONLY </code>: gid, domain, mp_reduce_max, ng, isd, ied, jsd, <code class="label">&</code>
<code class="label">& </code>jed, is, js, ie, je
  <code class="keyword">USE </code><code class="funcname">MPP_DOMAINS_MOD</code>, <code class="keyword">ONLY </code>: mpp_update_domains, cgrid_ne, <code class="label">&</code>
<code class="label">& </code>mpp_get_boundary
  <code class="keyword">USE </code><code class="funcname">FV_TIMING_MOD</code>, <code class="keyword">ONLY </code>: timing_on, timing_off
  <code class="keyword">IMPLICIT NONE</code>
  PRIVATE 
  PUBLIC tracer_2d, tracer_2d_1l, offline_tracer_advection
<a name="offline_tracer_advection"></a>
<code class="keyword">CONTAINS</code>
  <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">SUBROUTINE </code><code class="funcname">OFFLINE_TRACER_ADVECTION</code>(<code class="vardecl">q</code>, <code class="vardecl">ple0</code>, <code class="vardecl">ple1</code>, <code class="vardecl">mfx</code>, <code class="vardecl">mfy</code>, <code class="vardecl">cx</code>, <code class="vardecl">cy</code>, <code class="label">&</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="label">&   </code><code class="vardecl">ak</code>, <code class="vardecl">bk</code>, <code class="vardecl">ptop</code>, <code class="vardecl">npx</code>, <code class="vardecl">npy</code>, <code class="vardecl">npz</code>, <code class="vardecl">nq</code>, <code class="vardecl">hord</code>, <code class="vardecl">kord</code>, <code class="vardecl">q_split</code>, <code class="vardecl">dt</code>, <code class="vardecl">z_tracer</code>, <code class="label">&</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="label">&   </code><code class="vardecl">fill</code>)</a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">USE </code><code class="funcname">FV_MAPZ_MOD</code>, <code class="keyword">ONLY </code>: map1_q2</a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">USE </code><code class="funcname">FV_FILL_MOD</code>, <code class="keyword">ONLY </code>: fillz</a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">IMPLICIT NONE</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">!do k = 1,npz</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">!   do j = js,je</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">!      do i = is,ie</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">!         q(i,j,k,iq) = q1(i,j,k) * scalingFactors(k)</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">!      enddo</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">!   enddo</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">!enddo</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">! nq loop</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">npx</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">npy</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">npz</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">! number of tracers to be advected</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">nq</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">hord</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">kord</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">q_split</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">LOGICAL</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">z_tracer</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">LOGICAL</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">fill</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">dt</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">! DELP before dyn_core</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">ple0</code>(<code class="vardecl">is</code>:<code class="vardecl">ie</code>, <code class="vardecl">js</code>:<code class="vardecl">je</code>, <code class="vardecl">npz</code>+<code class="constant">1</code>)</a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">! DELP after dyn_core</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">INTENT(INOUT) </code>:: <code class="vardecl">ple1</code>(<code class="vardecl">is</code>:<code class="vardecl">ie</code>, <code class="vardecl">js</code>:<code class="vardecl">je</code>, <code class="vardecl">npz</code>+<code class="constant">1</code>)</a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">! Courant Number X-Dir</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">cx</code>(<code class="vardecl">is</code>:<code class="vardecl">ie</code>, <code class="vardecl">js</code>:<code class="vardecl">je</code>, <code class="vardecl">npz</code>)</a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">! Courant Number Y-Dir</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">cy</code>(<code class="vardecl">is</code>:<code class="vardecl">ie</code>, <code class="vardecl">js</code>:<code class="vardecl">je</code>, <code class="vardecl">npz</code>)</a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">! Mass Flux X-Dir</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">mfx</code>(<code class="vardecl">is</code>:<code class="vardecl">ie</code>, <code class="vardecl">js</code>:<code class="vardecl">je</code>, <code class="vardecl">npz</code>)</a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">! Mass Flux Y-Dir</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">mfy</code>(<code class="vardecl">is</code>:<code class="vardecl">ie</code>, <code class="vardecl">js</code>:<code class="vardecl">je</code>, <code class="vardecl">npz</code>)</a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">! Tracers</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">INTENT(INOUT) </code>:: <code class="vardecl">q</code>(<code class="vardecl">is</code>:<code class="vardecl">ie</code>, <code class="vardecl">js</code>:<code class="vardecl">je</code>, <code class="vardecl">npz</code>, <code class="vardecl">nq</code>)</a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">! AK for remapping</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL(</code><code class="modifier">real8</code><code class="typename">)</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">ak</code>(<code class="vardecl">npz</code>+<code class="constant">1</code>)</a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">! BK for remapping</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL(</code><code class="modifier">real8</code><code class="typename">)</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">bk</code>(<code class="vardecl">npz</code>+<code class="constant">1</code>)</a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL(</code><code class="modifier">real8</code><code class="typename">)</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">ptop</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">! Local Arrays</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">! X-Dir for MPP Updates</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL(</code><code class="modifier">real8</code><code class="typename">) </code>:: <code class="vardecl">xl</code>(<code class="vardecl">isd</code>:<code class="vardecl">ied</code>+<code class="constant">1</code>, <code class="vardecl">jsd</code>:<code class="vardecl">jed</code>, <code class="vardecl">npz</code>)</a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">! Y-Dir for MPP Updates</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL(</code><code class="modifier">real8</code><code class="typename">) </code>:: <code class="vardecl">yl</code>(<code class="vardecl">isd</code>:<code class="vardecl">ied</code>, <code class="vardecl">jsd</code>:<code class="vardecl">jed</code>+<code class="constant">1</code>, <code class="vardecl">npz</code>)</a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">! Courant Number X-Dir</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">cxl</code>(<code class="vardecl">is</code>:<code class="vardecl">ie</code>+<code class="constant">1</code>, <code class="vardecl">jsd</code>:<code class="vardecl">jed</code>, <code class="vardecl">npz</code>)</a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">! Courant Number Y-Dir</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">cyl</code>(<code class="vardecl">isd</code>:<code class="vardecl">ied</code>, <code class="vardecl">js</code>:<code class="vardecl">je</code>+<code class="constant">1</code>, <code class="vardecl">npz</code>)</a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">! Mass Flux X-Dir</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">mfxl</code>(<code class="vardecl">is</code>:<code class="vardecl">ie</code>+<code class="constant">1</code>, <code class="vardecl">js</code>:<code class="vardecl">je</code>, <code class="vardecl">npz</code>)</a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">! Mass Flux Y-Dir</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">mfyl</code>(<code class="vardecl">is</code>:<code class="vardecl">ie</code>, <code class="vardecl">js</code>:<code class="vardecl">je</code>+<code class="constant">1</code>, <code class="vardecl">npz</code>)</a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">! Pressure Thickness</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL(</code><code class="modifier">real8</code><code class="typename">) </code>:: <code class="vardecl">dpl</code>(<code class="vardecl">is</code>:<code class="vardecl">ie</code>, <code class="vardecl">js</code>:<code class="vardecl">je</code>, <code class="vardecl">npz</code>)</a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">! Pressure Thickness</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL(</code><code class="modifier">real8</code><code class="typename">) </code>:: <code class="vardecl">dpa</code>(<code class="vardecl">is</code>:<code class="vardecl">ie</code>, <code class="vardecl">js</code>:<code class="vardecl">je</code>, <code class="vardecl">npz</code>)</a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">! Local Tracer Arrays</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">! 2D Tracers</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL(</code><code class="modifier">real8</code><code class="typename">) </code>:: <code class="vardecl">q1</code>(<code class="vardecl">is</code>:<code class="vardecl">ie</code>, <code class="vardecl">js</code>:<code class="vardecl">je</code>, <code class="vardecl">npz</code>)</a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">! 2D Tracers</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL(</code><code class="modifier">real8</code><code class="typename">) </code>:: <code class="vardecl">q2</code>(<code class="vardecl">isd</code>:<code class="vardecl">ied</code>, <code class="vardecl">jsd</code>:<code class="vardecl">jed</code>, <code class="vardecl">nq</code>)</a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">! 3D Tracers</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL(</code><code class="modifier">real8</code><code class="typename">) </code>:: <code class="vardecl">q3</code>(<code class="vardecl">isd</code>:<code class="vardecl">ied</code>, <code class="vardecl">jsd</code>:<code class="vardecl">jed</code>, <code class="vardecl">npz</code>, <code class="vardecl">nq</code>)</a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">! Local Buffer Arrarys</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL(</code><code class="modifier">real8</code><code class="typename">) </code>:: <code class="vardecl">wbuffer</code>(<code class="vardecl">js</code>:<code class="vardecl">je</code>, <code class="vardecl">npz</code>)</a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL(</code><code class="modifier">real8</code><code class="typename">) </code>:: <code class="vardecl">sbuffer</code>(<code class="vardecl">is</code>:<code class="vardecl">ie</code>, <code class="vardecl">npz</code>)</a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL(</code><code class="modifier">real8</code><code class="typename">) </code>:: <code class="vardecl">ebuffer</code>(<code class="vardecl">js</code>:<code class="vardecl">je</code>, <code class="vardecl">npz</code>)</a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL(</code><code class="modifier">real8</code><code class="typename">) </code>:: <code class="vardecl">nbuffer</code>(<code class="vardecl">is</code>:<code class="vardecl">ie</code>, <code class="vardecl">npz</code>)</a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">! Local Remap Arrays</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL(</code><code class="modifier">real8</code><code class="typename">) </code>:: <code class="vardecl">pe1</code>(<code class="vardecl">is</code>:<code class="vardecl">ie</code>, <code class="vardecl">npz</code>+<code class="constant">1</code>)</a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL(</code><code class="modifier">real8</code><code class="typename">) </code>:: <code class="vardecl">pe2</code>(<code class="vardecl">is</code>:<code class="vardecl">ie</code>, <code class="vardecl">npz</code>+<code class="constant">1</code>)</a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL(</code><code class="modifier">real8</code><code class="typename">) </code>:: <code class="vardecl">dp2</code>(<code class="vardecl">is</code>:<code class="vardecl">ie</code>, <code class="vardecl">js</code>:<code class="vardecl">je</code>, <code class="vardecl">npz</code>)</a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">! Local indices</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">INTEGER </code>:: <code class="vardecl">i</code>, <code class="vardecl">j</code>, <code class="vardecl">k</code>, <code class="vardecl">n</code>, <code class="vardecl">iq</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL(</code><code class="modifier">real8</code><code class="typename">) </code>:: <code class="vardecl">dtr8</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL(</code><code class="modifier">real8</code><code class="typename">) </code>:: <code class="vardecl">scalingfactor</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">!real(REAL8) :: scalingFactors(npz)</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">! Time-step</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile">dtr8 = dt</a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile">wbuffer = <code class="constant">0.0</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile">sbuffer = <code class="constant">0.0</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile">ebuffer = <code class="constant">0.0</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile">nbuffer = <code class="constant">0.0</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">! Fill CX/CY C-Grid boundaries and update ghost regions</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile">xl(is:ie, js:je, :) = cx(:, :, :)</a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile">yl(is:ie, js:je, :) = cy(:, :, :)</a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">CALL </code><code class="funcname">MPP_GET_BOUNDARY</code>(xl, yl, domain, <code class="keyword">wbufferx</code>=wbuffer, <code class="keyword">ebufferx</code>=<code class="label">&</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="label">&                   </code>ebuffer, <code class="keyword">sbuffery</code>=sbuffer, <code class="keyword">nbuffery</code>=nbuffer, <code class="label">&</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="label">&                   </code><code class="keyword">gridtype</code>=cgrid_ne)</a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile">xl(ie+<code class="constant">1</code>, js:je, :) = ebuffer</a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile">yl(is:ie, je+<code class="constant">1</code>, :) = nbuffer</a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">CALL </code><code class="funcname">MPP_UPDATE_DOMAINS</code>(xl, yl, domain, <code class="keyword">gridtype</code>=cgrid_ne, <code class="keyword">complete</code>=<code class="label">&</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="label">&                     </code><code class="constant">.true.</code>)</a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile">cxl(is:ie+<code class="constant">1</code>, jsd:jed, :) = xl(is:ie+<code class="constant">1</code>, jsd:jed, :)</a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile">cyl(isd:ied, js:je+<code class="constant">1</code>, :) = yl(isd:ied, js:je+<code class="constant">1</code>, :)</a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">! Fill MFX/MFY C-Grid boundaries</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile">xl(is:ie, js:je, :) = mfx(:, :, :)</a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile">yl(is:ie, js:je, :) = mfy(:, :, :)</a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">CALL </code><code class="funcname">MPP_GET_BOUNDARY</code>(xl, yl, domain, <code class="keyword">wbufferx</code>=wbuffer, <code class="keyword">ebufferx</code>=<code class="label">&</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="label">&                   </code>ebuffer, <code class="keyword">sbuffery</code>=sbuffer, <code class="keyword">nbuffery</code>=nbuffer, <code class="label">&</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="label">&                   </code><code class="keyword">gridtype</code>=cgrid_ne)</a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile">xl(ie+<code class="constant">1</code>, js:je, :) = ebuffer</a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile">yl(is:ie, je+<code class="constant">1</code>, :) = nbuffer</a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile">mfxl(is:ie+<code class="constant">1</code>, js:je, :) = xl(is:ie+<code class="constant">1</code>, js:je, :)</a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile">mfyl(is:ie, js:je+<code class="constant">1</code>, :) = yl(is:ie, js:je+<code class="constant">1</code>, :)</a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">! Fill local tracers and pressure thickness</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile">dpl(:, :, :) = ple0(:, :, <code class="constant">2</code>:npz+<code class="constant">1</code>) - ple0(:, :, <code class="constant">1</code>:npz)</a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile">q3(is:ie, js:je, :, :) = q(is:ie, js:je, :, :)</a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">IF</code> (z_tracer) <code class="keyword">THEN</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">!$omp parallel do default(shared) private(q2)</code></a>
      <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">DO </code>k=<code class="constant">1</code>,npz</a>
        <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">DO </code>iq=<code class="constant">1</code>,nq</a>
          <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">DO </code>j=js,je</a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">! To_do list:</code></a>
            <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">DO </code>i=is,ie</a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">! The data copying can be avoided if q is</code></a>
              <a href="null.html#fv_tracer2d_mod_d" target="diffFile">q2(i, j, iq) = q3(i, j, k, iq)</a>
            <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END DO</code></a>
          <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END DO</code></a>
        <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END DO</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">! re-dimensioned as q(i,j,nq,k)</code></a>
        <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">CALL </code><code class="funcname">TRACER_2D_1L</code>(q2, dpl(is, js, k), mfxl(is, js, k), mfyl(is, <code class="label">&</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="label">&                   </code>js, k), cxl(is, jsd, k), cyl(isd, js, k), npx, npy, <code class="label">&</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="label">&                   </code>npz, <code class="constant">1</code>, nq, hord, q_split, k, q3, dtr8, <code class="constant">0</code>, dpa)</a>
      <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END DO</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">ELSE</code></a>
      <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">CALL </code><code class="funcname">TRACER_2D</code>(q3, dpl, mfxl, mfyl, cxl, cyl, npx, npy, npz, <code class="constant">1</code>, nq<code class="label">&</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="label">&              </code>, hord, q_split, dtr8, <code class="constant">0</code>, dpa)</a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END IF</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">!------------------------------------------------------------------</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">! Re-Map constituents</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">! Do remapping one tracer at a time; seems to be faster</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">! It requires less memory than mapn_ppm</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">!------------------------------------------------------------------</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">DO </code>iq=<code class="constant">1</code>,nq</a>
      <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">DO </code>j=js,je</a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">! pressures mapping from (dpA is new delp after tracer_2d)</code></a>
        <a href="null.html#fv_tracer2d_mod_d" target="diffFile">pe1(:, <code class="constant">1</code>) = ptop</a>
        <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">DO </code>k=<code class="constant">2</code>,npz+<code class="constant">1</code></a>
          <a href="null.html#fv_tracer2d_mod_d" target="diffFile">pe1(:, k) = pe1(:, k-<code class="constant">1</code>) + dpa(:, j, k-<code class="constant">1</code>)</a>
        <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END DO</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">! pressures mapping to</code></a>
        <a href="null.html#fv_tracer2d_mod_d" target="diffFile">pe2(:, <code class="constant">1</code>) = ptop</a>
        <a href="null.html#fv_tracer2d_mod_d" target="diffFile">pe2(:, npz+<code class="constant">1</code>) = pe1(:, npz+<code class="constant">1</code>)</a>
        <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">DO </code>k=<code class="constant">2</code>,npz</a>
          <a href="null.html#fv_tracer2d_mod_d" target="diffFile">pe2(:, k) = ak(k) + bk(k)*pe1(:, npz+<code class="constant">1</code>)</a>
        <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END DO</code></a>
        <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">DO </code>k=<code class="constant">1</code>,npz</a>
          <a href="null.html#fv_tracer2d_mod_d" target="diffFile">dp2(:, j, k) = pe2(:, k+<code class="constant">1</code>) - pe2(:, k)</a>
        <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END DO</code></a>
        <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">CALL </code><code class="funcname">MAP1_Q2</code>(npz, pe1, q3(isd, jsd, <code class="constant">1</code>, iq), npz, pe2, q1(:, j, :<code class="label">&</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="label">&              </code>), dp2(:, j, :), is, ie, <code class="constant">0</code>, kord, j, isd, ied, jsd, jed)</a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">!, .true.)</code></a>
        <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">IF</code> (fill) <code class="keyword">CALL </code><code class="funcname">FILLZ</code>(ie - is + <code class="constant">1</code>, npz, <code class="constant">1</code>, q1(:, j, :), dp2(:, j<code class="label">&</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="label">&                      </code>, :))</a>
      <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END DO</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">! Rescale tracers based on ple1 at destination timestep</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">!------------------------------------------------------</code></a>
      <a href="null.html#fv_tracer2d_mod_d" target="diffFile">scalingfactor = <code class="funcname">CALCSCALINGFACTOR</code>(q1, dp2, ple1, npx, npy, npz, is<code class="label">&</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="label">&       </code>, ie, js, je)</a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">!scalingFactors = computeScalingFactors(q1, dp2, ple1, npx, npy, npz, is, ie, js, je)</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">! Return tracers</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">!---------------</code></a>
      <a href="null.html#fv_tracer2d_mod_d" target="diffFile">q(is:ie, js:je, <code class="constant">1</code>:npz, iq) = q1(is:ie, js:je, <code class="constant">1</code>:npz)*scalingfactor</a>
<a name="tracer_2d_1l"></a>    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END DO</code></a>
  <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END SUBROUTINE </code><code class="funcname">OFFLINE_TRACER_ADVECTION</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">!-----------------------------------------------------------------------</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">! !ROUTINE: Perform 2D horizontal-to-lagrangian transport</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">!-----------------------------------------------------------------------</code></a>
  <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">SUBROUTINE </code><code class="funcname">TRACER_2D_1L</code>(<code class="vardecl">q</code>, <code class="vardecl">dp0</code>, <code class="vardecl">mfx</code>, <code class="vardecl">mfy</code>, <code class="vardecl">cx</code>, <code class="vardecl">cy</code>, <code class="vardecl">npx</code>, <code class="vardecl">npy</code>, <code class="vardecl">npz</code>, <code class="vardecl">qs</code>, <code class="label">&</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="label">&   </code><code class="vardecl">nq</code>, <code class="vardecl">hord</code>, <code class="vardecl">q_split</code>, <code class="vardecl">k</code>, <code class="vardecl">q3</code>, <code class="vardecl">dt</code>, <code class="vardecl">id_divg</code>, <code class="vardecl">dpa</code>)</a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">IMPLICIT NONE</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">npx</code>, <code class="vardecl">npy</code>, <code class="vardecl">npz</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">k</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">! first tracer to advect</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">qs</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">! number of tracers to be advected</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">nq</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">hord</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">q_split</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">id_divg</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL(</code><code class="modifier">real8</code><code class="typename">)</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">dt</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">! 2D Tracers</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL(</code><code class="modifier">real8</code><code class="typename">)</code>, <code class="typename">INTENT(INOUT) </code>:: <code class="vardecl">q</code>(<code class="vardecl">isd</code>:<code class="vardecl">ied</code>, <code class="vardecl">jsd</code>:<code class="vardecl">jed</code>, <code class="vardecl">nq</code>)</a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">! Tracers</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL(</code><code class="modifier">real8</code><code class="typename">)</code>, <code class="typename">INTENT(INOUT) </code>:: <code class="vardecl">q3</code>(<code class="vardecl">isd</code>:<code class="vardecl">ied</code>, <code class="vardecl">jsd</code>:<code class="vardecl">jed</code>, <code class="vardecl">npz</code>, <code class="vardecl">nq</code>)</a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">! DELP before dyn_core</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL(</code><code class="modifier">real8</code><code class="typename">)</code>, <code class="typename">INTENT(INOUT) </code>:: <code class="vardecl">dp0</code>(<code class="vardecl">is</code>:<code class="vardecl">ie</code>, <code class="vardecl">js</code>:<code class="vardecl">je</code>)</a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">! DELP after advection</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL(</code><code class="modifier">real8</code><code class="typename">)</code>, <code class="typename">OPTIONAL</code>, <code class="typename">INTENT(OUT) </code>:: <code class="vardecl">dpa</code>(<code class="vardecl">is</code>:<code class="vardecl">ie</code>, <code class="vardecl">js</code>:<code class="vardecl">je</code>)</a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">! Courant Number X-Dir</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">cx</code>(<code class="vardecl">is</code>:<code class="vardecl">ie</code>+<code class="constant">1</code>, <code class="vardecl">jsd</code>:<code class="vardecl">jed</code>)</a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">! Courant Number Y-Dir</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">cy</code>(<code class="vardecl">isd</code>:<code class="vardecl">ied</code>, <code class="vardecl">js</code>:<code class="vardecl">je</code>+<code class="constant">1</code>)</a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">! Mass Flux X-Dir</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">mfx</code>(<code class="vardecl">is</code>:<code class="vardecl">ie</code>+<code class="constant">1</code>, <code class="vardecl">js</code>:<code class="vardecl">je</code>)</a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">! Mass Flux Y-Dir</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">mfy</code>(<code class="vardecl">is</code>:<code class="vardecl">ie</code>, <code class="vardecl">js</code>:<code class="vardecl">je</code>+<code class="constant">1</code>)</a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">! Local Arrays</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">fx</code>(<code class="vardecl">is</code>:<code class="vardecl">ie</code>+<code class="constant">1</code>, <code class="vardecl">js</code>:<code class="vardecl">je</code>)</a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">fy</code>(<code class="vardecl">is</code>:<code class="vardecl">ie</code>, <code class="vardecl">js</code>:<code class="vardecl">je</code>+<code class="constant">1</code>)</a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">mfx2</code>(<code class="vardecl">is</code>:<code class="vardecl">ie</code>+<code class="constant">1</code>, <code class="vardecl">js</code>:<code class="vardecl">je</code>)</a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">mfy2</code>(<code class="vardecl">is</code>:<code class="vardecl">ie</code>, <code class="vardecl">js</code>:<code class="vardecl">je</code>+<code class="constant">1</code>)</a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">cx2</code>(<code class="vardecl">is</code>:<code class="vardecl">ie</code>+<code class="constant">1</code>, <code class="vardecl">jsd</code>:<code class="vardecl">jed</code>)</a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">cy2</code>(<code class="vardecl">isd</code>:<code class="vardecl">ied</code>, <code class="vardecl">js</code>:<code class="vardecl">je</code>+<code class="constant">1</code>)</a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL(</code><code class="modifier">real8</code><code class="typename">) </code>:: <code class="vardecl">dp1</code>(<code class="vardecl">is</code>:<code class="vardecl">ie</code>, <code class="vardecl">js</code>:<code class="vardecl">je</code>)</a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL(</code><code class="modifier">real8</code><code class="typename">) </code>:: <code class="vardecl">dp2</code>(<code class="vardecl">is</code>:<code class="vardecl">ie</code>, <code class="vardecl">js</code>:<code class="vardecl">je</code>)</a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">ra_x</code>(<code class="vardecl">is</code>:<code class="vardecl">ie</code>, <code class="vardecl">jsd</code>:<code class="vardecl">jed</code>)</a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">ra_y</code>(<code class="vardecl">isd</code>:<code class="vardecl">ied</code>, <code class="vardecl">js</code>:<code class="vardecl">je</code>)</a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">xfx</code>(<code class="vardecl">is</code>:<code class="vardecl">ie</code>+<code class="constant">1</code>, <code class="vardecl">jsd</code>:<code class="vardecl">jed</code>)</a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">yfx</code>(<code class="vardecl">isd</code>:<code class="vardecl">ied</code>, <code class="vardecl">js</code>:<code class="vardecl">je</code>+<code class="constant">1</code>)</a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">cmax</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">frac</code>, <code class="vardecl">rdt</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">INTEGER </code>:: <code class="vardecl">nsplt</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">INTEGER </code>:: <code class="vardecl">i</code>, <code class="vardecl">j</code>, <code class="vardecl">it</code>, <code class="vardecl">iq</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">INTRINSIC </code><code class="funcname">ABS</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">INTRINSIC </code><code class="funcname">MAX</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">INTRINSIC </code><code class="funcname">INT</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">INTRINSIC </code><code class="funcname">REAL</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">INTRINSIC </code><code class="funcname">PRESENT</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">abs0</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">abs1</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">x1</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">y1</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">DO </code>j=jsd,jed</a>
      <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">DO </code>i=is,ie+<code class="constant">1</code></a>
        <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">IF</code> (cx(i, j) .GT. <code class="constant">0.</code>) <code class="keyword">THEN</code></a>
          <a href="null.html#fv_tracer2d_mod_d" target="diffFile">xfx(i, j) = cx(i, j)*dxa(i-<code class="constant">1</code>, j)*dy(i, j)*sin_sg(i-<code class="constant">1</code>, j, <code class="constant">3</code>)</a>
        <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">ELSE</code></a>
          <a href="null.html#fv_tracer2d_mod_d" target="diffFile">xfx(i, j) = cx(i, j)*dxa(i, j)*dy(i, j)*sin_sg(i, j, <code class="constant">1</code>)</a>
        <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END IF</code></a>
      <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END DO</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END DO</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">DO </code>j=js,je+<code class="constant">1</code></a>
      <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">DO </code>i=isd,ied</a>
        <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">IF</code> (cy(i, j) .GT. <code class="constant">0.</code>) <code class="keyword">THEN</code></a>
          <a href="null.html#fv_tracer2d_mod_d" target="diffFile">yfx(i, j) = cy(i, j)*dya(i, j-<code class="constant">1</code>)*dx(i, j)*sin_sg(i, j-<code class="constant">1</code>, <code class="constant">4</code>)</a>
        <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">ELSE</code></a>
          <a href="null.html#fv_tracer2d_mod_d" target="diffFile">yfx(i, j) = cy(i, j)*dya(i, j)*dx(i, j)*sin_sg(i, j, <code class="constant">2</code>)</a>
        <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END IF</code></a>
      <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END DO</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END DO</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">IF</code> (q_split .EQ. <code class="constant">0</code>) <code class="keyword">THEN</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">! Determine nsplt for tracer advection</code></a>
      <a href="null.html#fv_tracer2d_mod_d" target="diffFile">cmax = <code class="constant">0.</code></a>
      <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">DO </code>j=js,je</a>
        <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">DO </code>i=is,ie</a>
          <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">IF</code> (cx(i, j) .GE. <code class="constant">0.</code>) <code class="keyword">THEN</code></a>
            <a href="null.html#fv_tracer2d_mod_d" target="diffFile">abs0 = cx(i, j)</a>
          <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">ELSE</code></a>
            <a href="null.html#fv_tracer2d_mod_d" target="diffFile">abs0 = -cx(i, j)</a>
          <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END IF</code></a>
          <a href="null.html#fv_tracer2d_mod_d" target="diffFile">x1 = abs0 + (<code class="constant">1.</code>-sina_u(i, j))</a>
          <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">IF</code> (cy(i, j) .GE. <code class="constant">0.</code>) <code class="keyword">THEN</code></a>
            <a href="null.html#fv_tracer2d_mod_d" target="diffFile">abs1 = cy(i, j)</a>
          <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">ELSE</code></a>
            <a href="null.html#fv_tracer2d_mod_d" target="diffFile">abs1 = -cy(i, j)</a>
          <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END IF</code></a>
          <a href="null.html#fv_tracer2d_mod_d" target="diffFile">y1 = abs1 + (<code class="constant">1.</code>-sina_v(i, j))</a>
          <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">IF</code> (x1 .LT. y1) <code class="keyword">THEN</code></a>
            <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">IF</code> (y1 .LT. cmax) <code class="keyword">THEN</code></a>
              <a href="null.html#fv_tracer2d_mod_d" target="diffFile">cmax = cmax</a>
            <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">ELSE</code></a>
              <a href="null.html#fv_tracer2d_mod_d" target="diffFile">cmax = y1</a>
            <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END IF</code></a>
          <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">ELSE IF</code> (x1 .LT. cmax) <code class="keyword">THEN</code></a>
            <a href="null.html#fv_tracer2d_mod_d" target="diffFile">cmax = cmax</a>
          <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">ELSE</code></a>
            <a href="null.html#fv_tracer2d_mod_d" target="diffFile">cmax = x1</a>
          <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END IF</code></a>
        <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END DO</code></a>
      <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END DO</code></a>
      <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">CALL </code><code class="funcname">MP_REDUCE_MAX</code>(cmax)</a>
      <a href="null.html#fv_tracer2d_mod_d" target="diffFile">nsplt = <code class="funcname">INT</code>(<code class="constant">1.01 </code>+ cmax)</a>
      <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">IF</code> (gid .EQ. <code class="constant">0 </code>.AND. nsplt .GT. <code class="constant">5</code>) <code class="keyword">WRITE</code>(<code class="constant">6</code>, <code class="keyword">*</code>) k, <code class="label">&</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="label">&                                        </code><code class="string">'Tracer_2d_split='</code>, nsplt, cmax</a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">ELSE</code></a>
      <a href="null.html#fv_tracer2d_mod_d" target="diffFile">nsplt = q_split</a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END IF</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile">frac = <code class="constant">1.</code>/<code class="funcname">REAL</code>(nsplt)</a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">DO </code>j=jsd,jed</a>
      <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">DO </code>i=is,ie+<code class="constant">1</code></a>
        <a href="null.html#fv_tracer2d_mod_d" target="diffFile">cx2(i, j) = cx(i, j)*frac</a>
        <a href="null.html#fv_tracer2d_mod_d" target="diffFile">xfx(i, j) = xfx(i, j)*frac</a>
      <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END DO</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END DO</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">DO </code>j=js,je</a>
      <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">DO </code>i=is,ie+<code class="constant">1</code></a>
        <a href="null.html#fv_tracer2d_mod_d" target="diffFile">mfx2(i, j) = mfx(i, j)*frac</a>
      <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END DO</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END DO</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">DO </code>j=js,je+<code class="constant">1</code></a>
      <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">DO </code>i=isd,ied</a>
        <a href="null.html#fv_tracer2d_mod_d" target="diffFile">cy2(i, j) = cy(i, j)*frac</a>
        <a href="null.html#fv_tracer2d_mod_d" target="diffFile">yfx(i, j) = yfx(i, j)*frac</a>
      <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END DO</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END DO</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">DO </code>j=js,je+<code class="constant">1</code></a>
      <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">DO </code>i=is,ie</a>
        <a href="null.html#fv_tracer2d_mod_d" target="diffFile">mfy2(i, j) = mfy(i, j)*frac</a>
      <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END DO</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END DO</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">DO </code>j=jsd,jed</a>
      <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">DO </code>i=is,ie</a>
        <a href="null.html#fv_tracer2d_mod_d" target="diffFile">ra_x(i, j) = area(i, j) + xfx(i, j) - xfx(i+<code class="constant">1</code>, j)</a>
      <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END DO</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END DO</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">DO </code>j=js,je</a>
      <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">DO </code>i=isd,ied</a>
        <a href="null.html#fv_tracer2d_mod_d" target="diffFile">ra_y(i, j) = area(i, j) + yfx(i, j) - yfx(i, j+<code class="constant">1</code>)</a>
      <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END DO</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END DO</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">DO </code>j=js,je</a>
      <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">DO </code>i=is,ie</a>
        <a href="null.html#fv_tracer2d_mod_d" target="diffFile">dp1(i, j) = dp0(i, j)</a>
      <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END DO</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END DO</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">DO </code>it=<code class="constant">1</code>,nsplt</a>
      <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">DO </code>j=js,je</a>
        <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">DO </code>i=is,ie</a>
          <a href="null.html#fv_tracer2d_mod_d" target="diffFile">dp2(i, j) = dp1(i, j) + (mfx2(i, j)-mfx2(i+<code class="constant">1</code>, j)+mfy2(i, j)-<code class="label">&</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="label">&           </code>mfy2(i, j+<code class="constant">1</code>))*rarea(i, j)</a>
        <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END DO</code></a>
      <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END DO</code></a>
      <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">CALL </code><code class="funcname">TIMING_ON</code>(<code class="string">'COMM_TOTAL'</code>)</a>
      <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">CALL </code><code class="funcname">TIMING_ON</code>(<code class="string">'COMM_TRAC'</code>)</a>
      <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">CALL </code><code class="funcname">MPP_UPDATE_DOMAINS</code>(q, domain, <code class="keyword">complete</code>=<code class="constant">.true.</code>)</a>
      <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">CALL </code><code class="funcname">TIMING_OFF</code>(<code class="string">'COMM_TRAC'</code>)</a>
      <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">CALL </code><code class="funcname">TIMING_OFF</code>(<code class="string">'COMM_TOTAL'</code>)</a>
      <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">CALL </code><code class="funcname">TIMING_ON</code>(<code class="string">'fv_tp_2d'</code>)</a>
      <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">DO </code>iq=qs,nq</a>
        <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">CALL </code><code class="funcname">FV_TP_2D</code>(q(isd:, jsd:, iq), cx2, cy2, npx, npy, hord, fx, <code class="label">&</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="label">&               </code>fy, xfx, yfx, ra_x, ra_y, <code class="keyword">mfx</code>=mfx2, <code class="keyword">mfy</code>=mfy2)</a>
        <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">IF</code> (it .EQ. nsplt) <code class="keyword">THEN</code></a>
          <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">DO </code>j=js,je</a>
            <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">DO </code>i=is,ie</a>
              <a href="null.html#fv_tracer2d_mod_d" target="diffFile">q3(i, j, k, iq) = (q(i, j, iq)*dp1(i, j)+(fx(i, j)-fx(i+<code class="constant">1</code><code class="label">&</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="label">&               </code>, j)+fy(i, j)-fy(i, j+<code class="constant">1</code>))*rarea(i, j))/dp2(i, j)</a>
            <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END DO</code></a>
          <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END DO</code></a>
        <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">ELSE</code></a>
          <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">DO </code>j=js,je</a>
            <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">DO </code>i=is,ie</a>
              <a href="null.html#fv_tracer2d_mod_d" target="diffFile">q(i, j, iq) = (q(i, j, iq)*dp1(i, j)+(fx(i, j)-fx(i+<code class="constant">1</code>, j)+<code class="label">&</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="label">&               </code>fy(i, j)-fy(i, j+<code class="constant">1</code>))*rarea(i, j))/dp2(i, j)</a>
            <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END DO</code></a>
          <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END DO</code></a>
        <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END IF</code></a>
      <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END DO</code></a>
      <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">CALL </code><code class="funcname">TIMING_OFF</code>(<code class="string">'fv_tp_2d'</code>)</a>
      <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">IF</code> (it .NE. nsplt) <code class="keyword">THEN</code></a>
        <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">DO </code>j=js,je</a>
          <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">DO </code>i=is,ie</a>
            <a href="null.html#fv_tracer2d_mod_d" target="diffFile">dp1(i, j) = dp2(i, j)</a>
          <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END DO</code></a>
        <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END DO</code></a>
      <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END IF</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END DO</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">! nsplt</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">IF</code> (id_divg .GT. <code class="constant">0</code>) <code class="keyword">THEN</code></a>
      <a href="null.html#fv_tracer2d_mod_d" target="diffFile">rdt = <code class="constant">1.</code>/(frac*dt)</a>
      <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">DO </code>j=js,je</a>
        <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">DO </code>i=is,ie</a>
          <a href="null.html#fv_tracer2d_mod_d" target="diffFile">dp0(i, j) = (xfx(i+<code class="constant">1</code>, j)-xfx(i, j)+yfx(i, j+<code class="constant">1</code>)-yfx(i, j))*<code class="label">&</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="label">&           </code>rarea(i, j)*rdt</a>
        <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END DO</code></a>
      <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END DO</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END IF</code></a>
<a name="tracer_2d"></a>    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">IF</code> (<code class="funcname">PRESENT</code>(dpa)) dpa = dp2</a>
  <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END SUBROUTINE </code><code class="funcname">TRACER_2D_1L</code></a>
  <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">SUBROUTINE </code><code class="funcname">TRACER_2D</code>(<code class="vardecl">q</code>, <code class="vardecl">dp1</code>, <code class="vardecl">mfx</code>, <code class="vardecl">mfy</code>, <code class="vardecl">cx</code>, <code class="vardecl">cy</code>, <code class="vardecl">npx</code>, <code class="vardecl">npy</code>, <code class="vardecl">npz</code>, <code class="vardecl">qs</code>, <code class="vardecl">nq</code>, <code class="label">&</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="label">&   </code><code class="vardecl">hord</code>, <code class="vardecl">q_split</code>, <code class="vardecl">dt</code>, <code class="vardecl">id_divg</code>, <code class="vardecl">dpa</code>)</a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">IMPLICIT NONE</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">npx</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">npy</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">npz</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">! first tracer to advect</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">qs</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">! number of tracers to be advected</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">nq</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">hord</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">q_split</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">id_divg</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL(</code><code class="modifier">real8</code><code class="typename">)</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">dt</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">! Tracers</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL(</code><code class="modifier">real8</code><code class="typename">)</code>, <code class="typename">INTENT(INOUT) </code>:: <code class="vardecl">q</code>(<code class="vardecl">isd</code>:<code class="vardecl">ied</code>, <code class="vardecl">jsd</code>:<code class="vardecl">jed</code>, <code class="vardecl">npz</code>, <code class="vardecl">nq</code>)</a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">! DELP before dyn_core</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL(</code><code class="modifier">real8</code><code class="typename">)</code>, <code class="typename">INTENT(INOUT) </code>:: <code class="vardecl">dp1</code>(<code class="vardecl">is</code>:<code class="vardecl">ie</code>, <code class="vardecl">js</code>:<code class="vardecl">je</code>, <code class="vardecl">npz</code>)</a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">! DELP after advection</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL(</code><code class="modifier">real8</code><code class="typename">)</code>, <code class="typename">OPTIONAL</code>, <code class="typename">INTENT(OUT) </code>:: <code class="vardecl">dpa</code>(<code class="vardecl">is</code>:<code class="vardecl">ie</code>, <code class="vardecl">js</code>:<code class="vardecl">je</code>, <code class="vardecl">npz</code>)</a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">! Courant Number X-Dir</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">INTENT(INOUT) </code>:: <code class="vardecl">cx</code>(<code class="vardecl">is</code>:<code class="vardecl">ie</code>+<code class="constant">1</code>, <code class="vardecl">jsd</code>:<code class="vardecl">jed</code>, <code class="vardecl">npz</code>)</a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">! Courant Number Y-Dir</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">INTENT(INOUT) </code>:: <code class="vardecl">cy</code>(<code class="vardecl">isd</code>:<code class="vardecl">ied</code>, <code class="vardecl">js</code>:<code class="vardecl">je</code>+<code class="constant">1</code>, <code class="vardecl">npz</code>)</a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">! Mass Flux X-Dir</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">INTENT(INOUT) </code>:: <code class="vardecl">mfx</code>(<code class="vardecl">is</code>:<code class="vardecl">ie</code>+<code class="constant">1</code>, <code class="vardecl">js</code>:<code class="vardecl">je</code>, <code class="vardecl">npz</code>)</a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">! Mass Flux Y-Dir</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">INTENT(INOUT) </code>:: <code class="vardecl">mfy</code>(<code class="vardecl">is</code>:<code class="vardecl">ie</code>, <code class="vardecl">js</code>:<code class="vardecl">je</code>+<code class="constant">1</code>, <code class="vardecl">npz</code>)</a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">! Local Arrays</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">fx</code>(<code class="vardecl">is</code>:<code class="vardecl">ie</code>+<code class="constant">1</code>, <code class="vardecl">js</code>:<code class="vardecl">je</code>)</a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">fy</code>(<code class="vardecl">is</code>:<code class="vardecl">ie</code>, <code class="vardecl">js</code>:<code class="vardecl">je</code>+<code class="constant">1</code>)</a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL(</code><code class="modifier">real8</code><code class="typename">) </code>:: <code class="vardecl">dp2</code>(<code class="vardecl">is</code>:<code class="vardecl">ie</code>, <code class="vardecl">js</code>:<code class="vardecl">je</code>)</a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">ra_x</code>(<code class="vardecl">is</code>:<code class="vardecl">ie</code>, <code class="vardecl">jsd</code>:<code class="vardecl">jed</code>)</a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">ra_y</code>(<code class="vardecl">isd</code>:<code class="vardecl">ied</code>, <code class="vardecl">js</code>:<code class="vardecl">je</code>)</a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">xfx</code>(<code class="vardecl">is</code>:<code class="vardecl">ie</code>+<code class="constant">1</code>, <code class="vardecl">jsd</code>:<code class="vardecl">jed</code>, <code class="vardecl">npz</code>)</a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">yfx</code>(<code class="vardecl">isd</code>:<code class="vardecl">ied</code>, <code class="vardecl">js</code>:<code class="vardecl">je</code>+<code class="constant">1</code>, <code class="vardecl">npz</code>)</a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">cmax</code>(<code class="vardecl">npz</code>)</a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">!#ifdef IBM_FIX</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">!      real(FVPRC) :: cmax_x, cmax_y</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">!#endif</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">c_global</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">frac</code>, <code class="vardecl">rdt</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">INTEGER </code>:: <code class="vardecl">nsplt</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">INTEGER </code>:: <code class="vardecl">i</code>, <code class="vardecl">j</code>, <code class="vardecl">k</code>, <code class="vardecl">it</code>, <code class="vardecl">iq</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">INTRINSIC </code><code class="funcname">ABS</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">INTRINSIC </code><code class="funcname">MAX</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">INTRINSIC </code><code class="funcname">INT</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">INTRINSIC </code><code class="funcname">REAL</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">INTRINSIC </code><code class="funcname">PRESENT</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">abs0</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">abs1</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">x1</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">y1</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">!$omp parallel do default(shared)</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">DO </code>k=<code class="constant">1</code>,npz</a>
      <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">DO </code>j=jsd,jed</a>
        <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">DO </code>i=is,ie+<code class="constant">1</code></a>
          <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">IF</code> (cx(i, j, k) .GT. <code class="constant">0.</code>) <code class="keyword">THEN</code></a>
            <a href="null.html#fv_tracer2d_mod_d" target="diffFile">xfx(i, j, k) = cx(i, j, k)*dxa(i-<code class="constant">1</code>, j)*dy(i, j)*sin_sg(i-<code class="constant">1</code>, <code class="label">&</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="label">&             </code>j, <code class="constant">3</code>)</a>
          <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">ELSE</code></a>
            <a href="null.html#fv_tracer2d_mod_d" target="diffFile">xfx(i, j, k) = cx(i, j, k)*dxa(i, j)*dy(i, j)*sin_sg(i, j, <code class="constant">1</code><code class="label">&</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="label">&             </code>)</a>
          <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END IF</code></a>
        <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END DO</code></a>
      <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END DO</code></a>
      <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">DO </code>j=js,je+<code class="constant">1</code></a>
        <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">DO </code>i=isd,ied</a>
          <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">IF</code> (cy(i, j, k) .GT. <code class="constant">0.</code>) <code class="keyword">THEN</code></a>
            <a href="null.html#fv_tracer2d_mod_d" target="diffFile">yfx(i, j, k) = cy(i, j, k)*dya(i, j-<code class="constant">1</code>)*dx(i, j)*sin_sg(i, j-<code class="label">&</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="label">&             </code><code class="constant">1</code>, <code class="constant">4</code>)</a>
          <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">ELSE</code></a>
            <a href="null.html#fv_tracer2d_mod_d" target="diffFile">yfx(i, j, k) = cy(i, j, k)*dya(i, j)*dx(i, j)*sin_sg(i, j, <code class="constant">2</code><code class="label">&</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="label">&             </code>)</a>
          <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END IF</code></a>
        <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END DO</code></a>
      <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END DO</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END DO</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">!--------------------------------------------------------------------------------</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">IF</code> (q_split .EQ. <code class="constant">0</code>) <code class="keyword">THEN</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">! Determine nsplt</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">!#ifdef IBM_FIX</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">!!$omp parallel do default(shared) private(cmax_x, cmax_y)</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">!      do k=1,npz</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">!        cmax(k) = 0.</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">!        do j=js,je</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">!          do i=is,ie</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">!            cmax_x  = max(abs(cx(i,j,k))+1.-sina_u(i,j), cmax(k))</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">!            cmax_y  = max(abs(cy(i,j,k))+1.-sina_v(i,j), cmax(k))</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">!            cmax(k) = max(cmax_x, cmax_y)</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">!          enddo</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">!        enddo</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">!      enddo</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">!#else </code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">!$omp parallel do default(shared) </code></a>
      <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">DO </code>k=<code class="constant">1</code>,npz</a>
        <a href="null.html#fv_tracer2d_mod_d" target="diffFile">cmax(k) = <code class="constant">0.</code></a>
        <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">DO </code>j=js,je</a>
          <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">DO </code>i=is,ie</a>
            <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">IF</code> (cx(i, j, k) .GE. <code class="constant">0.</code>) <code class="keyword">THEN</code></a>
              <a href="null.html#fv_tracer2d_mod_d" target="diffFile">abs0 = cx(i, j, k)</a>
            <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">ELSE</code></a>
              <a href="null.html#fv_tracer2d_mod_d" target="diffFile">abs0 = -cx(i, j, k)</a>
            <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END IF</code></a>
            <a href="null.html#fv_tracer2d_mod_d" target="diffFile">x1 = abs0 + <code class="constant">1. </code>- sina_u(i, j)</a>
            <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">IF</code> (cy(i, j, k) .GE. <code class="constant">0.</code>) <code class="keyword">THEN</code></a>
              <a href="null.html#fv_tracer2d_mod_d" target="diffFile">abs1 = cy(i, j, k)</a>
            <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">ELSE</code></a>
              <a href="null.html#fv_tracer2d_mod_d" target="diffFile">abs1 = -cy(i, j, k)</a>
            <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END IF</code></a>
            <a href="null.html#fv_tracer2d_mod_d" target="diffFile">y1 = abs1 + <code class="constant">1. </code>- sina_v(i, j)</a>
            <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">IF</code> (x1 .LT. y1) <code class="keyword">THEN</code></a>
              <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">IF</code> (y1 .LT. cmax(k)) <code class="keyword">THEN</code></a>
                <a href="null.html#fv_tracer2d_mod_d" target="diffFile">cmax(k) = cmax(k)</a>
              <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">ELSE</code></a>
                <a href="null.html#fv_tracer2d_mod_d" target="diffFile">cmax(k) = y1</a>
              <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END IF</code></a>
            <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">ELSE IF</code> (x1 .LT. cmax(k)) <code class="keyword">THEN</code></a>
              <a href="null.html#fv_tracer2d_mod_d" target="diffFile">cmax(k) = cmax(k)</a>
            <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">ELSE</code></a>
              <a href="null.html#fv_tracer2d_mod_d" target="diffFile">cmax(k) = x1</a>
            <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END IF</code></a>
          <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END DO</code></a>
        <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END DO</code></a>
      <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END DO</code></a>
      <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">CALL </code><code class="funcname">MP_REDUCE_MAX</code>(cmax, npz)</a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">!#endif</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">! find global max courant number and define nsplt to scale cx,cy,mfx,mfy</code></a>
      <a href="null.html#fv_tracer2d_mod_d" target="diffFile">c_global = cmax(<code class="constant">1</code>)</a>
      <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">IF</code> (npz .NE. <code class="constant">1</code>) <code class="keyword">THEN</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">! if NOT shallow water test case</code></a>
        <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">DO </code>k=<code class="constant">2</code>,npz</a>
          <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">IF</code> (cmax(k) .LT. c_global) <code class="keyword">THEN</code></a>
            <a href="null.html#fv_tracer2d_mod_d" target="diffFile">c_global = c_global</a>
          <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">ELSE</code></a>
            <a href="null.html#fv_tracer2d_mod_d" target="diffFile">c_global = cmax(k)</a>
          <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END IF</code></a>
        <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END DO</code></a>
      <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END IF</code></a>
      <a href="null.html#fv_tracer2d_mod_d" target="diffFile">nsplt = <code class="funcname">INT</code>(<code class="constant">1. </code>+ c_global)</a>
      <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">IF</code> (gid .EQ. <code class="constant">0 </code>.AND. nsplt .GT. <code class="constant">5</code>) <code class="keyword">WRITE</code>(<code class="constant">6</code>, <code class="keyword">*</code>) <code class="string">'Tracer_2d_split='</code><code class="label">&</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="label">&                                        </code>, nsplt, c_global</a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">ELSE</code></a>
      <a href="null.html#fv_tracer2d_mod_d" target="diffFile">nsplt = q_split</a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END IF</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">!--------------------------------------------------------------------------------</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile">frac = <code class="constant">1.</code>/<code class="funcname">REAL</code>(nsplt)</a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">IF</code> (nsplt .NE. <code class="constant">1</code>) <code class="keyword">THEN</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">!$omp parallel do default(shared)</code></a>
      <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">DO </code>k=<code class="constant">1</code>,npz</a>
        <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">DO </code>j=jsd,jed</a>
          <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">DO </code>i=is,ie+<code class="constant">1</code></a>
            <a href="null.html#fv_tracer2d_mod_d" target="diffFile">cx(i, j, k) = cx(i, j, k)*frac</a>
            <a href="null.html#fv_tracer2d_mod_d" target="diffFile">xfx(i, j, k) = xfx(i, j, k)*frac</a>
          <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END DO</code></a>
        <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END DO</code></a>
        <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">DO </code>j=js,je</a>
          <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">DO </code>i=is,ie+<code class="constant">1</code></a>
            <a href="null.html#fv_tracer2d_mod_d" target="diffFile">mfx(i, j, k) = mfx(i, j, k)*frac</a>
          <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END DO</code></a>
        <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END DO</code></a>
        <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">DO </code>j=js,je+<code class="constant">1</code></a>
          <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">DO </code>i=isd,ied</a>
            <a href="null.html#fv_tracer2d_mod_d" target="diffFile">cy(i, j, k) = cy(i, j, k)*frac</a>
            <a href="null.html#fv_tracer2d_mod_d" target="diffFile">yfx(i, j, k) = yfx(i, j, k)*frac</a>
          <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END DO</code></a>
        <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END DO</code></a>
        <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">DO </code>j=js,je+<code class="constant">1</code></a>
          <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">DO </code>i=is,ie</a>
            <a href="null.html#fv_tracer2d_mod_d" target="diffFile">mfy(i, j, k) = mfy(i, j, k)*frac</a>
          <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END DO</code></a>
        <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END DO</code></a>
      <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END DO</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END IF</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">DO </code>it=<code class="constant">1</code>,nsplt</a>
      <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">CALL </code><code class="funcname">TIMING_ON</code>(<code class="string">'COMM_TOTAL'</code>)</a>
      <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">CALL </code><code class="funcname">TIMING_ON</code>(<code class="string">'COMM_TRAC'</code>)</a>
      <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">CALL </code><code class="funcname">MPP_UPDATE_DOMAINS</code>(q, domain, <code class="keyword">complete</code>=<code class="constant">.true.</code>)</a>
      <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">CALL </code><code class="funcname">TIMING_OFF</code>(<code class="string">'COMM_TRAC'</code>)</a>
      <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">CALL </code><code class="funcname">TIMING_OFF</code>(<code class="string">'COMM_TOTAL'</code>)</a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">!$omp parallel do default(shared) private(ra_x, ra_y, dp2, fx, fy)</code></a>
      <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">DO </code>k=<code class="constant">1</code>,npz</a>
        <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">DO </code>j=jsd,jed</a>
          <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">DO </code>i=is,ie</a>
            <a href="null.html#fv_tracer2d_mod_d" target="diffFile">ra_x(i, j) = area(i, j) + xfx(i, j, k) - xfx(i+<code class="constant">1</code>, j, k)</a>
          <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END DO</code></a>
        <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END DO</code></a>
        <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">DO </code>j=js,je</a>
          <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">DO </code>i=isd,ied</a>
            <a href="null.html#fv_tracer2d_mod_d" target="diffFile">ra_y(i, j) = area(i, j) + yfx(i, j, k) - yfx(i, j+<code class="constant">1</code>, k)</a>
          <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END DO</code></a>
        <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END DO</code></a>
        <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">DO </code>j=js,je</a>
          <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">DO </code>i=is,ie</a>
            <a href="null.html#fv_tracer2d_mod_d" target="diffFile">dp2(i, j) = dp1(i, j, k) + (mfx(i, j, k)-mfx(i+<code class="constant">1</code>, j, k)+mfy(<code class="label">&</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="label">&             </code>i, j, k)-mfy(i, j+<code class="constant">1</code>, k))*rarea(i, j)</a>
          <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END DO</code></a>
        <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END DO</code></a>
        <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">CALL </code><code class="funcname">TIMING_ON</code>(<code class="string">'fv_tp_2d'</code>)</a>
        <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">DO </code>iq=qs,nq</a>
          <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">CALL </code><code class="funcname">FV_TP_2D</code>(q(isd:, jsd:, k, iq), cx(is:, jsd:, k), cy(isd:<code class="label">&</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="label">&                 </code>, js:, k), npx, npy, hord, fx, fy, xfx(is:, jsd:, k), <code class="label">&</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="label">&                 </code>yfx(isd:, js:, k), ra_x, ra_y, <code class="keyword">mfx</code>=mfx(is:, js:, k), <code class="label">&</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="label">&                 </code><code class="keyword">mfy</code>=mfy(is:, js:, k))</a>
          <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">DO </code>j=js,je</a>
            <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">DO </code>i=is,ie</a>
              <a href="null.html#fv_tracer2d_mod_d" target="diffFile">q(i, j, k, iq) = (q(i, j, k, iq)*dp1(i, j, k)+(fx(i, j)-fx<code class="label">&</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="label">&               </code>(i+<code class="constant">1</code>, j)+fy(i, j)-fy(i, j+<code class="constant">1</code>))*rarea(i, j))/dp2(i, j)</a>
            <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END DO</code></a>
          <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END DO</code></a>
        <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END DO</code></a>
        <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">CALL </code><code class="funcname">TIMING_OFF</code>(<code class="string">'fv_tp_2d'</code>)</a>
        <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">DO </code>j=js,je</a>
          <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">DO </code>i=is,ie</a>
            <a href="null.html#fv_tracer2d_mod_d" target="diffFile">dp1(i, j, k) = dp2(i, j)</a>
          <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END DO</code></a>
        <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END DO</code></a>
      <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END DO</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END DO</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">! npz</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">! nsplt</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">! rescale mass fluxes back to original</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile">mfx = mfx/frac</a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile">mfy = mfy/frac</a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile">cx = cx/frac</a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile">cy = cy/frac</a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">IF</code> (<code class="funcname">PRESENT</code>(dpa)) dpa = dp1</a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">IF</code> (id_divg .GT. <code class="constant">0</code>) <code class="keyword">THEN</code></a>
      <a href="null.html#fv_tracer2d_mod_d" target="diffFile">rdt = <code class="constant">1.</code>/(frac*dt)</a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">!$omp parallel do default(shared)</code></a>
      <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">DO </code>k=<code class="constant">1</code>,npz</a>
        <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">DO </code>j=js,je</a>
          <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">DO </code>i=is,ie</a>
            <a href="null.html#fv_tracer2d_mod_d" target="diffFile">dp1(i, j, k) = (xfx(i+<code class="constant">1</code>, j, k)-xfx(i, j, k)+yfx(i, j+<code class="constant">1</code>, k)-<code class="label">&</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="label">&             </code>yfx(i, j, k))*rarea(i, j)*rdt</a>
          <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END DO</code></a>
        <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END DO</code></a>
      <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END DO</code></a>
<a name="calcscalingfactor"></a>    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END IF</code></a>
  <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END SUBROUTINE </code><code class="funcname">TRACER_2D</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">!------------------------------------------------------------------------------------</code></a>
  <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">FUNCTION </code><code class="funcname">CALCSCALINGFACTOR</code>(<code class="vardecl">q1</code>, <code class="vardecl">dp2</code>, <code class="vardecl">ple1</code>, <code class="vardecl">npx</code>, <code class="vardecl">npy</code>, <code class="vardecl">npz</code>, <code class="vardecl">is</code>, <code class="vardecl">ie</code>, <code class="vardecl">js</code>, <code class="label">&</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="label">&   </code><code class="vardecl">je</code>) RESULT (SCALING)</a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">USE </code><code class="funcname">MPP_MOD</code>, <code class="keyword">ONLY </code>: mpp_sum</a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">IMPLICIT NONE</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">npx</code>, <code class="vardecl">is</code>, <code class="vardecl">ie</code>, <code class="vardecl">js</code>, <code class="vardecl">je</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">npy</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">npz</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL(</code><code class="modifier">real8</code><code class="typename">)</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">q1</code>(<code class="vardecl">is</code>:<code class="vardecl">ie</code>, <code class="vardecl">js</code>:<code class="vardecl">je</code>, <code class="vardecl">npz</code>)</a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL(</code><code class="modifier">real8</code><code class="typename">)</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">dp2</code>(<code class="vardecl">is</code>:<code class="vardecl">ie</code>, <code class="vardecl">js</code>:<code class="vardecl">je</code>, <code class="vardecl">npz</code>)</a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL(</code><code class="modifier">real8</code><code class="typename">)</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">ple1</code>(<code class="vardecl">is</code>:<code class="vardecl">ie</code>, <code class="vardecl">js</code>:<code class="vardecl">je</code>, <code class="vardecl">npz</code>+<code class="constant">1</code>)</a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL(</code><code class="modifier">real8</code><code class="typename">) </code>:: <code class="vardecl">scaling</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">INTEGER </code>:: <code class="vardecl">k</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL(</code><code class="modifier">real8</code><code class="typename">) </code>:: <code class="vardecl">partialsums</code>(<code class="constant">2</code>, <code class="vardecl">npz</code>), <code class="vardecl">globalsums</code>(<code class="constant">2</code>)</a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL(</code><code class="modifier">real8</code><code class="typename">)</code>, <code class="typename">PARAMETER </code>:: <code class="vardecl">tiny_denominator</code>=<code class="constant">1.0e-30</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">INTRINSIC </code><code class="funcname">SUM</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">INTRINSIC </code><code class="funcname">REAL</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL(</code><code class="modifier">real8</code><code class="typename">)</code>, DIMENSION(ie-is+<code class="constant">1</code>, je-js+<code class="constant">1</code>) :: <code class="vardecl">arg1</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">!-------</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">! Compute partial sum on local array first to minimize communication.</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">! This algorithm will not be strongly repdroducible under changes do domain</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">! decomposition, but uses far less communication bandwidth (and memory BW)</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">! then the preceding implementation.</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">!-------</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">DO </code>k=<code class="constant">1</code>,npz</a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">! numerator</code></a>
      <a href="null.html#fv_tracer2d_mod_d" target="diffFile">arg1(:, :) = q1(:, :, k)*dp2(:, :, k)*area(is:ie, js:je)</a>
      <a href="null.html#fv_tracer2d_mod_d" target="diffFile">partialsums(<code class="constant">1</code>, k) = <code class="funcname">SUM</code>(arg1(:, :))</a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">! denominator</code></a>
      <a href="null.html#fv_tracer2d_mod_d" target="diffFile">arg1(:, :) = q1(:, :, k)*(ple1(:, :, k+<code class="constant">1</code>)-ple1(:, :, k))*area(is:<code class="label">&</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="label">&       </code>ie, js:je)</a>
      <a href="null.html#fv_tracer2d_mod_d" target="diffFile">partialsums(<code class="constant">2</code>, k) = <code class="funcname">SUM</code>(arg1(:, :))</a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END DO</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile">globalsums(<code class="constant">1</code>) = <code class="funcname">SUM</code>(partialsums(<code class="constant">1</code>, :))</a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile">globalsums(<code class="constant">2</code>) = <code class="funcname">SUM</code>(partialsums(<code class="constant">2</code>, :))</a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">CALL </code><code class="funcname">MPP_SUM</code>(globalsums, <code class="constant">2</code>)</a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">IF</code> (globalsums(<code class="constant">2</code>) .GT. tiny_denominator) <code class="keyword">THEN</code></a>
      <a href="null.html#fv_tracer2d_mod_d" target="diffFile">scaling = globalsums(<code class="constant">1</code>)/globalsums(<code class="constant">2</code>)</a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">!#################################################################</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">! This line was added to ensure strong reproducibility of the code</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">!#################################################################</code></a>
      <a href="null.html#fv_tracer2d_mod_d" target="diffFile">scaling = <code class="funcname">REAL</code>(scaling, <code class="keyword">kind</code>=real4)</a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">ELSE</code></a>
      <a href="null.html#fv_tracer2d_mod_d" target="diffFile">scaling = <code class="constant">1.d0</code></a>
<a name="computescalingfactors"></a>    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END IF</code></a>
  <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END FUNCTION </code><code class="funcname">CALCSCALINGFACTOR</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">!------------------------------------------------------------------------------------</code></a>
  <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">FUNCTION </code><code class="funcname">COMPUTESCALINGFACTORS</code>(<code class="vardecl">q1</code>, <code class="vardecl">dp2</code>, <code class="vardecl">ple1</code>, <code class="vardecl">npx</code>, <code class="vardecl">npy</code>, <code class="vardecl">npz</code>, <code class="vardecl">is</code>, <code class="vardecl">ie</code>, <code class="label">&</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="label">&   </code><code class="vardecl">js</code>, <code class="vardecl">je</code>) RESULT (SCALING)</a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">USE </code><code class="funcname">MPP_MOD</code>, <code class="keyword">ONLY </code>: mpp_sum</a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">IMPLICIT NONE</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">npx</code>, <code class="vardecl">is</code>, <code class="vardecl">ie</code>, <code class="vardecl">js</code>, <code class="vardecl">je</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">npy</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">npz</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL(</code><code class="modifier">real8</code><code class="typename">)</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">q1</code>(<code class="vardecl">is</code>:<code class="vardecl">ie</code>, <code class="vardecl">js</code>:<code class="vardecl">je</code>, <code class="vardecl">npz</code>)</a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL(</code><code class="modifier">real8</code><code class="typename">)</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">dp2</code>(<code class="vardecl">is</code>:<code class="vardecl">ie</code>, <code class="vardecl">js</code>:<code class="vardecl">je</code>, <code class="vardecl">npz</code>)</a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL(</code><code class="modifier">real8</code><code class="typename">)</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">ple1</code>(<code class="vardecl">is</code>:<code class="vardecl">ie</code>, <code class="vardecl">js</code>:<code class="vardecl">je</code>, <code class="vardecl">npz</code>+<code class="constant">1</code>)</a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL(</code><code class="modifier">real8</code><code class="typename">) </code>:: <code class="vardecl">scaling</code>(<code class="vardecl">npz</code>)</a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">INTEGER </code>:: <code class="vardecl">k</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL(</code><code class="modifier">real8</code><code class="typename">) </code>:: <code class="vardecl">partialsums</code>(<code class="constant">2</code>, <code class="vardecl">npz</code>), <code class="vardecl">globalsums</code>(<code class="constant">2</code>, <code class="vardecl">npz</code>)</a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL(</code><code class="modifier">real8</code><code class="typename">)</code>, <code class="typename">PARAMETER </code>:: <code class="vardecl">tiny_denominator</code>=<code class="constant">1.0e-30</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">INTRINSIC </code><code class="funcname">SUM</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="typename">REAL(</code><code class="modifier">real8</code><code class="typename">)</code>, DIMENSION(ie-is+<code class="constant">1</code>, je-js+<code class="constant">1</code>) :: <code class="vardecl">arg1</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">!-------</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">! Compute partial sum on local array first to minimize communication.</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">! This algorithm will not be strongly repdroducible under changes do domain</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">! decomposition, but uses far less communication bandwidth (and memory BW)</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">! then the preceding implementation.</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">!-------</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">DO </code>k=<code class="constant">1</code>,npz</a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">! numerator</code></a>
      <a href="null.html#fv_tracer2d_mod_d" target="diffFile">arg1(:, :) = q1(:, :, k)*dp2(:, :, k)*area(is:ie, js:je)</a>
      <a href="null.html#fv_tracer2d_mod_d" target="diffFile">partialsums(<code class="constant">1</code>, k) = <code class="funcname">SUM</code>(arg1(:, :))</a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="comment">! denominator</code></a>
      <a href="null.html#fv_tracer2d_mod_d" target="diffFile">arg1(:, :) = q1(:, :, k)*(ple1(:, :, k+<code class="constant">1</code>)-ple1(:, :, k))*area(is:<code class="label">&</code></a>
<a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="label">&       </code>ie, js:je)</a>
      <a href="null.html#fv_tracer2d_mod_d" target="diffFile">partialsums(<code class="constant">2</code>, k) = <code class="funcname">SUM</code>(arg1(:, :))</a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END DO</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">CALL </code><code class="funcname">MPP_SUM</code>(partialsums, <code class="constant">2</code>*npz)</a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile">globalsums = partialsums</a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">DO </code>k=<code class="constant">1</code>,npz</a>
      <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">IF</code> (partialsums(<code class="constant">2</code>, k) .GT. tiny_denominator) <code class="keyword">THEN</code></a>
        <a href="null.html#fv_tracer2d_mod_d" target="diffFile">scaling(k) = globalsums(<code class="constant">1</code>, k)/globalsums(<code class="constant">2</code>, k)</a>
      <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">ELSE</code></a>
        <a href="null.html#fv_tracer2d_mod_d" target="diffFile">scaling(k) = <code class="constant">1.d0</code></a>
      <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END IF</code></a>
    <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END DO</code></a>
  <a href="null.html#fv_tracer2d_mod_d" target="diffFile"><code class="keyword">END FUNCTION </code><code class="funcname">COMPUTESCALINGFACTORS</code></a>
<code class="keyword">END MODULE </code><code class="funcname">FV_TRACER2D_MOD</code>
</pre>
</body>
