<title>Generated by TAPENADE</title>
<link type="text/CSS" rel="stylesheet" href="tapenade.css">
<link type="text/CSS" rel="stylesheet" href="fortranStyle.css">
<body>
<pre><code class="comment">!        Generated by TAPENADE     (INRIA, Ecuador team)</code>
<code class="comment">!  Tapenade 3.12 (r6213) - 13 Oct 2016 10:30</code>
<code class="comment">!</code>
<code class="keyword">MODULE </code><code class="funcname">FV_FILL_MOD_D</code>
  <code class="keyword">USE </code><code class="funcname">FV_ARRAYS_MOD</code>, <code class="keyword">ONLY </code>: real8
  <code class="keyword">IMPLICIT NONE</code>
  PUBLIC fillz
  PUBLIC fillz_tlm
<a name="fillz_tlm"></a>
<code class="keyword">CONTAINS</code>
<a href="null_p.html#fv_fill_mod" target="origFile"><code class="comment">!  Differentiation of fillz in forward (tangent) mode:</code></a>
<a href="null_p.html#fv_fill_mod" target="origFile"><code class="comment">!   variations   of useful results: q</code></a>
<a href="null_p.html#fv_fill_mod" target="origFile"><code class="comment">!   with respect to varying inputs: q</code></a>
<a name="fillz_tlmi562"></a>  <a href="null_p.html#fv_fill_mod" target="origFile"><code class="keyword">SUBROUTINE </code><code class="funcname">FILLZ_TLM</code>(<code class="vardecl">im</code>, <code class="vardecl">km</code>, <code class="vardecl">nq</code>, <code class="vardecl">q</code>, <code class="vardecl">q_tl</code>, <code class="vardecl">dp</code>)</a>
    <a href="null_p.html#fv_fill_mod" target="origFile"><code class="keyword">IMPLICIT NONE</code></a>
<a name="fillz_tlmi563"></a><a href="null_p.html#fv_fill_modi562" target="origFile"><code class="comment">! No. of longitudes</code></a>
    <a href="null_p.html#fv_fill_modi562" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">im</code></a>
<a name="fillz_tlmi564"></a><a href="null_p.html#fv_fill_modi563" target="origFile"><code class="comment">! No. of levels</code></a>
    <a href="null_p.html#fv_fill_modi563" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">km</code></a>
<a name="fillz_tlmi565"></a><a href="null_p.html#fv_fill_modi564" target="origFile"><code class="comment">! Total number of tracers</code></a>
    <a href="null_p.html#fv_fill_modi564" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">nq</code></a>
<a name="fillz_tlmi566"></a><a href="null_p.html#fv_fill_modi565" target="origFile"><code class="comment">! pressure thickness</code></a>
    <a href="null_p.html#fv_fill_modi565" target="origFile"><code class="typename">REAL(</code><code class="modifier">real8</code><code class="typename">)</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">dp</code>(<code class="vardecl">im</code>, <code class="vardecl">km</code>)</a>
<a href="null_p.html#fv_fill_modi566" target="origFile"><code class="comment">! tracer mixing ratio</code></a>
<a name="fillz_tlmi567"></a>    <a href="null_p.html#fv_fill_modi566" target="origFile"><code class="typename">REAL(</code><code class="modifier">real8</code><code class="typename">)</code>, <code class="typename">INTENT(INOUT) </code>:: <code class="vardecl">q</code>(<code class="vardecl">im</code>, <code class="vardecl">km</code>, <code class="vardecl">nq</code>)</a>
    <a href="null_p.html#fv_fill_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">real8</code><code class="typename">)</code>, <code class="typename">INTENT(INOUT) </code>:: <code class="vardecl">q_tl</code>(<code class="vardecl">im</code>, <code class="vardecl">km</code>, <code class="vardecl">nq</code>)</a>
<a name="fillz_tlmi568"></a><a href="null_p.html#fv_fill_modi567" target="origFile"><code class="comment">! !LOCAL VARIABLES:</code></a>
    <a href="null_p.html#fv_fill_modi567" target="origFile"><code class="typename">LOGICAL </code>:: <code class="vardecl">zfix</code>(<code class="vardecl">im</code>)</a>
<a name="fillz_tlmi569"></a>    <a href="null_p.html#fv_fill_modi568" target="origFile"><code class="typename">REAL(</code><code class="modifier">real8</code><code class="typename">) </code>:: <code class="vardecl">dm</code>(<code class="vardecl">km</code>)</a>
<a name="fillz_tlmi570"></a>    <a href="null_p.html#fv_fill_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">real8</code><code class="typename">) </code>:: <code class="vardecl">dm_tl</code>(<code class="vardecl">km</code>)</a>
    <a href="null_p.html#fv_fill_modi569" target="origFile"><code class="typename">INTEGER </code>:: <code class="vardecl">i</code>, <code class="vardecl">k</code>, <code class="vardecl">ic</code></a>
    <a href="null_p.html#fv_fill_modi570" target="origFile"><code class="typename">REAL(</code><code class="modifier">real8</code><code class="typename">) </code>:: <code class="vardecl">qup</code>, <code class="vardecl">qly</code>, <code class="vardecl">dup</code>, <code class="vardecl">dq</code>, <code class="vardecl">sum0</code>, <code class="vardecl">sum1</code>, <code class="vardecl">fac</code></a>
<a name="fillz_tlmi571"></a>    <a href="null_p.html#fv_fill_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">real8</code><code class="typename">) </code>:: <code class="vardecl">qup_tl</code>, <code class="vardecl">qly_tl</code>, <code class="vardecl">dup_tl</code>, <code class="vardecl">dq_tl</code>, <code class="vardecl">sum0_tl</code>, <code class="vardecl">sum1_tl</code>, <code class="label">&</code></a>
<a name="fillz_tlmi572"></a><a href="null_p.html#fv_fill_mod" target="origFile"><code class="label">&   </code><code class="vardecl">fac_tl</code></a>
<a name="fillz_tlmi573"></a>    <a href="null_p.html#fv_fill_modi571" target="origFile"><code class="keyword">INTRINSIC </code><code class="funcname">MIN</code></a>
    <a href="null_p.html#fv_fill_modi572" target="origFile"><code class="keyword">INTRINSIC </code><code class="funcname">MAX</code></a>
    <a href="null_p.html#fv_fill_modi573" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">max1</code></a>
<a name="fillz_tlmi624"></a>    <a href="null_p.html#fv_fill_mod" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">max1_tl</code></a>
<a name="fillz_tlmi577"></a>    <a href="null_p.html#fv_fill_mod" target="origFile">dm_tl = <code class="constant">0.0_8</code></a>
    <a href="null_p.html#fv_fill_modi624" target="origFile"><code class="keyword">DO </code>ic=<code class="constant">1</code>,nq</a>
<a name="fillz_tlmi574"></a><a href="null_p.html#fv_fill_modi577" target="origFile"><code class="comment">! Top layer</code></a>
<a name="fillz_tlmi575"></a>      <a href="null_p.html#fv_fill_modi577" target="origFile"><code class="keyword">DO </code>i=<code class="constant">1</code>,im</a>
        <a href="null_p.html#fv_fill_modi574" target="origFile"><code class="keyword">IF</code> (q(i, <code class="constant">1</code>, ic) .LT. <code class="constant">0.</code>) <code class="keyword">THEN</code></a>
<a name="fillz_tlmi575"></a>          <a href="null_p.html#fv_fill_modi575" target="origFile">q_tl(i, <code class="constant">2</code>, ic) = q_tl(i, <code class="constant">2</code>, ic) + dp(i, <code class="constant">1</code>)*q_tl(i, <code class="constant">1</code>, ic)/dp(i<code class="label">&</code></a>
<a name="fillz_tlmi576"></a><a href="null_p.html#fv_fill_modi575" target="origFile"><code class="label">&           </code>, <code class="constant">2</code>)</a>
<a name="fillz_tlmi576"></a>          <a href="null_p.html#fv_fill_modi575" target="origFile">q(i, <code class="constant">2</code>, ic) = q(i, <code class="constant">2</code>, ic) + q(i, <code class="constant">1</code>, ic)*dp(i, <code class="constant">1</code>)/dp(i, <code class="constant">2</code>)</a>
          <a href="null_p.html#fv_fill_modi576" target="origFile">q_tl(i, <code class="constant">1</code>, ic) = <code class="constant">0.0_8</code></a>
          <a href="null_p.html#fv_fill_modi576" target="origFile">q(i, <code class="constant">1</code>, ic) = <code class="constant">0.</code></a>
<a name="fillz_tlmi578"></a>        <a href="null_p.html#fv_fill_modi574" target="origFile"><code class="keyword">END IF</code></a>
      <a href="null_p.html#fv_fill_modi577" target="origFile"><code class="keyword">END DO</code></a>
<a name="fillz_tlmi594"></a><a href="null_p.html#fv_fill_modi578" target="origFile"><code class="comment">! Interior</code></a>
<a name="fillz_tlmi593"></a>      <a href="null_p.html#fv_fill_modi578" target="origFile">zfix(:) = <code class="constant">.false.</code></a>
<a name="fillz_tlmi579"></a>      <a href="null_p.html#fv_fill_modi594" target="origFile"><code class="keyword">DO </code>k=<code class="constant">2</code>,km-<code class="constant">1</code></a>
<a name="fillz_tlmi580"></a>        <a href="null_p.html#fv_fill_modi593" target="origFile"><code class="keyword">DO </code>i=<code class="constant">1</code>,im</a>
<a name="fillz_tlmi581"></a>          <a href="null_p.html#fv_fill_modi579" target="origFile"><code class="keyword">IF</code> (q(i, k, ic) .LT. <code class="constant">0.</code>) <code class="keyword">THEN</code></a>
<a name="fillz_tlmi582"></a>            <a href="null_p.html#fv_fill_modi580" target="origFile">zfix(i) = <code class="constant">.true.</code></a>
            <a href="null_p.html#fv_fill_modi581" target="origFile"><code class="keyword">IF</code> (q(i, k-<code class="constant">1</code>, ic) .GT. <code class="constant">0.</code>) <code class="keyword">THEN</code></a>
<a name="fillz_tlmi583"></a>              <a href="null_p.html#fv_fill_modi582" target="origFile"><code class="keyword">IF</code> (q(i, k-<code class="constant">1</code>, ic)*dp(i, k-<code class="constant">1</code>) .GT. -(q(i, k, ic)*dp(i, k))<code class="label">&</code></a>
<a name="fillz_tlmi583"></a><a href="null_p.html#fv_fill_modi582" target="origFile"><code class="label">&             </code>) <code class="keyword">THEN</code></a>
                <a href="null_p.html#fv_fill_modi583" target="origFile">dq_tl = -(dp(i, k)*q_tl(i, k, ic))</a>
<a name="fillz_tlmi584"></a>                <a href="null_p.html#fv_fill_modi583" target="origFile">dq = -(q(i, k, ic)*dp(i, k))</a>
<a name="fillz_tlmi584"></a>              <a href="null_p.html#fv_fill_modi582" target="origFile"><code class="keyword">ELSE</code></a>
                <a href="null_p.html#fv_fill_modi584" target="origFile">dq_tl = dp(i, k-<code class="constant">1</code>)*q_tl(i, k-<code class="constant">1</code>, ic)</a>
<a name="fillz_tlmi585"></a>                <a href="null_p.html#fv_fill_modi584" target="origFile">dq = q(i, k-<code class="constant">1</code>, ic)*dp(i, k-<code class="constant">1</code>)</a>
<a name="fillz_tlmi585"></a>              <a href="null_p.html#fv_fill_modi582" target="origFile"><code class="keyword">END IF</code></a>
<a name="fillz_tlmi586"></a>              <a href="null_p.html#fv_fill_modi585" target="origFile">q_tl(i, k-<code class="constant">1</code>, ic) = q_tl(i, k-<code class="constant">1</code>, ic) - dq_tl/dp(i, k-<code class="constant">1</code>)</a>
<a name="fillz_tlmi586"></a>              <a href="null_p.html#fv_fill_modi585" target="origFile">q(i, k-<code class="constant">1</code>, ic) = q(i, k-<code class="constant">1</code>, ic) - dq/dp(i, k-<code class="constant">1</code>)</a>
              <a href="null_p.html#fv_fill_modi586" target="origFile">q_tl(i, k, ic) = q_tl(i, k, ic) + dq_tl/dp(i, k)</a>
<a name="fillz_tlmi587"></a>              <a href="null_p.html#fv_fill_modi586" target="origFile">q(i, k, ic) = q(i, k, ic) + dq/dp(i, k)</a>
<a name="fillz_tlmi588"></a>            <a href="null_p.html#fv_fill_modi581" target="origFile"><code class="keyword">END IF</code></a>
            <a href="null_p.html#fv_fill_modi587" target="origFile"><code class="keyword">IF</code> (q(i, k, ic) .LT. <code class="constant">0.0 </code>.AND. q(i, k+<code class="constant">1</code>, ic) .GT. <code class="constant">0.</code>) <code class="keyword">THEN</code></a>
<a name="fillz_tlmi589"></a>              <a href="null_p.html#fv_fill_modi588" target="origFile"><code class="keyword">IF</code> (q(i, k+<code class="constant">1</code>, ic)*dp(i, k+<code class="constant">1</code>) .GT. -(q(i, k, ic)*dp(i, k))<code class="label">&</code></a>
<a name="fillz_tlmi589"></a><a href="null_p.html#fv_fill_modi588" target="origFile"><code class="label">&             </code>) <code class="keyword">THEN</code></a>
                <a href="null_p.html#fv_fill_modi589" target="origFile">dq_tl = -(dp(i, k)*q_tl(i, k, ic))</a>
<a name="fillz_tlmi590"></a>                <a href="null_p.html#fv_fill_modi589" target="origFile">dq = -(q(i, k, ic)*dp(i, k))</a>
<a name="fillz_tlmi590"></a>              <a href="null_p.html#fv_fill_modi588" target="origFile"><code class="keyword">ELSE</code></a>
                <a href="null_p.html#fv_fill_modi590" target="origFile">dq_tl = dp(i, k+<code class="constant">1</code>)*q_tl(i, k+<code class="constant">1</code>, ic)</a>
<a name="fillz_tlmi591"></a>                <a href="null_p.html#fv_fill_modi590" target="origFile">dq = q(i, k+<code class="constant">1</code>, ic)*dp(i, k+<code class="constant">1</code>)</a>
<a name="fillz_tlmi591"></a>              <a href="null_p.html#fv_fill_modi588" target="origFile"><code class="keyword">END IF</code></a>
<a name="fillz_tlmi592"></a>              <a href="null_p.html#fv_fill_modi591" target="origFile">q_tl(i, k+<code class="constant">1</code>, ic) = q_tl(i, k+<code class="constant">1</code>, ic) - dq_tl/dp(i, k+<code class="constant">1</code>)</a>
<a name="fillz_tlmi592"></a>              <a href="null_p.html#fv_fill_modi591" target="origFile">q(i, k+<code class="constant">1</code>, ic) = q(i, k+<code class="constant">1</code>, ic) - dq/dp(i, k+<code class="constant">1</code>)</a>
              <a href="null_p.html#fv_fill_modi592" target="origFile">q_tl(i, k, ic) = q_tl(i, k, ic) + dq_tl/dp(i, k)</a>
              <a href="null_p.html#fv_fill_modi592" target="origFile">q(i, k, ic) = q(i, k, ic) + dq/dp(i, k)</a>
            <a href="null_p.html#fv_fill_modi587" target="origFile"><code class="keyword">END IF</code></a>
          <a href="null_p.html#fv_fill_modi579" target="origFile"><code class="keyword">END IF</code></a>
<a name="fillz_tlmi595"></a>        <a href="null_p.html#fv_fill_modi593" target="origFile"><code class="keyword">END DO</code></a>
      <a href="null_p.html#fv_fill_modi594" target="origFile"><code class="keyword">END DO</code></a>
<a name="fillz_tlmi605"></a><a href="null_p.html#fv_fill_modi595" target="origFile"><code class="comment">! Bottom layer</code></a>
<a name="fillz_tlmi596"></a>      <a href="null_p.html#fv_fill_modi595" target="origFile">k = km</a>
<a name="fillz_tlmi597"></a>      <a href="null_p.html#fv_fill_modi605" target="origFile"><code class="keyword">DO </code>i=<code class="constant">1</code>,im</a>
<a name="fillz_tlmi598"></a>        <a href="null_p.html#fv_fill_modi596" target="origFile"><code class="keyword">IF</code> (q(i, k, ic) .LT. <code class="constant">0. </code>.AND. q(i, k-<code class="constant">1</code>, ic) .GT. <code class="constant">0.</code>) <code class="keyword">THEN</code></a>
          <a href="null_p.html#fv_fill_modi597" target="origFile">zfix(i) = <code class="constant">.true.</code></a>
<a name="fillz_tlmi598"></a><a href="null_p.html#fv_fill_modi598" target="origFile"><code class="comment">! Borrow from above</code></a>
<a name="fillz_tlmi599"></a>          <a href="null_p.html#fv_fill_modi598" target="origFile">qup_tl = dp(i, k-<code class="constant">1</code>)*q_tl(i, k-<code class="constant">1</code>, ic)</a>
<a name="fillz_tlmi599"></a>          <a href="null_p.html#fv_fill_modi598" target="origFile">qup = q(i, k-<code class="constant">1</code>, ic)*dp(i, k-<code class="constant">1</code>)</a>
<a name="fillz_tlmi600"></a>          <a href="null_p.html#fv_fill_modi599" target="origFile">qly_tl = -(dp(i, k)*q_tl(i, k, ic))</a>
<a name="fillz_tlmi601"></a>          <a href="null_p.html#fv_fill_modi599" target="origFile">qly = -(q(i, k, ic)*dp(i, k))</a>
<a name="fillz_tlmi601"></a>          <a href="null_p.html#fv_fill_modi600" target="origFile"><code class="keyword">IF</code> (qly .GT. qup) <code class="keyword">THEN</code></a>
            <a href="null_p.html#fv_fill_modi601" target="origFile">dup_tl = qup_tl</a>
<a name="fillz_tlmi602"></a>            <a href="null_p.html#fv_fill_modi601" target="origFile">dup = qup</a>
<a name="fillz_tlmi602"></a>          <a href="null_p.html#fv_fill_modi600" target="origFile"><code class="keyword">ELSE</code></a>
            <a href="null_p.html#fv_fill_modi602" target="origFile">dup_tl = qly_tl</a>
<a name="fillz_tlmi603"></a>            <a href="null_p.html#fv_fill_modi602" target="origFile">dup = qly</a>
<a name="fillz_tlmi603"></a>          <a href="null_p.html#fv_fill_modi600" target="origFile"><code class="keyword">END IF</code></a>
<a name="fillz_tlmi604"></a>          <a href="null_p.html#fv_fill_modi603" target="origFile">q_tl(i, k-<code class="constant">1</code>, ic) = q_tl(i, k-<code class="constant">1</code>, ic) - dup_tl/dp(i, k-<code class="constant">1</code>)</a>
<a name="fillz_tlmi604"></a>          <a href="null_p.html#fv_fill_modi603" target="origFile">q(i, k-<code class="constant">1</code>, ic) = q(i, k-<code class="constant">1</code>, ic) - dup/dp(i, k-<code class="constant">1</code>)</a>
          <a href="null_p.html#fv_fill_modi604" target="origFile">q_tl(i, k, ic) = q_tl(i, k, ic) + dup_tl/dp(i, k)</a>
          <a href="null_p.html#fv_fill_modi604" target="origFile">q(i, k, ic) = q(i, k, ic) + dup/dp(i, k)</a>
<a name="fillz_tlmi623"></a>        <a href="null_p.html#fv_fill_modi596" target="origFile"><code class="keyword">END IF</code></a>
      <a href="null_p.html#fv_fill_modi605" target="origFile"><code class="keyword">END DO</code></a>
<a name="fillz_tlmi606"></a><a href="null_p.html#fv_fill_modi623" target="origFile"><code class="comment">! Perform final check and non-local fix if needed</code></a>
<a name="fillz_tlmi607"></a>      <a href="null_p.html#fv_fill_modi623" target="origFile"><code class="keyword">DO </code>i=<code class="constant">1</code>,im</a>
        <a href="null_p.html#fv_fill_modi606" target="origFile"><code class="keyword">IF</code> (zfix(i)) <code class="keyword">THEN</code></a>
<a name="fillz_tlmi610"></a>          <a href="null_p.html#fv_fill_modi607" target="origFile">sum0 = <code class="constant">0.</code></a>
<a name="fillz_tlmi608"></a>          <a href="null_p.html#fv_fill_modi606" target="origFile">sum0_tl = <code class="constant">0.0_8</code></a>
<a name="fillz_tlmi608"></a>          <a href="null_p.html#fv_fill_modi610" target="origFile"><code class="keyword">DO </code>k=<code class="constant">2</code>,km</a>
<a name="fillz_tlmi609"></a>            <a href="null_p.html#fv_fill_modi608" target="origFile">dm_tl(k) = dp(i, k)*q_tl(i, k, ic)</a>
<a name="fillz_tlmi609"></a>            <a href="null_p.html#fv_fill_modi608" target="origFile">dm(k) = q(i, k, ic)*dp(i, k)</a>
            <a href="null_p.html#fv_fill_modi609" target="origFile">sum0_tl = sum0_tl + dm_tl(k)</a>
<a name="fillz_tlmi611"></a>            <a href="null_p.html#fv_fill_modi609" target="origFile">sum0 = sum0 + dm(k)</a>
<a name="fillz_tlmi612"></a>          <a href="null_p.html#fv_fill_modi610" target="origFile"><code class="keyword">END DO</code></a>
          <a href="null_p.html#fv_fill_modi611" target="origFile"><code class="keyword">IF</code> (sum0 .GT. <code class="constant">0.</code>) <code class="keyword">THEN</code></a>
<a name="fillz_tlmi617"></a>            <a href="null_p.html#fv_fill_modi612" target="origFile">sum1 = <code class="constant">0.</code></a>
<a name="fillz_tlmi613"></a>            <a href="null_p.html#fv_fill_modi611" target="origFile">sum1_tl = <code class="constant">0.0_8</code></a>
<a name="fillz_tlmi614"></a>            <a href="null_p.html#fv_fill_modi617" target="origFile"><code class="keyword">DO </code>k=<code class="constant">2</code>,km</a>
<a name="fillz_tlmi614"></a>              <a href="null_p.html#fv_fill_modi613" target="origFile"><code class="keyword">IF</code> (<code class="constant">0. </code>.LT. dm(k)) <code class="keyword">THEN</code></a>
                <a href="null_p.html#fv_fill_modi614" target="origFile">max1_tl = dm_tl(k)</a>
<a name="fillz_tlmi615"></a>                <a href="null_p.html#fv_fill_modi614" target="origFile">max1 = dm(k)</a>
              <a href="null_p.html#fv_fill_modi613" target="origFile"><code class="keyword">ELSE</code></a>
                <a href="null_p.html#fv_fill_modi615" target="origFile">max1 = <code class="constant">0.</code></a>
<a name="fillz_tlmi616"></a>                <a href="null_p.html#fv_fill_modi613" target="origFile">max1_tl = <code class="constant">0.0_8</code></a>
<a name="fillz_tlmi616"></a>              <a href="null_p.html#fv_fill_modi613" target="origFile"><code class="keyword">END IF</code></a>
              <a href="null_p.html#fv_fill_modi616" target="origFile">sum1_tl = sum1_tl + max1_tl</a>
<a name="fillz_tlmi618"></a>              <a href="null_p.html#fv_fill_modi616" target="origFile">sum1 = sum1 + max1</a>
<a name="fillz_tlmi618"></a>            <a href="null_p.html#fv_fill_modi617" target="origFile"><code class="keyword">END DO</code></a>
<a name="fillz_tlmi622"></a>            <a href="null_p.html#fv_fill_modi618" target="origFile">fac_tl = (sum0_tl*sum1-sum0*sum1_tl)/sum1**<code class="constant">2</code></a>
<a name="fillz_tlmi619"></a>            <a href="null_p.html#fv_fill_modi618" target="origFile">fac = sum0/sum1</a>
<a name="fillz_tlmi620"></a>            <a href="null_p.html#fv_fill_modi622" target="origFile"><code class="keyword">DO </code>k=<code class="constant">2</code>,km</a>
<a name="fillz_tlmi620"></a>              <a href="null_p.html#fv_fill_modi619" target="origFile"><code class="keyword">IF</code> (<code class="constant">0. </code>.LT. fac*dm(k)/dp(i, k)) <code class="keyword">THEN</code></a>
                <a href="null_p.html#fv_fill_modi620" target="origFile">q_tl(i, k, ic) = (fac_tl*dm(k)+fac*dm_tl(k))/dp(i, k)</a>
<a name="fillz_tlmi621"></a>                <a href="null_p.html#fv_fill_modi620" target="origFile">q(i, k, ic) = fac*dm(k)/dp(i, k)</a>
<a name="fillz_tlmi621"></a>              <a href="null_p.html#fv_fill_modi619" target="origFile"><code class="keyword">ELSE</code></a>
                <a href="null_p.html#fv_fill_modi621" target="origFile">q_tl(i, k, ic) = <code class="constant">0.0_8</code></a>
                <a href="null_p.html#fv_fill_modi621" target="origFile">q(i, k, ic) = <code class="constant">0.</code></a>
              <a href="null_p.html#fv_fill_modi619" target="origFile"><code class="keyword">END IF</code></a>
            <a href="null_p.html#fv_fill_modi622" target="origFile"><code class="keyword">END DO</code></a>
          <a href="null_p.html#fv_fill_modi611" target="origFile"><code class="keyword">END IF</code></a>
        <a href="null_p.html#fv_fill_modi606" target="origFile"><code class="keyword">END IF</code></a>
      <a href="null_p.html#fv_fill_modi623" target="origFile"><code class="keyword">END DO</code></a>
<a name="fillz"></a>    <a href="null_p.html#fv_fill_modi624" target="origFile"><code class="keyword">END DO</code></a>
  <a href="null_p.html#fv_fill_mod" target="origFile"><code class="keyword">END SUBROUTINE </code><code class="funcname">FILLZ_TLM</code></a>
  <a href="null_p.html#fv_fill_mod" target="origFile"><code class="keyword">SUBROUTINE </code><code class="funcname">FILLZ</code>(<code class="vardecl">im</code>, <code class="vardecl">km</code>, <code class="vardecl">nq</code>, <code class="vardecl">q</code>, <code class="vardecl">dp</code>)</a>
    <a href="null_p.html#fv_fill_mod" target="origFile"><code class="keyword">IMPLICIT NONE</code></a>
<a href="null_p.html#fv_fill_mod" target="origFile"><code class="comment">! No. of longitudes</code></a>
    <a href="null_p.html#fv_fill_mod" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">im</code></a>
<a href="null_p.html#fv_fill_mod" target="origFile"><code class="comment">! No. of levels</code></a>
    <a href="null_p.html#fv_fill_mod" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">km</code></a>
<a href="null_p.html#fv_fill_mod" target="origFile"><code class="comment">! Total number of tracers</code></a>
    <a href="null_p.html#fv_fill_mod" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">nq</code></a>
<a href="null_p.html#fv_fill_mod" target="origFile"><code class="comment">! pressure thickness</code></a>
    <a href="null_p.html#fv_fill_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">real8</code><code class="typename">)</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">dp</code>(<code class="vardecl">im</code>, <code class="vardecl">km</code>)</a>
<a href="null_p.html#fv_fill_mod" target="origFile"><code class="comment">! tracer mixing ratio</code></a>
    <a href="null_p.html#fv_fill_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">real8</code><code class="typename">)</code>, <code class="typename">INTENT(INOUT) </code>:: <code class="vardecl">q</code>(<code class="vardecl">im</code>, <code class="vardecl">km</code>, <code class="vardecl">nq</code>)</a>
<a href="null_p.html#fv_fill_mod" target="origFile"><code class="comment">! !LOCAL VARIABLES:</code></a>
    <a href="null_p.html#fv_fill_mod" target="origFile"><code class="typename">LOGICAL </code>:: <code class="vardecl">zfix</code>(<code class="vardecl">im</code>)</a>
    <a href="null_p.html#fv_fill_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">real8</code><code class="typename">) </code>:: <code class="vardecl">dm</code>(<code class="vardecl">km</code>)</a>
    <a href="null_p.html#fv_fill_mod" target="origFile"><code class="typename">INTEGER </code>:: <code class="vardecl">i</code>, <code class="vardecl">k</code>, <code class="vardecl">ic</code></a>
    <a href="null_p.html#fv_fill_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">real8</code><code class="typename">) </code>:: <code class="vardecl">qup</code>, <code class="vardecl">qly</code>, <code class="vardecl">dup</code>, <code class="vardecl">dq</code>, <code class="vardecl">sum0</code>, <code class="vardecl">sum1</code>, <code class="vardecl">fac</code></a>
    <a href="null_p.html#fv_fill_mod" target="origFile"><code class="keyword">INTRINSIC </code><code class="funcname">MIN</code></a>
    <a href="null_p.html#fv_fill_mod" target="origFile"><code class="keyword">INTRINSIC </code><code class="funcname">MAX</code></a>
    <a href="null_p.html#fv_fill_mod" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">max1</code></a>
    <a href="null_p.html#fv_fill_mod" target="origFile"><code class="keyword">DO </code>ic=<code class="constant">1</code>,nq</a>
<a href="null_p.html#fv_fill_mod" target="origFile"><code class="comment">! Top layer</code></a>
      <a href="null_p.html#fv_fill_mod" target="origFile"><code class="keyword">DO </code>i=<code class="constant">1</code>,im</a>
        <a href="null_p.html#fv_fill_mod" target="origFile"><code class="keyword">IF</code> (q(i, <code class="constant">1</code>, ic) .LT. <code class="constant">0.</code>) <code class="keyword">THEN</code></a>
          <a href="null_p.html#fv_fill_mod" target="origFile">q(i, <code class="constant">2</code>, ic) = q(i, <code class="constant">2</code>, ic) + q(i, <code class="constant">1</code>, ic)*dp(i, <code class="constant">1</code>)/dp(i, <code class="constant">2</code>)</a>
          <a href="null_p.html#fv_fill_mod" target="origFile">q(i, <code class="constant">1</code>, ic) = <code class="constant">0.</code></a>
        <a href="null_p.html#fv_fill_mod" target="origFile"><code class="keyword">END IF</code></a>
      <a href="null_p.html#fv_fill_mod" target="origFile"><code class="keyword">END DO</code></a>
<a href="null_p.html#fv_fill_mod" target="origFile"><code class="comment">! Interior</code></a>
      <a href="null_p.html#fv_fill_mod" target="origFile">zfix(:) = <code class="constant">.false.</code></a>
      <a href="null_p.html#fv_fill_mod" target="origFile"><code class="keyword">DO </code>k=<code class="constant">2</code>,km-<code class="constant">1</code></a>
        <a href="null_p.html#fv_fill_mod" target="origFile"><code class="keyword">DO </code>i=<code class="constant">1</code>,im</a>
          <a href="null_p.html#fv_fill_mod" target="origFile"><code class="keyword">IF</code> (q(i, k, ic) .LT. <code class="constant">0.</code>) <code class="keyword">THEN</code></a>
            <a href="null_p.html#fv_fill_mod" target="origFile">zfix(i) = <code class="constant">.true.</code></a>
            <a href="null_p.html#fv_fill_mod" target="origFile"><code class="keyword">IF</code> (q(i, k-<code class="constant">1</code>, ic) .GT. <code class="constant">0.</code>) <code class="keyword">THEN</code></a>
              <a href="null_p.html#fv_fill_mod" target="origFile"><code class="keyword">IF</code> (q(i, k-<code class="constant">1</code>, ic)*dp(i, k-<code class="constant">1</code>) .GT. -(q(i, k, ic)*dp(i, k))<code class="label">&</code></a>
<a href="null_p.html#fv_fill_mod" target="origFile"><code class="label">&             </code>) <code class="keyword">THEN</code></a>
                <a href="null_p.html#fv_fill_mod" target="origFile">dq = -(q(i, k, ic)*dp(i, k))</a>
              <a href="null_p.html#fv_fill_mod" target="origFile"><code class="keyword">ELSE</code></a>
                <a href="null_p.html#fv_fill_mod" target="origFile">dq = q(i, k-<code class="constant">1</code>, ic)*dp(i, k-<code class="constant">1</code>)</a>
              <a href="null_p.html#fv_fill_mod" target="origFile"><code class="keyword">END IF</code></a>
              <a href="null_p.html#fv_fill_mod" target="origFile">q(i, k-<code class="constant">1</code>, ic) = q(i, k-<code class="constant">1</code>, ic) - dq/dp(i, k-<code class="constant">1</code>)</a>
              <a href="null_p.html#fv_fill_mod" target="origFile">q(i, k, ic) = q(i, k, ic) + dq/dp(i, k)</a>
            <a href="null_p.html#fv_fill_mod" target="origFile"><code class="keyword">END IF</code></a>
            <a href="null_p.html#fv_fill_mod" target="origFile"><code class="keyword">IF</code> (q(i, k, ic) .LT. <code class="constant">0.0 </code>.AND. q(i, k+<code class="constant">1</code>, ic) .GT. <code class="constant">0.</code>) <code class="keyword">THEN</code></a>
              <a href="null_p.html#fv_fill_mod" target="origFile"><code class="keyword">IF</code> (q(i, k+<code class="constant">1</code>, ic)*dp(i, k+<code class="constant">1</code>) .GT. -(q(i, k, ic)*dp(i, k))<code class="label">&</code></a>
<a href="null_p.html#fv_fill_mod" target="origFile"><code class="label">&             </code>) <code class="keyword">THEN</code></a>
                <a href="null_p.html#fv_fill_mod" target="origFile">dq = -(q(i, k, ic)*dp(i, k))</a>
              <a href="null_p.html#fv_fill_mod" target="origFile"><code class="keyword">ELSE</code></a>
                <a href="null_p.html#fv_fill_mod" target="origFile">dq = q(i, k+<code class="constant">1</code>, ic)*dp(i, k+<code class="constant">1</code>)</a>
              <a href="null_p.html#fv_fill_mod" target="origFile"><code class="keyword">END IF</code></a>
              <a href="null_p.html#fv_fill_mod" target="origFile">q(i, k+<code class="constant">1</code>, ic) = q(i, k+<code class="constant">1</code>, ic) - dq/dp(i, k+<code class="constant">1</code>)</a>
              <a href="null_p.html#fv_fill_mod" target="origFile">q(i, k, ic) = q(i, k, ic) + dq/dp(i, k)</a>
            <a href="null_p.html#fv_fill_mod" target="origFile"><code class="keyword">END IF</code></a>
          <a href="null_p.html#fv_fill_mod" target="origFile"><code class="keyword">END IF</code></a>
        <a href="null_p.html#fv_fill_mod" target="origFile"><code class="keyword">END DO</code></a>
      <a href="null_p.html#fv_fill_mod" target="origFile"><code class="keyword">END DO</code></a>
<a href="null_p.html#fv_fill_mod" target="origFile"><code class="comment">! Bottom layer</code></a>
      <a href="null_p.html#fv_fill_mod" target="origFile">k = km</a>
      <a href="null_p.html#fv_fill_mod" target="origFile"><code class="keyword">DO </code>i=<code class="constant">1</code>,im</a>
        <a href="null_p.html#fv_fill_mod" target="origFile"><code class="keyword">IF</code> (q(i, k, ic) .LT. <code class="constant">0. </code>.AND. q(i, k-<code class="constant">1</code>, ic) .GT. <code class="constant">0.</code>) <code class="keyword">THEN</code></a>
          <a href="null_p.html#fv_fill_mod" target="origFile">zfix(i) = <code class="constant">.true.</code></a>
<a href="null_p.html#fv_fill_mod" target="origFile"><code class="comment">! Borrow from above</code></a>
          <a href="null_p.html#fv_fill_mod" target="origFile">qup = q(i, k-<code class="constant">1</code>, ic)*dp(i, k-<code class="constant">1</code>)</a>
          <a href="null_p.html#fv_fill_mod" target="origFile">qly = -(q(i, k, ic)*dp(i, k))</a>
          <a href="null_p.html#fv_fill_mod" target="origFile"><code class="keyword">IF</code> (qly .GT. qup) <code class="keyword">THEN</code></a>
            <a href="null_p.html#fv_fill_mod" target="origFile">dup = qup</a>
          <a href="null_p.html#fv_fill_mod" target="origFile"><code class="keyword">ELSE</code></a>
            <a href="null_p.html#fv_fill_mod" target="origFile">dup = qly</a>
          <a href="null_p.html#fv_fill_mod" target="origFile"><code class="keyword">END IF</code></a>
          <a href="null_p.html#fv_fill_mod" target="origFile">q(i, k-<code class="constant">1</code>, ic) = q(i, k-<code class="constant">1</code>, ic) - dup/dp(i, k-<code class="constant">1</code>)</a>
          <a href="null_p.html#fv_fill_mod" target="origFile">q(i, k, ic) = q(i, k, ic) + dup/dp(i, k)</a>
        <a href="null_p.html#fv_fill_mod" target="origFile"><code class="keyword">END IF</code></a>
      <a href="null_p.html#fv_fill_mod" target="origFile"><code class="keyword">END DO</code></a>
<a href="null_p.html#fv_fill_mod" target="origFile"><code class="comment">! Perform final check and non-local fix if needed</code></a>
      <a href="null_p.html#fv_fill_mod" target="origFile"><code class="keyword">DO </code>i=<code class="constant">1</code>,im</a>
        <a href="null_p.html#fv_fill_mod" target="origFile"><code class="keyword">IF</code> (zfix(i)) <code class="keyword">THEN</code></a>
          <a href="null_p.html#fv_fill_mod" target="origFile">sum0 = <code class="constant">0.</code></a>
          <a href="null_p.html#fv_fill_mod" target="origFile"><code class="keyword">DO </code>k=<code class="constant">2</code>,km</a>
            <a href="null_p.html#fv_fill_mod" target="origFile">dm(k) = q(i, k, ic)*dp(i, k)</a>
            <a href="null_p.html#fv_fill_mod" target="origFile">sum0 = sum0 + dm(k)</a>
          <a href="null_p.html#fv_fill_mod" target="origFile"><code class="keyword">END DO</code></a>
          <a href="null_p.html#fv_fill_mod" target="origFile"><code class="keyword">IF</code> (sum0 .GT. <code class="constant">0.</code>) <code class="keyword">THEN</code></a>
            <a href="null_p.html#fv_fill_mod" target="origFile">sum1 = <code class="constant">0.</code></a>
            <a href="null_p.html#fv_fill_mod" target="origFile"><code class="keyword">DO </code>k=<code class="constant">2</code>,km</a>
              <a href="null_p.html#fv_fill_mod" target="origFile"><code class="keyword">IF</code> (<code class="constant">0. </code>.LT. dm(k)) <code class="keyword">THEN</code></a>
                <a href="null_p.html#fv_fill_mod" target="origFile">max1 = dm(k)</a>
              <a href="null_p.html#fv_fill_mod" target="origFile"><code class="keyword">ELSE</code></a>
                <a href="null_p.html#fv_fill_mod" target="origFile">max1 = <code class="constant">0.</code></a>
              <a href="null_p.html#fv_fill_mod" target="origFile"><code class="keyword">END IF</code></a>
              <a href="null_p.html#fv_fill_mod" target="origFile">sum1 = sum1 + max1</a>
            <a href="null_p.html#fv_fill_mod" target="origFile"><code class="keyword">END DO</code></a>
            <a href="null_p.html#fv_fill_mod" target="origFile">fac = sum0/sum1</a>
            <a href="null_p.html#fv_fill_mod" target="origFile"><code class="keyword">DO </code>k=<code class="constant">2</code>,km</a>
              <a href="null_p.html#fv_fill_mod" target="origFile"><code class="keyword">IF</code> (<code class="constant">0. </code>.LT. fac*dm(k)/dp(i, k)) <code class="keyword">THEN</code></a>
                <a href="null_p.html#fv_fill_mod" target="origFile">q(i, k, ic) = fac*dm(k)/dp(i, k)</a>
              <a href="null_p.html#fv_fill_mod" target="origFile"><code class="keyword">ELSE</code></a>
                <a href="null_p.html#fv_fill_mod" target="origFile">q(i, k, ic) = <code class="constant">0.</code></a>
              <a href="null_p.html#fv_fill_mod" target="origFile"><code class="keyword">END IF</code></a>
            <a href="null_p.html#fv_fill_mod" target="origFile"><code class="keyword">END DO</code></a>
          <a href="null_p.html#fv_fill_mod" target="origFile"><code class="keyword">END IF</code></a>
        <a href="null_p.html#fv_fill_mod" target="origFile"><code class="keyword">END IF</code></a>
      <a href="null_p.html#fv_fill_mod" target="origFile"><code class="keyword">END DO</code></a>
    <a href="null_p.html#fv_fill_mod" target="origFile"><code class="keyword">END DO</code></a>
  <a href="null_p.html#fv_fill_mod" target="origFile"><code class="keyword">END SUBROUTINE </code><code class="funcname">FILLZ</code></a>
<code class="keyword">END MODULE </code><code class="funcname">FV_FILL_MOD_D</code>
</pre>
</body>
