<title>Generated by TAPENADE</title>
<link type="text/CSS" rel="stylesheet" href="tapenade.css">
<link type="text/CSS" rel="stylesheet" href="fortranStyle.css">
<body>
<pre><code class="comment">!        Generated by TAPENADE     (INRIA, Ecuador team)</code>
<code class="comment">!  Tapenade 3.12 (r6213) - 13 Oct 2016 10:30</code>
<code class="comment">!</code>
<code class="keyword">MODULE </code><code class="funcname">TP_CORE_MOD_D</code>
<code class="comment">!BOP</code>
<code class="comment">!</code>
<code class="comment">! !MODULE: tp_core --- A collection of routines to support FV transport</code>
<code class="comment">!</code>
  <code class="keyword">USE </code><code class="funcname">FV_ARRAYS_MOD</code>, <code class="keyword">ONLY </code>: fvprc, real4, real8, cnvt
  <code class="keyword">USE </code><code class="funcname">FV_MP_MOD_D</code>, <code class="keyword">ONLY </code>: is, js, ie, je, ng, isd, jsd, ied, jed
  <code class="keyword">USE </code><code class="funcname">FV_GRID_UTILS_MOD_D</code>, <code class="keyword">ONLY </code>: sw_corner, se_corner, ne_corner, <code class="label">&</code>
<code class="label">& </code>nw_corner, sin_sg =&gt; sin_sg, da_min =&gt; da_min, big_number_r8 =&gt; <code class="label">&</code>
<code class="label">& </code>big_number
  <code class="keyword">USE </code><code class="funcname">FV_GRID_TOOLS_MOD_D</code>, <code class="keyword">ONLY </code>: grid_type, dx =&gt; dx, dy =&gt; dy, rdxc =&gt;<code class="label">&</code>
<code class="label">& </code>rdxc, rdyc =&gt; rdyc, dxa =&gt; dxa, dya =&gt; dya, area =&gt; area, rarea =&gt; <code class="label">&</code>
<code class="label">& </code>rarea
  <code class="keyword">IMPLICIT NONE</code>
  PRIVATE 
  PUBLIC fv_tp_2d, pert_ppm, copy_corners
  PUBLIC fv_tp_2d_tlm, copy_corners_tlm
<code class="comment">!#ifdef MAPL_MODE</code>
  <code class="typename">LOGICAL</code>, <code class="typename">PARAMETER </code>:: <code class="vardecl">nested</code>=<code class="constant">.false.</code>
<code class="comment">!#endif</code>
  <code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">PARAMETER </code>:: <code class="vardecl">r3</code>=<code class="constant">1.</code>/<code class="constant">3.</code>
  <code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">PARAMETER </code>:: <code class="vardecl">near_zero</code>=<code class="constant">1.e-25</code>
  <code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">PARAMETER </code>:: <code class="vardecl">ppm_limiter</code>=<code class="constant">2.0</code>
  <code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">PARAMETER </code>:: <code class="vardecl">big_number</code>=<code class="vardecl">big_number_r8</code>
<code class="comment">!#ifdef WAVE_FORM</code>
<code class="comment">!! Suresh & Huynh scheme 2.2 (purtabation form)</code>
<code class="comment">!! The wave-form is more diffusive than scheme 2.1</code>
<code class="comment">! real(FVPRC), parameter:: b1 =   0.0375</code>
<code class="comment">! real(FVPRC), parameter:: b2 =  -7./30.</code>
<code class="comment">! real(FVPRC), parameter:: b3 =  -23./120.</code>
<code class="comment">! real(FVPRC), parameter:: b4 =  13./30.</code>
<code class="comment">! real(FVPRC), parameter:: b5 = -11./240.</code>
<code class="comment">!#else</code>
<code class="comment">! scheme 2.1: perturbation form</code>
  <code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">PARAMETER </code>:: <code class="vardecl">b1</code>=<code class="constant">1.</code>/<code class="constant">30.</code>
  <code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">PARAMETER </code>:: <code class="vardecl">b2</code>=-(<code class="constant">13.</code>/<code class="constant">60.</code>)
  <code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">PARAMETER </code>:: <code class="vardecl">b3</code>=-(<code class="constant">13.</code>/<code class="constant">60.</code>)
  <code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">PARAMETER </code>:: <code class="vardecl">b4</code>=<code class="constant">0.45</code>
  <code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">PARAMETER </code>:: <code class="vardecl">b5</code>=-<code class="constant">0.05</code>
<code class="comment">!#endif</code>
  <code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">PARAMETER </code>:: <code class="vardecl">t11</code>=<code class="constant">27.</code>/<code class="constant">28.</code>, <code class="vardecl">t12</code>=-(<code class="constant">13.</code>/<code class="constant">28.</code>), <code class="vardecl">t13</code>=<code class="constant">3.</code>/<code class="constant">7.</code>
  <code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">PARAMETER </code>:: <code class="vardecl">s11</code>=<code class="constant">11.</code>/<code class="constant">14.</code>, <code class="vardecl">s14</code>=<code class="constant">4.</code>/<code class="constant">7.</code>, <code class="vardecl">s15</code>=<code class="constant">3.</code>/<code class="constant">14.</code>
<code class="comment">!----------------------------------------------------</code>
<code class="comment">! volume-conserving cubic with 2nd drv=0 at end point:</code>
<code class="comment">!----------------------------------------------------</code>
<code class="comment">! Non-monotonic</code>
  <code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">PARAMETER </code>:: <code class="vardecl">c1</code>=-(<code class="constant">2.</code>/<code class="constant">14.</code>)
  <code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">PARAMETER </code>:: <code class="vardecl">c2</code>=<code class="constant">11.</code>/<code class="constant">14.</code>
  <code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">PARAMETER </code>:: <code class="vardecl">c3</code>=<code class="constant">5.</code>/<code class="constant">14.</code>
<code class="comment">!----------------------</code>
<code class="comment">! PPM volume mean form:</code>
<code class="comment">!----------------------</code>
<code class="comment">! 0.58333333</code>
  <code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">PARAMETER </code>:: <code class="vardecl">p1</code>=<code class="constant">7.</code>/<code class="constant">12.</code>
  <code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">PARAMETER </code>:: <code class="vardecl">p2</code>=-(<code class="constant">1.</code>/<code class="constant">12.</code>)
<code class="comment">!#ifdef SINGLE_FV</code>
<code class="comment">!   MODULE PROCEDURE fv_tp_2d_r8</code>
<code class="comment">!#endif</code>
  <code class="keyword">INTERFACE </code><code class="funcname">FV_TP_2D</code>
      <code class="keyword">MODULE PROCEDURE </code><code class="funcname">FV_TP_2D_R4</code>
  <code class="keyword">END INTERFACE</code>

  <code class="keyword">INTERFACE </code><code class="funcname">FV_TP_2D_TLM</code>
      <code class="keyword">MODULE PROCEDURE </code><code class="funcname">FV_TP_2D_R4_TLM</code>
  <code class="keyword">END INTERFACE</code>

  <code class="keyword">INTERFACE </code><code class="funcname">COPY_CORNERS</code>
      <code class="keyword">MODULE PROCEDURE </code><code class="funcname">COPY_CORNERS_R4</code>
      <code class="keyword">MODULE PROCEDURE </code><code class="funcname">COPY_CORNERS_R8</code>
  <code class="keyword">END INTERFACE</code>

  <code class="keyword">INTERFACE </code><code class="funcname">COPY_CORNERS_TLM</code>
      <code class="keyword">MODULE PROCEDURE </code><code class="funcname">COPY_CORNERS_R8_TLM</code>
  <code class="keyword">END INTERFACE</code>

<a name="fv_tp_2d_r4_tlm"></a>
<code class="keyword">CONTAINS</code>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!  Differentiation of fv_tp_2d_r4 in forward (tangent) mode:</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!   variations   of useful results: q fx fy</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!   with respect to varying inputs: q fx fy</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! !DESCRIPTION:</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! !REVISION HISTORY:</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!EOP</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!-----------------------------------------------------------------------</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!#ifdef SINGLE_FV</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! subroutine fv_tp_2d_r8(qIN, crx, cry, npx, npy, hord, fx, fy, xfx, yfx,  &</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!                     ra_x, ra_y, mfx, mfy, mass, nord, damp_c)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!   integer, intent(in):: npx, npy</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!   integer, intent(in)::hord</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!   real(FVPRC), intent(in)::  crx(is:ie+1,jsd:jed)  !</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!   real(FVPRC), intent(in)::  xfx(is:ie+1,jsd:jed)  !</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!   real(FVPRC), intent(in)::  cry(isd:ied,js:je+1 )  !</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!   real(FVPRC), intent(in)::  yfx(isd:ied,js:je+1 )  !</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!   real(FVPRC), intent(in):: ra_x(is:ie,jsd:jed)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!   real(FVPRC), intent(in):: ra_y(isd:ied,js:je)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!   real(REAL8), intent(in)::  qIN(isd:ied,jsd:jed)  ! transported scalar</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!   real(FVPRC), intent(out)::fx(is:ie+1 ,js:je)    ! Flux in x ( E )</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!   real(FVPRC), intent(out)::fy(is:ie,   js:je+1 )    ! Flux in y ( N )</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!! optional Arguments:</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!   real(FVPRC), OPTIONAL, intent(in):: mfx(is:ie+1,js:je  )  ! Mass Flux X-Dir</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!   real(FVPRC), OPTIONAL, intent(in):: mfy(is:ie  ,js:je+1)  ! Mass Flux Y-Dir</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!   real(FVPRC), OPTIONAL, intent(in):: mass(isd:ied,jsd:jed)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!   real(FVPRC), OPTIONAL, intent(in):: damp_c</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!   integer, OPTIONAL, intent(in):: nord</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!! Local:</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!   real(FVPRC)   q(isd:ied,jsd:jed)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!   q = CNVT(qIN)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!   call fv_tp_2d(q, crx, cry, npx, npy, hord, fx, fy, xfx, yfx,  &</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!                     ra_x, ra_y, mfx=mfx, mfy=mfy, mass=mass, nord=nord, damp_c=damp_c)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! end subroutine fv_tp_2d_r8</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!#endif</code></a>
  <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">SUBROUTINE </code><code class="funcname">FV_TP_2D_R4_TLM</code>(<code class="vardecl">q</code>, <code class="vardecl">q_tl</code>, <code class="vardecl">crx</code>, <code class="vardecl">cry</code>, <code class="vardecl">npx</code>, <code class="vardecl">npy</code>, <code class="vardecl">hord</code>, <code class="vardecl">fx</code>, <code class="label">&</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="label">&   </code><code class="vardecl">fx_tl</code>, <code class="vardecl">fy</code>, <code class="vardecl">fy_tl</code>, <code class="vardecl">xfx</code>, <code class="vardecl">yfx</code>, <code class="vardecl">ra_x</code>, <code class="vardecl">ra_y</code>, <code class="vardecl">mfx</code>, <code class="vardecl">mfy</code>, <code class="vardecl">mass</code>, <code class="vardecl">nord</code>, <code class="vardecl">damp_c</code><code class="label">&</code></a>
<a name="fv_tp_2d_r4_tlmi382"></a><a href="null_p.html#tp_core_mod" target="origFile"><code class="label">& </code>)</a>
<a name="fv_tp_2d_r4_tlmi383"></a>    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IMPLICIT NONE</code></a>
<a name="fv_tp_2d_r4_tlmi384"></a>    <a href="null_p.html#tp_core_modi382" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">npx</code>, <code class="vardecl">npy</code></a>
    <a href="null_p.html#tp_core_modi383" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">hord</code></a>
<a name="fv_tp_2d_r4_tlmi385"></a><a href="null_p.html#tp_core_modi384" target="origFile"><code class="comment">!</code></a>
    <a href="null_p.html#tp_core_modi384" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">crx</code>(<code class="vardecl">is</code>:<code class="vardecl">ie</code>+<code class="constant">1</code>, <code class="vardecl">jsd</code>:<code class="vardecl">jed</code>)</a>
<a name="fv_tp_2d_r4_tlmi386"></a><a href="null_p.html#tp_core_modi385" target="origFile"><code class="comment">!</code></a>
    <a href="null_p.html#tp_core_modi385" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">xfx</code>(<code class="vardecl">is</code>:<code class="vardecl">ie</code>+<code class="constant">1</code>, <code class="vardecl">jsd</code>:<code class="vardecl">jed</code>)</a>
<a name="fv_tp_2d_r4_tlmi387"></a><a href="null_p.html#tp_core_modi386" target="origFile"><code class="comment">!</code></a>
    <a href="null_p.html#tp_core_modi386" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">cry</code>(<code class="vardecl">isd</code>:<code class="vardecl">ied</code>, <code class="vardecl">js</code>:<code class="vardecl">je</code>+<code class="constant">1</code>)</a>
<a name="fv_tp_2d_r4_tlmi388"></a><a href="null_p.html#tp_core_modi387" target="origFile"><code class="comment">!</code></a>
<a name="fv_tp_2d_r4_tlmi389"></a>    <a href="null_p.html#tp_core_modi387" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">yfx</code>(<code class="vardecl">isd</code>:<code class="vardecl">ied</code>, <code class="vardecl">js</code>:<code class="vardecl">je</code>+<code class="constant">1</code>)</a>
<a name="fv_tp_2d_r4_tlmi390"></a>    <a href="null_p.html#tp_core_modi388" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">ra_x</code>(<code class="vardecl">is</code>:<code class="vardecl">ie</code>, <code class="vardecl">jsd</code>:<code class="vardecl">jed</code>)</a>
    <a href="null_p.html#tp_core_modi389" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">ra_y</code>(<code class="vardecl">isd</code>:<code class="vardecl">ied</code>, <code class="vardecl">js</code>:<code class="vardecl">je</code>)</a>
<a href="null_p.html#tp_core_modi390" target="origFile"><code class="comment">! transported scalar</code></a>
<a name="fv_tp_2d_r4_tlmi391"></a>    <a href="null_p.html#tp_core_modi390" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">INTENT(INOUT) </code>:: <code class="vardecl">q</code>(<code class="vardecl">isd</code>:<code class="vardecl">ied</code>, <code class="vardecl">jsd</code>:<code class="vardecl">jed</code>)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">INTENT(INOUT) </code>:: <code class="vardecl">q_tl</code>(<code class="vardecl">isd</code>:<code class="vardecl">ied</code>, <code class="vardecl">jsd</code>:<code class="vardecl">jed</code>)</a>
<a href="null_p.html#tp_core_modi391" target="origFile"><code class="comment">! Flux in x ( E )</code></a>
<a name="fv_tp_2d_r4_tlmi392"></a>    <a href="null_p.html#tp_core_modi391" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">INTENT(OUT) </code>:: <code class="vardecl">fx</code>(<code class="vardecl">is</code>:<code class="vardecl">ie</code>+<code class="constant">1</code>, <code class="vardecl">js</code>:<code class="vardecl">je</code>)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">INTENT(OUT) </code>:: <code class="vardecl">fx_tl</code>(<code class="vardecl">is</code>:<code class="vardecl">ie</code>+<code class="constant">1</code>, <code class="vardecl">js</code>:<code class="vardecl">je</code>)</a>
<a href="null_p.html#tp_core_modi392" target="origFile"><code class="comment">! Flux in y ( N )</code></a>
<a name="fv_tp_2d_r4_tlmi393"></a>    <a href="null_p.html#tp_core_modi392" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">INTENT(OUT) </code>:: <code class="vardecl">fy</code>(<code class="vardecl">is</code>:<code class="vardecl">ie</code>, <code class="vardecl">js</code>:<code class="vardecl">je</code>+<code class="constant">1</code>)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">INTENT(OUT) </code>:: <code class="vardecl">fy_tl</code>(<code class="vardecl">is</code>:<code class="vardecl">ie</code>, <code class="vardecl">js</code>:<code class="vardecl">je</code>+<code class="constant">1</code>)</a>
<a href="null_p.html#tp_core_modi393" target="origFile"><code class="comment">! optional Arguments:</code></a>
<a name="fv_tp_2d_r4_tlmi394"></a><a href="null_p.html#tp_core_modi393" target="origFile"><code class="comment">! Mass Flux X-Dir</code></a>
    <a href="null_p.html#tp_core_modi393" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">OPTIONAL</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">mfx</code>(<code class="vardecl">is</code>:<code class="vardecl">ie</code>+<code class="constant">1</code>, <code class="vardecl">js</code>:<code class="vardecl">je</code>)</a>
<a name="fv_tp_2d_r4_tlmi395"></a><a href="null_p.html#tp_core_modi394" target="origFile"><code class="comment">! Mass Flux Y-Dir</code></a>
<a name="fv_tp_2d_r4_tlmi396"></a>    <a href="null_p.html#tp_core_modi394" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">OPTIONAL</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">mfy</code>(<code class="vardecl">is</code>:<code class="vardecl">ie</code>, <code class="vardecl">js</code>:<code class="vardecl">je</code>+<code class="constant">1</code>)</a>
<a name="fv_tp_2d_r4_tlmi397"></a>    <a href="null_p.html#tp_core_modi395" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">OPTIONAL</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">mass</code>(<code class="vardecl">isd</code>:<code class="vardecl">ied</code>, <code class="vardecl">jsd</code>:<code class="vardecl">jed</code>)</a>
<a name="fv_tp_2d_r4_tlmi398"></a>    <a href="null_p.html#tp_core_modi396" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">OPTIONAL</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">damp_c</code></a>
    <a href="null_p.html#tp_core_modi397" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">OPTIONAL</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">nord</code></a>
<a name="fv_tp_2d_r4_tlmi399"></a><a href="null_p.html#tp_core_modi398" target="origFile"><code class="comment">! Local:</code></a>
    <a href="null_p.html#tp_core_modi398" target="origFile"><code class="typename">INTEGER </code>:: <code class="vardecl">ord</code>, <code class="vardecl">ord_in</code></a>
<a name="fv_tp_2d_r4_tlmi400"></a>    <a href="null_p.html#tp_core_modi399" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">q_i</code>(<code class="vardecl">isd</code>:<code class="vardecl">ied</code>, <code class="vardecl">js</code>:<code class="vardecl">je</code>)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">q_i_tl</code>(<code class="vardecl">isd</code>:<code class="vardecl">ied</code>, <code class="vardecl">js</code>:<code class="vardecl">je</code>)</a>
<a name="fv_tp_2d_r4_tlmi401"></a>    <a href="null_p.html#tp_core_modi400" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">q_j</code>(<code class="vardecl">is</code>:<code class="vardecl">ie</code>, <code class="vardecl">jsd</code>:<code class="vardecl">jed</code>)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">q_j_tl</code>(<code class="vardecl">is</code>:<code class="vardecl">ie</code>, <code class="vardecl">jsd</code>:<code class="vardecl">jed</code>)</a>
<a name="fv_tp_2d_r4_tlmi402"></a>    <a href="null_p.html#tp_core_modi401" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">fx1</code>(<code class="vardecl">is</code>:<code class="vardecl">ie</code>+<code class="constant">1</code>, <code class="vardecl">js</code>:<code class="vardecl">je</code>)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">fx1_tl</code>(<code class="vardecl">is</code>:<code class="vardecl">ie</code>+<code class="constant">1</code>, <code class="vardecl">js</code>:<code class="vardecl">je</code>)</a>
<a name="fv_tp_2d_r4_tlmi403"></a>    <a href="null_p.html#tp_core_modi402" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">fy1</code>(<code class="vardecl">is</code>:<code class="vardecl">ie</code>, <code class="vardecl">js</code>:<code class="vardecl">je</code>+<code class="constant">1</code>)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">fy1_tl</code>(<code class="vardecl">is</code>:<code class="vardecl">ie</code>, <code class="vardecl">js</code>:<code class="vardecl">je</code>+<code class="constant">1</code>)</a>
<a name="fv_tp_2d_r4_tlmi404"></a>    <a href="null_p.html#tp_core_modi403" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">fx2</code>(<code class="vardecl">is</code>:<code class="vardecl">ie</code>+<code class="constant">1</code>, <code class="vardecl">jsd</code>:<code class="vardecl">jed</code>)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">fx2_tl</code>(<code class="vardecl">is</code>:<code class="vardecl">ie</code>+<code class="constant">1</code>, <code class="vardecl">jsd</code>:<code class="vardecl">jed</code>)</a>
<a name="fv_tp_2d_r4_tlmi405"></a>    <a href="null_p.html#tp_core_modi404" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">fy2</code>(<code class="vardecl">isd</code>:<code class="vardecl">ied</code>, <code class="vardecl">js</code>:<code class="vardecl">je</code>+<code class="constant">1</code>)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">fy2_tl</code>(<code class="vardecl">isd</code>:<code class="vardecl">ied</code>, <code class="vardecl">js</code>:<code class="vardecl">je</code>+<code class="constant">1</code>)</a>
<a name="fv_tp_2d_r4_tlmi406"></a>    <a href="null_p.html#tp_core_modi405" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">fyy</code>(<code class="vardecl">isd</code>:<code class="vardecl">ied</code>, <code class="vardecl">js</code>:<code class="vardecl">je</code>+<code class="constant">1</code>)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">fyy_tl</code>(<code class="vardecl">isd</code>:<code class="vardecl">ied</code>, <code class="vardecl">js</code>:<code class="vardecl">je</code>+<code class="constant">1</code>)</a>
<a name="fv_tp_2d_r4_tlmi407"></a>    <a href="null_p.html#tp_core_modi406" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">fxx</code>(<code class="vardecl">is</code>:<code class="vardecl">ie</code>+<code class="constant">1</code>)</a>
<a name="fv_tp_2d_r4_tlmi408"></a>    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">fxx_tl</code>(<code class="vardecl">is</code>:<code class="vardecl">ie</code>+<code class="constant">1</code>)</a>
<a name="fv_tp_2d_r4_tlmi409"></a>    <a href="null_p.html#tp_core_modi407" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">damp</code></a>
<a name="fv_tp_2d_r4_tlmi410"></a>    <a href="null_p.html#tp_core_modi408" target="origFile"><code class="typename">INTEGER </code>:: <code class="vardecl">i</code>, <code class="vardecl">j</code></a>
<a name="fv_tp_2d_r4_tlmi411"></a>    <a href="null_p.html#tp_core_modi409" target="origFile"><code class="keyword">INTRINSIC </code><code class="funcname">ABS</code></a>
<a name="fv_tp_2d_r4_tlmi412"></a>    <a href="null_p.html#tp_core_modi410" target="origFile"><code class="keyword">INTRINSIC </code><code class="funcname">PRESENT</code></a>
<a name="fv_tp_2d_r4_tlmi413"></a>    <a href="null_p.html#tp_core_modi411" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">pwx1</code></a>
<a name="fv_tp_2d_r4_tlmi414"></a>    <a href="null_p.html#tp_core_modi412" target="origFile"><code class="typename">INTEGER </code>:: <code class="vardecl">pwy1</code></a>
    <a href="null_p.html#tp_core_modi413" target="origFile"><code class="keyword">IF</code> (hord .LT. <code class="constant">0</code>) <code class="keyword">THEN</code></a>
<a name="fv_tp_2d_r4_tlmi415"></a><a href="null_p.html#tp_core_modi414" target="origFile"><code class="comment">! more dissipation</code></a>
<a name="fv_tp_2d_r4_tlmi416"></a>      <a href="null_p.html#tp_core_modi414" target="origFile">ord_in = <code class="constant">2</code></a>
      <a href="null_p.html#tp_core_modi415" target="origFile"><code class="keyword">IF</code> (hord .GE. <code class="constant">0.</code>) <code class="keyword">THEN</code></a>
<a name="fv_tp_2d_r4_tlmi417"></a>        <a href="null_p.html#tp_core_modi416" target="origFile">ord = hord</a>
      <a href="null_p.html#tp_core_modi415" target="origFile"><code class="keyword">ELSE</code></a>
        <a href="null_p.html#tp_core_modi417" target="origFile">ord = -hord</a>
<a name="fv_tp_2d_r4_tlmi418"></a>      <a href="null_p.html#tp_core_modi415" target="origFile"><code class="keyword">END IF</code></a>
<a name="fv_tp_2d_r4_tlmi419"></a>    <a href="null_p.html#tp_core_modi413" target="origFile"><code class="keyword">ELSE</code></a>
      <a href="null_p.html#tp_core_modi418" target="origFile">ord_in = hord</a>
<a name="fv_tp_2d_r4_tlmi420"></a>      <a href="null_p.html#tp_core_modi419" target="origFile">ord = hord</a>
<a name="fv_tp_2d_r4_tlmi421"></a>    <a href="null_p.html#tp_core_modi413" target="origFile"><code class="keyword">END IF</code></a>
<a name="p4"></a><a name="p3"></a><a name="p2"></a><a name="fv_tp_2d_r4_tlmi422"></a>    <a href="null_p.html#tp_core_modi420" target="origFile"><code class="keyword">CALL </code><code class="funcname">COPY_CORNERS_TLM</code>(q, q_tl, npx, npy, <code class="constant">2</code>)</a>
    <a href="null_p.html#tp_core_modi421" target="origFile"><code class="keyword">IF</code> (ord_in .LT. <code class="constant">0</code>) <code class="keyword">THEN</code></a>
      <a href="null_p.html#tp_core_modi422" target="origFile"><code class="keyword">CALL </code><code class="funcname">YPPM0_TLM</code>(</a><a href="msg.html#p2" target="msg"><code class="comment"><img src="danger.gif" align=middle border=0 alt="!" /></code></a><a href="null_p.html#tp_core_modi422" target="origFile">fy2, fy2_tl, </a><a href="msg.html#p3" target="msg"><code class="comment"><img src="danger.gif" align=middle border=0 alt="!" /></code></a><a href="null_p.html#tp_core_modi422" target="origFile">q, q_tl, </a><a href="msg.html#p4" target="msg"><code class="comment"><img src="danger.gif" align=middle border=0 alt="!" /></code></a><a href="null_p.html#tp_core_modi422" target="origFile">cry, ord_in, isd, ied, js, je<code class="label">&</code></a>
<a href="null_p.html#tp_core_modi422" target="origFile"><code class="label">&              </code>, npx, npy)</a>
<a name="fv_tp_2d_r4_tlmi423"></a>      <a href="null_p.html#tp_core_modi421" target="origFile">fyy_tl = <code class="constant">0.0_8</code></a>
    <a href="null_p.html#tp_core_modi421" target="origFile"><code class="keyword">ELSE</code></a>
      <a href="null_p.html#tp_core_modi423" target="origFile"><code class="keyword">CALL </code><code class="funcname">YTP_TLM</code>(fy2, fy2_tl, q, q_tl, cry, ord_in, isd, ied, js, je, <code class="label">&</code></a>
<a href="null_p.html#tp_core_modi423" target="origFile"><code class="label">&            </code>npx, npy)</a>
<a name="fv_tp_2d_r4_tlmi426"></a>      <a href="null_p.html#tp_core_modi421" target="origFile">fyy_tl = <code class="constant">0.0_8</code></a>
<a name="fv_tp_2d_r4_tlmi425"></a>    <a href="null_p.html#tp_core_modi421" target="origFile"><code class="keyword">END IF</code></a>
<a name="fv_tp_2d_r4_tlmi424"></a>    <a href="null_p.html#tp_core_modi426" target="origFile"><code class="keyword">DO </code>j=js,je+<code class="constant">1</code></a>
<a name="fv_tp_2d_r4_tlmi424"></a>      <a href="null_p.html#tp_core_modi425" target="origFile"><code class="keyword">DO </code>i=isd,ied</a>
        <a href="null_p.html#tp_core_modi424" target="origFile">fyy_tl(i, j) = yfx(i, j)*fy2_tl(i, j)</a>
        <a href="null_p.html#tp_core_modi424" target="origFile">fyy(i, j) = yfx(i, j)*fy2(i, j)</a>
      <a href="null_p.html#tp_core_modi425" target="origFile"><code class="keyword">END DO</code></a>
<a name="fv_tp_2d_r4_tlmi429"></a>    <a href="null_p.html#tp_core_modi426" target="origFile"><code class="keyword">END DO</code></a>
<a name="fv_tp_2d_r4_tlmi428"></a>    <a href="null_p.html#tp_core_mod" target="origFile">q_i_tl = <code class="constant">0.0_8</code></a>
<a name="fv_tp_2d_r4_tlmi427"></a>    <a href="null_p.html#tp_core_modi429" target="origFile"><code class="keyword">DO </code>j=js,je</a>
      <a href="null_p.html#tp_core_modi428" target="origFile"><code class="keyword">DO </code>i=isd,ied</a>
<a name="fv_tp_2d_r4_tlmi427"></a>        <a href="null_p.html#tp_core_modi427" target="origFile">q_i_tl(i, j) = (area(i, j)*q_tl(i, j)+fyy_tl(i, j)-fyy_tl(i, j+<code class="constant">1</code><code class="label">&</code></a>
<a href="null_p.html#tp_core_modi427" target="origFile"><code class="label">&         </code>))/ra_y(i, j)</a>
        <a href="null_p.html#tp_core_modi427" target="origFile">q_i(i, j) = (q(i, j)*area(i, j)+fyy(i, j)-fyy(i, j+<code class="constant">1</code>))/ra_y(i, j<code class="label">&</code></a>
<a href="null_p.html#tp_core_modi427" target="origFile"><code class="label">&         </code>)</a>
<a name="fv_tp_2d_r4_tlmi430"></a>      <a href="null_p.html#tp_core_modi428" target="origFile"><code class="keyword">END DO</code></a>
<a name="p7"></a><a name="p6"></a><a name="p5"></a><a name="fv_tp_2d_r4_tlmi431"></a>    <a href="null_p.html#tp_core_modi429" target="origFile"><code class="keyword">END DO</code></a>
    <a href="null_p.html#tp_core_modi430" target="origFile"><code class="keyword">IF</code> (ord .LT. <code class="constant">0</code>) <code class="keyword">THEN</code></a>
      <a href="null_p.html#tp_core_modi431" target="origFile"><code class="keyword">CALL </code><code class="funcname">XPPM0_TLM</code>(</a><a href="msg.html#p5" target="msg"><code class="comment"><img src="danger.gif" align=middle border=0 alt="!" /></code></a><a href="null_p.html#tp_core_modi431" target="origFile">fx1, fx1_tl, </a><a href="msg.html#p6" target="msg"><code class="comment"><img src="danger.gif" align=middle border=0 alt="!" /></code></a><a href="null_p.html#tp_core_modi431" target="origFile">q_i, q_i_tl, </a><a href="msg.html#p7" target="msg"><code class="comment"><img src="danger.gif" align=middle border=0 alt="!" /></code></a><a href="null_p.html#tp_core_modi431" target="origFile">crx(is, js), ord, is, ie<code class="label">&</code></a>
<a name="fv_tp_2d_r4_tlmi432"></a><a href="null_p.html#tp_core_modi431" target="origFile"><code class="label">&              </code>, js, je, npx, npy)</a>
    <a href="null_p.html#tp_core_modi430" target="origFile"><code class="keyword">ELSE</code></a>
      <a href="null_p.html#tp_core_modi432" target="origFile"><code class="keyword">CALL </code><code class="funcname">XTP_TLM</code>(fx1, fx1_tl, q_i, q_i_tl, crx(is, js), ord, is, ie, <code class="label">&</code></a>
<a name="fv_tp_2d_r4_tlmi433"></a><a href="null_p.html#tp_core_modi432" target="origFile"><code class="label">&            </code>js, je, npx, npy)</a>
<a name="fv_tp_2d_r4_tlmi434"></a>    <a href="null_p.html#tp_core_modi430" target="origFile"><code class="keyword">END IF</code></a>
<a name="p10"></a><a name="p9"></a><a name="p8"></a><a name="fv_tp_2d_r4_tlmi435"></a>    <a href="null_p.html#tp_core_modi433" target="origFile"><code class="keyword">CALL </code><code class="funcname">COPY_CORNERS_TLM</code>(q, q_tl, npx, npy, <code class="constant">1</code>)</a>
    <a href="null_p.html#tp_core_modi434" target="origFile"><code class="keyword">IF</code> (ord_in .LT. <code class="constant">0</code>) <code class="keyword">THEN</code></a>
      <a href="null_p.html#tp_core_modi435" target="origFile"><code class="keyword">CALL </code><code class="funcname">XPPM0_TLM</code>(</a><a href="msg.html#p8" target="msg"><code class="comment"><img src="danger.gif" align=middle border=0 alt="!" /></code></a><a href="null_p.html#tp_core_modi435" target="origFile">fx2, fx2_tl, </a><a href="msg.html#p9" target="msg"><code class="comment"><img src="danger.gif" align=middle border=0 alt="!" /></code></a><a href="null_p.html#tp_core_modi435" target="origFile">q, q_tl, </a><a href="msg.html#p10" target="msg"><code class="comment"><img src="danger.gif" align=middle border=0 alt="!" /></code></a><a href="null_p.html#tp_core_modi435" target="origFile">crx, ord_in, is, ie, jsd, jed<code class="label">&</code></a>
<a href="null_p.html#tp_core_modi435" target="origFile"><code class="label">&              </code>, npx, npy)</a>
      <a href="null_p.html#tp_core_modi434" target="origFile">q_j_tl = <code class="constant">0.0_8</code></a>
<a name="fv_tp_2d_r4_tlmi436"></a>      <a href="null_p.html#tp_core_modi434" target="origFile">fxx_tl = <code class="constant">0.0_8</code></a>
    <a href="null_p.html#tp_core_modi434" target="origFile"><code class="keyword">ELSE</code></a>
      <a href="null_p.html#tp_core_modi436" target="origFile"><code class="keyword">CALL </code><code class="funcname">XTP_TLM</code>(fx2, fx2_tl, q, q_tl, crx, ord_in, is, ie, jsd, jed, <code class="label">&</code></a>
<a href="null_p.html#tp_core_modi436" target="origFile"><code class="label">&            </code>npx, npy)</a>
      <a href="null_p.html#tp_core_modi434" target="origFile">q_j_tl = <code class="constant">0.0_8</code></a>
<a name="fv_tp_2d_r4_tlmi441"></a>      <a href="null_p.html#tp_core_modi434" target="origFile">fxx_tl = <code class="constant">0.0_8</code></a>
<a name="fv_tp_2d_r4_tlmi438"></a>    <a href="null_p.html#tp_core_modi434" target="origFile"><code class="keyword">END IF</code></a>
<a name="fv_tp_2d_r4_tlmi437"></a>    <a href="null_p.html#tp_core_modi441" target="origFile"><code class="keyword">DO </code>j=jsd,jed</a>
<a name="fv_tp_2d_r4_tlmi437"></a>      <a href="null_p.html#tp_core_modi438" target="origFile"><code class="keyword">DO </code>i=is,ie+<code class="constant">1</code></a>
        <a href="null_p.html#tp_core_modi437" target="origFile">fxx_tl(i) = xfx(i, j)*fx2_tl(i, j)</a>
<a name="fv_tp_2d_r4_tlmi440"></a>        <a href="null_p.html#tp_core_modi437" target="origFile">fxx(i) = xfx(i, j)*fx2(i, j)</a>
<a name="fv_tp_2d_r4_tlmi439"></a>      <a href="null_p.html#tp_core_modi438" target="origFile"><code class="keyword">END DO</code></a>
      <a href="null_p.html#tp_core_modi440" target="origFile"><code class="keyword">DO </code>i=is,ie</a>
<a name="fv_tp_2d_r4_tlmi439"></a>        <a href="null_p.html#tp_core_modi439" target="origFile">q_j_tl(i, j) = (area(i, j)*q_tl(i, j)+fxx_tl(i)-fxx_tl(i+<code class="constant">1</code>))/<code class="label">&</code></a>
<a href="null_p.html#tp_core_modi439" target="origFile"><code class="label">&         </code>ra_x(i, j)</a>
        <a href="null_p.html#tp_core_modi439" target="origFile">q_j(i, j) = (q(i, j)*area(i, j)+fxx(i)-fxx(i+<code class="constant">1</code>))/ra_x(i, j)</a>
<a name="fv_tp_2d_r4_tlmi442"></a>      <a href="null_p.html#tp_core_modi440" target="origFile"><code class="keyword">END DO</code></a>
<a name="p13"></a><a name="p12"></a><a name="p11"></a><a name="fv_tp_2d_r4_tlmi443"></a>    <a href="null_p.html#tp_core_modi441" target="origFile"><code class="keyword">END DO</code></a>
    <a href="null_p.html#tp_core_modi442" target="origFile"><code class="keyword">IF</code> (ord .LT. <code class="constant">0</code>) <code class="keyword">THEN</code></a>
      <a href="null_p.html#tp_core_modi443" target="origFile"><code class="keyword">CALL </code><code class="funcname">YPPM0_TLM</code>(</a><a href="msg.html#p11" target="msg"><code class="comment"><img src="danger.gif" align=middle border=0 alt="!" /></code></a><a href="null_p.html#tp_core_modi443" target="origFile">fy1, fy1_tl, </a><a href="msg.html#p12" target="msg"><code class="comment"><img src="danger.gif" align=middle border=0 alt="!" /></code></a><a href="null_p.html#tp_core_modi443" target="origFile">q_j, q_j_tl, </a><a href="msg.html#p13" target="msg"><code class="comment"><img src="danger.gif" align=middle border=0 alt="!" /></code></a><a href="null_p.html#tp_core_modi443" target="origFile">cry, ord, is, ie, js, je<code class="label">&</code></a>
<a name="fv_tp_2d_r4_tlmi444"></a><a href="null_p.html#tp_core_modi443" target="origFile"><code class="label">&              </code>, npx, npy)</a>
    <a href="null_p.html#tp_core_modi442" target="origFile"><code class="keyword">ELSE</code></a>
      <a href="null_p.html#tp_core_modi444" target="origFile"><code class="keyword">CALL </code><code class="funcname">YTP_TLM</code>(fy1, fy1_tl, q_j, q_j_tl, cry, ord, is, ie, js, je, <code class="label">&</code></a>
<a name="fv_tp_2d_r4_tlmi445"></a><a href="null_p.html#tp_core_modi444" target="origFile"><code class="label">&            </code>npx, npy)</a>
    <a href="null_p.html#tp_core_modi442" target="origFile"><code class="keyword">END IF</code></a>
<a href="null_p.html#tp_core_modi445" target="origFile"><code class="comment">!----------------</code></a>
<a href="null_p.html#tp_core_modi445" target="origFile"><code class="comment">! Flux averaging:</code></a>
<a name="fv_tp_2d_r4_tlmi448"></a><a href="null_p.html#tp_core_modi445" target="origFile"><code class="comment">!----------------</code></a>
    <a href="null_p.html#tp_core_modi445" target="origFile"><code class="keyword">IF</code> (<code class="funcname">PRESENT</code>(mfx) .AND. <code class="funcname">PRESENT</code>(mfy)) <code class="keyword">THEN</code></a>
<a href="null_p.html#tp_core_modi448" target="origFile"><code class="comment">!---------------------------------</code></a>
<a href="null_p.html#tp_core_modi448" target="origFile"><code class="comment">! For transport of pt and tracers</code></a>
<a name="fv_tp_2d_r4_tlmi447"></a><a href="null_p.html#tp_core_modi448" target="origFile"><code class="comment">!---------------------------------</code></a>
<a name="fv_tp_2d_r4_tlmi446"></a>      <a href="null_p.html#tp_core_modi448" target="origFile"><code class="keyword">DO </code>j=js,je</a>
<a name="fv_tp_2d_r4_tlmi446"></a>        <a href="null_p.html#tp_core_modi447" target="origFile"><code class="keyword">DO </code>i=is,ie+<code class="constant">1</code></a>
          <a href="null_p.html#tp_core_modi446" target="origFile">fx_tl(i, j) = <code class="constant">0.5</code>*mfx(i, j)*(fx1_tl(i, j)+fx2_tl(i, j))</a>
          <a href="null_p.html#tp_core_modi446" target="origFile">fx(i, j) = <code class="constant">0.5</code>*(fx1(i, j)+fx2(i, j))*mfx(i, j)</a>
<a name="fv_tp_2d_r4_tlmi451"></a>        <a href="null_p.html#tp_core_modi447" target="origFile"><code class="keyword">END DO</code></a>
<a name="fv_tp_2d_r4_tlmi450"></a>      <a href="null_p.html#tp_core_modi448" target="origFile"><code class="keyword">END DO</code></a>
<a name="fv_tp_2d_r4_tlmi449"></a>      <a href="null_p.html#tp_core_modi451" target="origFile"><code class="keyword">DO </code>j=js,je+<code class="constant">1</code></a>
<a name="fv_tp_2d_r4_tlmi449"></a>        <a href="null_p.html#tp_core_modi450" target="origFile"><code class="keyword">DO </code>i=is,ie</a>
          <a href="null_p.html#tp_core_modi449" target="origFile">fy_tl(i, j) = <code class="constant">0.5</code>*mfy(i, j)*(fy1_tl(i, j)+fy2_tl(i, j))</a>
          <a href="null_p.html#tp_core_modi449" target="origFile">fy(i, j) = <code class="constant">0.5</code>*(fy1(i, j)+fy2(i, j))*mfy(i, j)</a>
<a name="fv_tp_2d_r4_tlmi452"></a>        <a href="null_p.html#tp_core_modi450" target="origFile"><code class="keyword">END DO</code></a>
<a name="fv_tp_2d_r4_tlmi453"></a>      <a href="null_p.html#tp_core_modi451" target="origFile"><code class="keyword">END DO</code></a>
<a name="fv_tp_2d_r4_tlmi454"></a>      <a href="null_p.html#tp_core_modi452" target="origFile"><code class="keyword">IF</code> (<code class="funcname">PRESENT</code>(nord) .AND. <code class="funcname">PRESENT</code>(damp_c) .AND. <code class="funcname">PRESENT</code>(mass)) <code class="keyword">THEN</code></a>
<a name="fv_tp_2d_r4_tlmi455"></a>        <a href="null_p.html#tp_core_modi453" target="origFile"><code class="keyword">IF</code> (damp_c .GT. <code class="constant">1.e-4</code>) <code class="keyword">THEN</code></a>
<a name="fv_tp_2d_r4_tlmi456"></a>          <a href="null_p.html#tp_core_modi454" target="origFile">pwx1 = damp_c*da_min</a>
<a name="fv_tp_2d_r4_tlmi457"></a>          <a href="null_p.html#tp_core_modi455" target="origFile">pwy1 = nord + <code class="constant">1</code></a>
          <a href="null_p.html#tp_core_modi456" target="origFile">damp = pwx1**pwy1</a>
          <a href="null_p.html#tp_core_modi457" target="origFile"><code class="keyword">CALL </code><code class="funcname">DELN_FLUX_TLM</code>(nord, npx, npy, damp, q, q_tl, fx, fx_tl, <code class="label">&</code></a>
<a href="null_p.html#tp_core_modi457" target="origFile"><code class="label">&                      </code>fy, fy_tl, mass)</a>
        <a href="null_p.html#tp_core_modi453" target="origFile"><code class="keyword">END IF</code></a>
<a name="fv_tp_2d_r4_tlmi460"></a>      <a href="null_p.html#tp_core_modi452" target="origFile"><code class="keyword">END IF</code></a>
    <a href="null_p.html#tp_core_modi445" target="origFile"><code class="keyword">ELSE</code></a>
<a href="null_p.html#tp_core_modi460" target="origFile"><code class="comment">!---------------------------------</code></a>
<a href="null_p.html#tp_core_modi460" target="origFile"><code class="comment">! For transport of delp, vorticity</code></a>
<a name="fv_tp_2d_r4_tlmi459"></a><a href="null_p.html#tp_core_modi460" target="origFile"><code class="comment">!---------------------------------</code></a>
<a name="fv_tp_2d_r4_tlmi458"></a>      <a href="null_p.html#tp_core_modi460" target="origFile"><code class="keyword">DO </code>j=js,je</a>
<a name="fv_tp_2d_r4_tlmi458"></a>        <a href="null_p.html#tp_core_modi459" target="origFile"><code class="keyword">DO </code>i=is,ie+<code class="constant">1</code></a>
          <a href="null_p.html#tp_core_modi458" target="origFile">fx_tl(i, j) = <code class="constant">0.5</code>*xfx(i, j)*(fx1_tl(i, j)+fx2_tl(i, j))</a>
          <a href="null_p.html#tp_core_modi458" target="origFile">fx(i, j) = <code class="constant">0.5</code>*(fx1(i, j)+fx2(i, j))*xfx(i, j)</a>
<a name="fv_tp_2d_r4_tlmi463"></a>        <a href="null_p.html#tp_core_modi459" target="origFile"><code class="keyword">END DO</code></a>
<a name="fv_tp_2d_r4_tlmi462"></a>      <a href="null_p.html#tp_core_modi460" target="origFile"><code class="keyword">END DO</code></a>
<a name="fv_tp_2d_r4_tlmi461"></a>      <a href="null_p.html#tp_core_modi463" target="origFile"><code class="keyword">DO </code>j=js,je+<code class="constant">1</code></a>
<a name="fv_tp_2d_r4_tlmi461"></a>        <a href="null_p.html#tp_core_modi462" target="origFile"><code class="keyword">DO </code>i=is,ie</a>
          <a href="null_p.html#tp_core_modi461" target="origFile">fy_tl(i, j) = <code class="constant">0.5</code>*yfx(i, j)*(fy1_tl(i, j)+fy2_tl(i, j))</a>
          <a href="null_p.html#tp_core_modi461" target="origFile">fy(i, j) = <code class="constant">0.5</code>*(fy1(i, j)+fy2(i, j))*yfx(i, j)</a>
<a name="fv_tp_2d_r4_tlmi464"></a>        <a href="null_p.html#tp_core_modi462" target="origFile"><code class="keyword">END DO</code></a>
<a name="fv_tp_2d_r4_tlmi465"></a>      <a href="null_p.html#tp_core_modi463" target="origFile"><code class="keyword">END DO</code></a>
<a name="fv_tp_2d_r4_tlmi466"></a>      <a href="null_p.html#tp_core_modi464" target="origFile"><code class="keyword">IF</code> (<code class="funcname">PRESENT</code>(nord) .AND. <code class="funcname">PRESENT</code>(damp_c)) <code class="keyword">THEN</code></a>
<a name="fv_tp_2d_r4_tlmi467"></a>        <a href="null_p.html#tp_core_modi465" target="origFile"><code class="keyword">IF</code> (damp_c .GT. <code class="constant">1.e-4</code>) <code class="keyword">THEN</code></a>
<a name="fv_tp_2d_r4_tlmi468"></a>          <a href="null_p.html#tp_core_modi466" target="origFile">pwx1 = damp_c*da_min</a>
<a name="fv_tp_2d_r4_tlmi469"></a>          <a href="null_p.html#tp_core_modi467" target="origFile">pwy1 = nord + <code class="constant">1</code></a>
          <a href="null_p.html#tp_core_modi468" target="origFile">damp = pwx1**pwy1</a>
          <a href="null_p.html#tp_core_modi469" target="origFile"><code class="keyword">CALL </code><code class="funcname">DELN_FLUX_TLM</code>(nord, npx, npy, damp, q, q_tl, fx, fx_tl, <code class="label">&</code></a>
<a href="null_p.html#tp_core_modi469" target="origFile"><code class="label">&                      </code>fy, fy_tl)</a>
        <a href="null_p.html#tp_core_modi465" target="origFile"><code class="keyword">END IF</code></a>
      <a href="null_p.html#tp_core_modi464" target="origFile"><code class="keyword">END IF</code></a>
<a name="fv_tp_2d_r4"></a>    <a href="null_p.html#tp_core_modi445" target="origFile"><code class="keyword">END IF</code></a>
  <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END SUBROUTINE </code><code class="funcname">FV_TP_2D_R4_TLM</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! !DESCRIPTION:</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! !REVISION HISTORY:</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!EOP</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!-----------------------------------------------------------------------</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!#ifdef SINGLE_FV</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! subroutine fv_tp_2d_r8(qIN, crx, cry, npx, npy, hord, fx, fy, xfx, yfx,  &</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!                     ra_x, ra_y, mfx, mfy, mass, nord, damp_c)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!   integer, intent(in):: npx, npy</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!   integer, intent(in)::hord</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!   real(FVPRC), intent(in)::  crx(is:ie+1,jsd:jed)  !</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!   real(FVPRC), intent(in)::  xfx(is:ie+1,jsd:jed)  !</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!   real(FVPRC), intent(in)::  cry(isd:ied,js:je+1 )  !</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!   real(FVPRC), intent(in)::  yfx(isd:ied,js:je+1 )  !</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!   real(FVPRC), intent(in):: ra_x(is:ie,jsd:jed)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!   real(FVPRC), intent(in):: ra_y(isd:ied,js:je)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!   real(REAL8), intent(in)::  qIN(isd:ied,jsd:jed)  ! transported scalar</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!   real(FVPRC), intent(out)::fx(is:ie+1 ,js:je)    ! Flux in x ( E )</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!   real(FVPRC), intent(out)::fy(is:ie,   js:je+1 )    ! Flux in y ( N )</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!! optional Arguments:</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!   real(FVPRC), OPTIONAL, intent(in):: mfx(is:ie+1,js:je  )  ! Mass Flux X-Dir</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!   real(FVPRC), OPTIONAL, intent(in):: mfy(is:ie  ,js:je+1)  ! Mass Flux Y-Dir</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!   real(FVPRC), OPTIONAL, intent(in):: mass(isd:ied,jsd:jed)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!   real(FVPRC), OPTIONAL, intent(in):: damp_c</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!   integer, OPTIONAL, intent(in):: nord</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!! Local:</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!   real(FVPRC)   q(isd:ied,jsd:jed)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!   q = CNVT(qIN)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!   call fv_tp_2d(q, crx, cry, npx, npy, hord, fx, fy, xfx, yfx,  &</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!                     ra_x, ra_y, mfx=mfx, mfy=mfy, mass=mass, nord=nord, damp_c=damp_c)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! end subroutine fv_tp_2d_r8</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!#endif</code></a>
  <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">SUBROUTINE </code><code class="funcname">FV_TP_2D_R4</code>(<code class="vardecl">q</code>, <code class="vardecl">crx</code>, <code class="vardecl">cry</code>, <code class="vardecl">npx</code>, <code class="vardecl">npy</code>, <code class="vardecl">hord</code>, <code class="vardecl">fx</code>, <code class="vardecl">fy</code>, <code class="vardecl">xfx</code>, <code class="vardecl">yfx</code>, <code class="label">&</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="label">&   </code><code class="vardecl">ra_x</code>, <code class="vardecl">ra_y</code>, <code class="vardecl">mfx</code>, <code class="vardecl">mfy</code>, <code class="vardecl">mass</code>, <code class="vardecl">nord</code>, <code class="vardecl">damp_c</code>)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IMPLICIT NONE</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">npx</code>, <code class="vardecl">npy</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">hord</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">crx</code>(<code class="vardecl">is</code>:<code class="vardecl">ie</code>+<code class="constant">1</code>, <code class="vardecl">jsd</code>:<code class="vardecl">jed</code>)</a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">xfx</code>(<code class="vardecl">is</code>:<code class="vardecl">ie</code>+<code class="constant">1</code>, <code class="vardecl">jsd</code>:<code class="vardecl">jed</code>)</a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">cry</code>(<code class="vardecl">isd</code>:<code class="vardecl">ied</code>, <code class="vardecl">js</code>:<code class="vardecl">je</code>+<code class="constant">1</code>)</a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">yfx</code>(<code class="vardecl">isd</code>:<code class="vardecl">ied</code>, <code class="vardecl">js</code>:<code class="vardecl">je</code>+<code class="constant">1</code>)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">ra_x</code>(<code class="vardecl">is</code>:<code class="vardecl">ie</code>, <code class="vardecl">jsd</code>:<code class="vardecl">jed</code>)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">ra_y</code>(<code class="vardecl">isd</code>:<code class="vardecl">ied</code>, <code class="vardecl">js</code>:<code class="vardecl">je</code>)</a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! transported scalar</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">INTENT(INOUT) </code>:: <code class="vardecl">q</code>(<code class="vardecl">isd</code>:<code class="vardecl">ied</code>, <code class="vardecl">jsd</code>:<code class="vardecl">jed</code>)</a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! Flux in x ( E )</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">INTENT(OUT) </code>:: <code class="vardecl">fx</code>(<code class="vardecl">is</code>:<code class="vardecl">ie</code>+<code class="constant">1</code>, <code class="vardecl">js</code>:<code class="vardecl">je</code>)</a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! Flux in y ( N )</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">INTENT(OUT) </code>:: <code class="vardecl">fy</code>(<code class="vardecl">is</code>:<code class="vardecl">ie</code>, <code class="vardecl">js</code>:<code class="vardecl">je</code>+<code class="constant">1</code>)</a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! optional Arguments:</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! Mass Flux X-Dir</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">OPTIONAL</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">mfx</code>(<code class="vardecl">is</code>:<code class="vardecl">ie</code>+<code class="constant">1</code>, <code class="vardecl">js</code>:<code class="vardecl">je</code>)</a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! Mass Flux Y-Dir</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">OPTIONAL</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">mfy</code>(<code class="vardecl">is</code>:<code class="vardecl">ie</code>, <code class="vardecl">js</code>:<code class="vardecl">je</code>+<code class="constant">1</code>)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">OPTIONAL</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">mass</code>(<code class="vardecl">isd</code>:<code class="vardecl">ied</code>, <code class="vardecl">jsd</code>:<code class="vardecl">jed</code>)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">OPTIONAL</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">damp_c</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">OPTIONAL</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">nord</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! Local:</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">INTEGER </code>:: <code class="vardecl">ord</code>, <code class="vardecl">ord_in</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">q_i</code>(<code class="vardecl">isd</code>:<code class="vardecl">ied</code>, <code class="vardecl">js</code>:<code class="vardecl">je</code>)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">q_j</code>(<code class="vardecl">is</code>:<code class="vardecl">ie</code>, <code class="vardecl">jsd</code>:<code class="vardecl">jed</code>)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">fx1</code>(<code class="vardecl">is</code>:<code class="vardecl">ie</code>+<code class="constant">1</code>, <code class="vardecl">js</code>:<code class="vardecl">je</code>)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">fy1</code>(<code class="vardecl">is</code>:<code class="vardecl">ie</code>, <code class="vardecl">js</code>:<code class="vardecl">je</code>+<code class="constant">1</code>)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">fx2</code>(<code class="vardecl">is</code>:<code class="vardecl">ie</code>+<code class="constant">1</code>, <code class="vardecl">jsd</code>:<code class="vardecl">jed</code>)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">fy2</code>(<code class="vardecl">isd</code>:<code class="vardecl">ied</code>, <code class="vardecl">js</code>:<code class="vardecl">je</code>+<code class="constant">1</code>)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">fyy</code>(<code class="vardecl">isd</code>:<code class="vardecl">ied</code>, <code class="vardecl">js</code>:<code class="vardecl">je</code>+<code class="constant">1</code>)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">fxx</code>(<code class="vardecl">is</code>:<code class="vardecl">ie</code>+<code class="constant">1</code>)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">damp</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">INTEGER </code>:: <code class="vardecl">i</code>, <code class="vardecl">j</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">INTRINSIC </code><code class="funcname">ABS</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">INTRINSIC </code><code class="funcname">PRESENT</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">pwx1</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">INTEGER </code>:: <code class="vardecl">pwy1</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IF</code> (hord .LT. <code class="constant">0</code>) <code class="keyword">THEN</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! more dissipation</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile">ord_in = <code class="constant">2</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IF</code> (hord .GE. <code class="constant">0.</code>) <code class="keyword">THEN</code></a>
        <a href="null_p.html#tp_core_mod" target="origFile">ord = hord</a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">ELSE</code></a>
        <a href="null_p.html#tp_core_mod" target="origFile">ord = -hord</a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END IF</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">ELSE</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile">ord_in = hord</a>
      <a href="null_p.html#tp_core_mod" target="origFile">ord = hord</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END IF</code></a>
<a name="p4"></a><a name="p3"></a><a name="p2"></a>    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">CALL </code><code class="funcname">COPY_CORNERS</code>(q, npx, npy, <code class="constant">2</code>)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IF</code> (ord_in .LT. <code class="constant">0</code>) <code class="keyword">THEN</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">CALL </code><code class="funcname">YPPM0</code>(</a><a href="msg.html#p2" target="msg"><code class="comment"><img src="danger.gif" align=middle border=0 alt="!" /></code></a><a href="null_p.html#tp_core_mod" target="origFile">fy2, </a><a href="msg.html#p3" target="msg"><code class="comment"><img src="danger.gif" align=middle border=0 alt="!" /></code></a><a href="null_p.html#tp_core_mod" target="origFile">q, </a><a href="msg.html#p4" target="msg"><code class="comment"><img src="danger.gif" align=middle border=0 alt="!" /></code></a><a href="null_p.html#tp_core_mod" target="origFile">cry, ord_in, isd, ied, js, je, npx, npy)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">ELSE</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">CALL </code><code class="funcname">YTP</code>(fy2, q, cry, ord_in, isd, ied, js, je, npx, npy)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END IF</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>j=js,je+<code class="constant">1</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>i=isd,ied</a>
        <a href="null_p.html#tp_core_mod" target="origFile">fyy(i, j) = yfx(i, j)*fy2(i, j)</a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>j=js,je</a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>i=isd,ied</a>
        <a href="null_p.html#tp_core_mod" target="origFile">q_i(i, j) = (q(i, j)*area(i, j)+fyy(i, j)-fyy(i, j+<code class="constant">1</code>))/ra_y(i, j<code class="label">&</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="label">&         </code>)</a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
<a name="p7"></a><a name="p6"></a><a name="p5"></a>    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IF</code> (ord .LT. <code class="constant">0</code>) <code class="keyword">THEN</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">CALL </code><code class="funcname">XPPM0</code>(</a><a href="msg.html#p5" target="msg"><code class="comment"><img src="danger.gif" align=middle border=0 alt="!" /></code></a><a href="null_p.html#tp_core_mod" target="origFile">fx1, </a><a href="msg.html#p6" target="msg"><code class="comment"><img src="danger.gif" align=middle border=0 alt="!" /></code></a><a href="null_p.html#tp_core_mod" target="origFile">q_i, </a><a href="msg.html#p7" target="msg"><code class="comment"><img src="danger.gif" align=middle border=0 alt="!" /></code></a><a href="null_p.html#tp_core_mod" target="origFile">crx(is, js), ord, is, ie, js, je, npx, npy)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">ELSE</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">CALL </code><code class="funcname">XTP</code>(fx1, q_i, crx(is, js), ord, is, ie, js, je, npx, npy)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END IF</code></a>
<a name="p10"></a><a name="p9"></a><a name="p8"></a>    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">CALL </code><code class="funcname">COPY_CORNERS</code>(q, npx, npy, <code class="constant">1</code>)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IF</code> (ord_in .LT. <code class="constant">0</code>) <code class="keyword">THEN</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">CALL </code><code class="funcname">XPPM0</code>(</a><a href="msg.html#p8" target="msg"><code class="comment"><img src="danger.gif" align=middle border=0 alt="!" /></code></a><a href="null_p.html#tp_core_mod" target="origFile">fx2, </a><a href="msg.html#p9" target="msg"><code class="comment"><img src="danger.gif" align=middle border=0 alt="!" /></code></a><a href="null_p.html#tp_core_mod" target="origFile">q, </a><a href="msg.html#p10" target="msg"><code class="comment"><img src="danger.gif" align=middle border=0 alt="!" /></code></a><a href="null_p.html#tp_core_mod" target="origFile">crx, ord_in, is, ie, jsd, jed, npx, npy)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">ELSE</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">CALL </code><code class="funcname">XTP</code>(fx2, q, crx, ord_in, is, ie, jsd, jed, npx, npy)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END IF</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>j=jsd,jed</a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>i=is,ie+<code class="constant">1</code></a>
        <a href="null_p.html#tp_core_mod" target="origFile">fxx(i) = xfx(i, j)*fx2(i, j)</a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>i=is,ie</a>
        <a href="null_p.html#tp_core_mod" target="origFile">q_j(i, j) = (q(i, j)*area(i, j)+fxx(i)-fxx(i+<code class="constant">1</code>))/ra_x(i, j)</a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
<a name="p13"></a><a name="p12"></a><a name="p11"></a>    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IF</code> (ord .LT. <code class="constant">0</code>) <code class="keyword">THEN</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">CALL </code><code class="funcname">YPPM0</code>(</a><a href="msg.html#p11" target="msg"><code class="comment"><img src="danger.gif" align=middle border=0 alt="!" /></code></a><a href="null_p.html#tp_core_mod" target="origFile">fy1, </a><a href="msg.html#p12" target="msg"><code class="comment"><img src="danger.gif" align=middle border=0 alt="!" /></code></a><a href="null_p.html#tp_core_mod" target="origFile">q_j, </a><a href="msg.html#p13" target="msg"><code class="comment"><img src="danger.gif" align=middle border=0 alt="!" /></code></a><a href="null_p.html#tp_core_mod" target="origFile">cry, ord, is, ie, js, je, npx, npy)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">ELSE</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">CALL </code><code class="funcname">YTP</code>(fy1, q_j, cry, ord, is, ie, js, je, npx, npy)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END IF</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!----------------</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! Flux averaging:</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!----------------</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IF</code> (<code class="funcname">PRESENT</code>(mfx) .AND. <code class="funcname">PRESENT</code>(mfy)) <code class="keyword">THEN</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!---------------------------------</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! For transport of pt and tracers</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!---------------------------------</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>j=js,je</a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>i=is,ie+<code class="constant">1</code></a>
          <a href="null_p.html#tp_core_mod" target="origFile">fx(i, j) = <code class="constant">0.5</code>*(fx1(i, j)+fx2(i, j))*mfx(i, j)</a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>j=js,je+<code class="constant">1</code></a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>i=is,ie</a>
          <a href="null_p.html#tp_core_mod" target="origFile">fy(i, j) = <code class="constant">0.5</code>*(fy1(i, j)+fy2(i, j))*mfy(i, j)</a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IF</code> (<code class="funcname">PRESENT</code>(nord) .AND. <code class="funcname">PRESENT</code>(damp_c) .AND. <code class="funcname">PRESENT</code>(mass)) <code class="keyword">THEN</code></a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IF</code> (damp_c .GT. <code class="constant">1.e-4</code>) <code class="keyword">THEN</code></a>
          <a href="null_p.html#tp_core_mod" target="origFile">pwx1 = damp_c*da_min</a>
          <a href="null_p.html#tp_core_mod" target="origFile">pwy1 = nord + <code class="constant">1</code></a>
          <a href="null_p.html#tp_core_mod" target="origFile">damp = pwx1**pwy1</a>
          <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">CALL </code><code class="funcname">DELN_FLUX</code>(nord, npx, npy, damp, q, fx, fy, mass)</a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END IF</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END IF</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">ELSE</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!---------------------------------</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! For transport of delp, vorticity</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!---------------------------------</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>j=js,je</a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>i=is,ie+<code class="constant">1</code></a>
          <a href="null_p.html#tp_core_mod" target="origFile">fx(i, j) = <code class="constant">0.5</code>*(fx1(i, j)+fx2(i, j))*xfx(i, j)</a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>j=js,je+<code class="constant">1</code></a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>i=is,ie</a>
          <a href="null_p.html#tp_core_mod" target="origFile">fy(i, j) = <code class="constant">0.5</code>*(fy1(i, j)+fy2(i, j))*yfx(i, j)</a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IF</code> (<code class="funcname">PRESENT</code>(nord) .AND. <code class="funcname">PRESENT</code>(damp_c)) <code class="keyword">THEN</code></a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IF</code> (damp_c .GT. <code class="constant">1.e-4</code>) <code class="keyword">THEN</code></a>
          <a href="null_p.html#tp_core_mod" target="origFile">pwx1 = damp_c*da_min</a>
          <a href="null_p.html#tp_core_mod" target="origFile">pwy1 = nord + <code class="constant">1</code></a>
          <a href="null_p.html#tp_core_mod" target="origFile">damp = pwx1**pwy1</a>
          <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">CALL </code><code class="funcname">DELN_FLUX</code>(nord, npx, npy, damp, q, fx, fy)</a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END IF</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END IF</code></a>
<a name="copy_corners_r4"></a>    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END IF</code></a>
  <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END SUBROUTINE </code><code class="funcname">FV_TP_2D_R4</code></a>
  <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">SUBROUTINE </code><code class="funcname">COPY_CORNERS_R4</code>(<code class="vardecl">q</code>, <code class="vardecl">npx</code>, <code class="vardecl">npy</code>, <code class="vardecl">dir</code>)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IMPLICIT NONE</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">npx</code>, <code class="vardecl">npy</code>, <code class="vardecl">dir</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">real4</code><code class="typename">)</code>, <code class="typename">INTENT(INOUT) </code>:: <code class="vardecl">q</code>(<code class="vardecl">isd</code>:<code class="vardecl">ied</code>, <code class="vardecl">jsd</code>:<code class="vardecl">jed</code>)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">INTEGER </code>:: <code class="vardecl">i</code>, <code class="vardecl">j</code></a>
<a name="p14"></a>    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IF</code> (dir .EQ. <code class="constant">1</code>) <code class="keyword">THEN</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! XDir:</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IF</code> (</a><a href="msg.html#p14" target="msg"><code class="comment"><img src="danger.gif" align=middle border=0 alt="!" /></code></a><a href="null_p.html#tp_core_mod" target="origFile">sw_corner) <code class="keyword">THEN</code></a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>j=<code class="constant">1</code>-ng,<code class="constant">0</code></a>
          <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>i=<code class="constant">1</code>-ng,<code class="constant">0</code></a>
            <a href="null_p.html#tp_core_mod" target="origFile">q(i, j) = q(j, <code class="constant">1</code>-i)</a>
          <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
<a name="p15"></a>        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END IF</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IF</code> (</a><a href="msg.html#p15" target="msg"><code class="comment"><img src="danger.gif" align=middle border=0 alt="!" /></code></a><a href="null_p.html#tp_core_mod" target="origFile">se_corner) <code class="keyword">THEN</code></a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>j=<code class="constant">1</code>-ng,<code class="constant">0</code></a>
          <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>i=npx,npx+ng-<code class="constant">1</code></a>
            <a href="null_p.html#tp_core_mod" target="origFile">q(i, j) = q(npy-j, i-npx+<code class="constant">1</code>)</a>
          <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
<a name="p16"></a>        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END IF</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IF</code> (</a><a href="msg.html#p16" target="msg"><code class="comment"><img src="danger.gif" align=middle border=0 alt="!" /></code></a><a href="null_p.html#tp_core_mod" target="origFile">ne_corner) <code class="keyword">THEN</code></a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>j=npy,npy+ng-<code class="constant">1</code></a>
          <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>i=npx,npx+ng-<code class="constant">1</code></a>
            <a href="null_p.html#tp_core_mod" target="origFile">q(i, j) = q(j, <code class="constant">2</code>*npx-<code class="constant">1</code>-i)</a>
          <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
<a name="p17"></a>        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END IF</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IF</code> (</a><a href="msg.html#p17" target="msg"><code class="comment"><img src="danger.gif" align=middle border=0 alt="!" /></code></a><a href="null_p.html#tp_core_mod" target="origFile">nw_corner) <code class="keyword">THEN</code></a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>j=npy,npy+ng-<code class="constant">1</code></a>
          <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>i=<code class="constant">1</code>-ng,<code class="constant">0</code></a>
            <a href="null_p.html#tp_core_mod" target="origFile">q(i, j) = q(npy-j, i-<code class="constant">1</code>+npx)</a>
          <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END IF</code></a>
<a name="p18"></a>    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">ELSE IF</code> (dir .EQ. <code class="constant">2</code>) <code class="keyword">THEN</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! YDir:</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IF</code> (</a><a href="msg.html#p18" target="msg"><code class="comment"><img src="danger.gif" align=middle border=0 alt="!" /></code></a><a href="null_p.html#tp_core_mod" target="origFile">sw_corner) <code class="keyword">THEN</code></a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>j=<code class="constant">1</code>-ng,<code class="constant">0</code></a>
          <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>i=<code class="constant">1</code>-ng,<code class="constant">0</code></a>
            <a href="null_p.html#tp_core_mod" target="origFile">q(i, j) = q(<code class="constant">1</code>-j, i)</a>
          <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
<a name="p19"></a>        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END IF</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IF</code> (</a><a href="msg.html#p19" target="msg"><code class="comment"><img src="danger.gif" align=middle border=0 alt="!" /></code></a><a href="null_p.html#tp_core_mod" target="origFile">se_corner) <code class="keyword">THEN</code></a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>j=<code class="constant">1</code>-ng,<code class="constant">0</code></a>
          <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>i=npx,npx+ng-<code class="constant">1</code></a>
            <a href="null_p.html#tp_core_mod" target="origFile">q(i, j) = q(npy+j-<code class="constant">1</code>, npx-i)</a>
          <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
<a name="p20"></a>        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END IF</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IF</code> (</a><a href="msg.html#p20" target="msg"><code class="comment"><img src="danger.gif" align=middle border=0 alt="!" /></code></a><a href="null_p.html#tp_core_mod" target="origFile">ne_corner) <code class="keyword">THEN</code></a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>j=npy,npy+ng-<code class="constant">1</code></a>
          <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>i=npx,npx+ng-<code class="constant">1</code></a>
            <a href="null_p.html#tp_core_mod" target="origFile">q(i, j) = q(<code class="constant">2</code>*npy-<code class="constant">1</code>-j, i)</a>
          <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
<a name="p21"></a>        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END IF</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IF</code> (</a><a href="msg.html#p21" target="msg"><code class="comment"><img src="danger.gif" align=middle border=0 alt="!" /></code></a><a href="null_p.html#tp_core_mod" target="origFile">nw_corner) <code class="keyword">THEN</code></a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>j=npy,npy+ng-<code class="constant">1</code></a>
          <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>i=<code class="constant">1</code>-ng,<code class="constant">0</code></a>
            <a href="null_p.html#tp_core_mod" target="origFile">q(i, j) = q(j+<code class="constant">1</code>-npx, npy-i)</a>
          <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END IF</code></a>
<a name="xtp_tlm"></a>    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END IF</code></a>
  <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END SUBROUTINE </code><code class="funcname">COPY_CORNERS_R4</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!  Differentiation of xtp in forward (tangent) mode:</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!   variations   of useful results: fx</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!   with respect to varying inputs: q</code></a>
  <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">SUBROUTINE </code><code class="funcname">XTP_TLM</code>(<code class="vardecl">fx</code>, <code class="vardecl">fx_tl</code>, <code class="vardecl">q</code>, <code class="vardecl">q_tl</code>, <code class="vardecl">c</code>, <code class="vardecl">iord</code>, <code class="vardecl">ifirst</code>, <code class="vardecl">ilast</code>, <code class="vardecl">jfirst</code><code class="label">&</code></a>
<a name="xtp_tlmi359"></a><a href="null_p.html#tp_core_mod" target="origFile"><code class="label">&   </code>, <code class="vardecl">jlast</code>, <code class="vardecl">npx</code>, <code class="vardecl">npy</code>)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IMPLICIT NONE</code></a>
<a name="xtp_tlmi360"></a><a href="null_p.html#tp_core_modi359" target="origFile"><code class="comment">!  X-Dir strip</code></a>
    <a href="null_p.html#tp_core_modi359" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">ifirst</code>, <code class="vardecl">ilast</code></a>
<a name="xtp_tlmi361"></a><a href="null_p.html#tp_core_modi360" target="origFile"><code class="comment">!  Y-Dir strip</code></a>
<a name="xtp_tlmi362"></a>    <a href="null_p.html#tp_core_modi360" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">jfirst</code>, <code class="vardecl">jlast</code></a>
<a name="xtp_tlmi363"></a>    <a href="null_p.html#tp_core_modi361" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">npx</code>, <code class="vardecl">npy</code></a>
    <a href="null_p.html#tp_core_modi362" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">iord</code></a>
<a name="xtp_tlmi364"></a><a href="null_p.html#tp_core_modi363" target="origFile"><code class="comment">! Courant numbers</code></a>
    <a href="null_p.html#tp_core_modi363" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">c</code>(<code class="vardecl">is</code>:<code class="vardecl">ie</code>+<code class="constant">1</code>, <code class="vardecl">jfirst</code>:<code class="vardecl">jlast</code>)</a>
<a name="xtp_tlmi365"></a>    <a href="null_p.html#tp_core_modi364" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">q</code>(<code class="vardecl">isd</code>:<code class="vardecl">ied</code>, <code class="vardecl">jfirst</code>:<code class="vardecl">jlast</code>)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">q_tl</code>(<code class="vardecl">isd</code>:<code class="vardecl">ied</code>, <code class="vardecl">jfirst</code>:<code class="vardecl">jlast</code>)</a>
<a name="xtp_tlmi366"></a>    <a href="null_p.html#tp_core_modi365" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">INTENT(OUT) </code>:: <code class="vardecl">fx</code>(<code class="vardecl">ifirst</code>:<code class="vardecl">ilast</code>+<code class="constant">1</code>, <code class="vardecl">jfirst</code>:<code class="vardecl">jlast</code>)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">INTENT(OUT) </code>:: <code class="vardecl">fx_tl</code>(<code class="vardecl">ifirst</code>:<code class="vardecl">ilast</code>+<code class="constant">1</code>, <code class="vardecl">jfirst</code>:<code class="vardecl">jlast</code>)</a>
<a name="xtp_tlmi367"></a><a href="null_p.html#tp_core_modi366" target="origFile"><code class="comment">! Local:</code></a>
<a name="xtp_tlmi368"></a>    <a href="null_p.html#tp_core_modi366" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">dm</code>(<code class="vardecl">is</code>-<code class="constant">2</code>:<code class="vardecl">ie</code>+<code class="constant">2</code>)</a>
<a name="xtp_tlmi369"></a>    <a href="null_p.html#tp_core_modi367" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">x0l</code>, <code class="vardecl">x0r</code>, <code class="vardecl">x1</code></a>
    <a href="null_p.html#tp_core_modi368" target="origFile"><code class="typename">INTEGER </code>:: <code class="vardecl">i</code>, <code class="vardecl">j</code></a>
<a name="xtp_tlmi374"></a>    <a href="null_p.html#tp_core_modi369" target="origFile"><code class="keyword">IF</code> (iord .EQ. <code class="constant">1</code>) <code class="keyword">THEN</code></a>
<a name="xtp_tlmi373"></a>      <a href="null_p.html#tp_core_modi369" target="origFile">fx_tl = <code class="constant">0.0_8</code></a>
<a name="xtp_tlmi370"></a>      <a href="null_p.html#tp_core_modi374" target="origFile"><code class="keyword">DO </code>j=jfirst,jlast</a>
<a name="xtp_tlmi371"></a>        <a href="null_p.html#tp_core_modi373" target="origFile"><code class="keyword">DO </code>i=ifirst,ilast+<code class="constant">1</code></a>
<a name="xtp_tlmi371"></a>          <a href="null_p.html#tp_core_modi370" target="origFile"><code class="keyword">IF</code> (c(i, j) .GT. <code class="constant">0.</code>) <code class="keyword">THEN</code></a>
            <a href="null_p.html#tp_core_modi371" target="origFile">fx_tl(i, j) = q_tl(i-<code class="constant">1</code>, j)</a>
<a name="xtp_tlmi372"></a>            <a href="null_p.html#tp_core_modi371" target="origFile">fx(i, j) = q(i-<code class="constant">1</code>, j)</a>
<a name="xtp_tlmi372"></a>          <a href="null_p.html#tp_core_modi370" target="origFile"><code class="keyword">ELSE</code></a>
            <a href="null_p.html#tp_core_modi372" target="origFile">fx_tl(i, j) = q_tl(i, j)</a>
            <a href="null_p.html#tp_core_modi372" target="origFile">fx(i, j) = q(i, j)</a>
          <a href="null_p.html#tp_core_modi370" target="origFile"><code class="keyword">END IF</code></a>
<a name="xtp_tlmi375"></a>        <a href="null_p.html#tp_core_modi373" target="origFile"><code class="keyword">END DO</code></a>
      <a href="null_p.html#tp_core_modi374" target="origFile"><code class="keyword">END DO</code></a>
<a name="xtp_tlmi380"></a>    <a href="null_p.html#tp_core_modi369" target="origFile"><code class="keyword">ELSE </code></a><a href="null_p.html#tp_core_modi375" target="origFile"><code class="keyword">IF</code> (iord .EQ. <code class="constant">333</code>) <code class="keyword">THEN</code></a>
      <a href="null_p.html#tp_core_modi375" target="origFile">fx_tl = <code class="constant">0.0_8</code></a>
<a name="xtp_tlmi379"></a><a href="null_p.html#tp_core_modi380" target="origFile"><code class="comment">!Advection using third order scheme</code></a>
<a name="xtp_tlmi376"></a>      <a href="null_p.html#tp_core_modi380" target="origFile"><code class="keyword">DO </code>j=jfirst,jlast</a>
<a name="xtp_tlmi377"></a>        <a href="null_p.html#tp_core_modi379" target="origFile"><code class="keyword">DO </code>i=ifirst,ilast+<code class="constant">1</code></a>
          <a href="null_p.html#tp_core_modi376" target="origFile"><code class="keyword">IF</code> (c(i, j) .GT. <code class="constant">0.</code>) <code class="keyword">THEN</code></a>
            <a href="null_p.html#tp_core_modi377" target="origFile">fx_tl(i, j) = (<code class="constant">2.0</code>*q_tl(i, j)+<code class="constant">5.0</code>*q_tl(i-<code class="constant">1</code>, j)-q_tl(i-<code class="constant">2</code>, j))<code class="label">&</code></a>
<a name="xtp_tlmi377"></a><a href="null_p.html#tp_core_modi377" target="origFile"><code class="label">&             </code>/<code class="constant">6.0 </code>- <code class="constant">0.5</code>*c(i, j)*(q_tl(i, j)-q_tl(i-<code class="constant">1</code>, j)) + c(i, j)**<code class="constant">2</code>*<code class="label">&</code></a>
<a href="null_p.html#tp_core_modi377" target="origFile"><code class="label">&             </code>(q_tl(i, j)-<code class="constant">2.0</code>*q_tl(i-<code class="constant">1</code>, j)+q_tl(i-<code class="constant">2</code>, j))/<code class="constant">6.0</code></a>
            <a href="null_p.html#tp_core_modi377" target="origFile">fx(i, j) = (<code class="constant">2.0</code>*q(i, j)+<code class="constant">5.0</code>*q(i-<code class="constant">1</code>, j)-q(i-<code class="constant">2</code>, j))/<code class="constant">6.0 </code>- <code class="constant">0.5</code>*c<code class="label">&</code></a>
<a href="null_p.html#tp_core_modi377" target="origFile"><code class="label">&             </code>(i, j)*(q(i, j)-q(i-<code class="constant">1</code>, j)) + c(i, j)*c(i, j)/<code class="constant">6.0</code>*(q(i, j)-<code class="label">&</code></a>
<a name="xtp_tlmi378"></a><a href="null_p.html#tp_core_modi377" target="origFile"><code class="label">&             </code><code class="constant">2.0</code>*q(i-<code class="constant">1</code>, j)+q(i-<code class="constant">2</code>, j))</a>
          <a href="null_p.html#tp_core_modi376" target="origFile"><code class="keyword">ELSE</code></a>
            <a href="null_p.html#tp_core_modi378" target="origFile">fx_tl(i, j) = (<code class="constant">2.0</code>*q_tl(i-<code class="constant">1</code>, j)+<code class="constant">5.0</code>*q_tl(i, j)-q_tl(i+<code class="constant">1</code>, j))<code class="label">&</code></a>
<a name="xtp_tlmi378"></a><a href="null_p.html#tp_core_modi378" target="origFile"><code class="label">&             </code>/<code class="constant">6.0 </code>- <code class="constant">0.5</code>*c(i, j)*(q_tl(i, j)-q_tl(i-<code class="constant">1</code>, j)) + c(i, j)**<code class="constant">2</code>*<code class="label">&</code></a>
<a href="null_p.html#tp_core_modi378" target="origFile"><code class="label">&             </code>(q_tl(i+<code class="constant">1</code>, j)-<code class="constant">2.0</code>*q_tl(i, j)+q_tl(i-<code class="constant">1</code>, j))/<code class="constant">6.0</code></a>
            <a href="null_p.html#tp_core_modi378" target="origFile">fx(i, j) = (<code class="constant">2.0</code>*q(i-<code class="constant">1</code>, j)+<code class="constant">5.0</code>*q(i, j)-q(i+<code class="constant">1</code>, j))/<code class="constant">6.0 </code>- <code class="constant">0.5</code>*c<code class="label">&</code></a>
<a href="null_p.html#tp_core_modi378" target="origFile"><code class="label">&             </code>(i, j)*(q(i, j)-q(i-<code class="constant">1</code>, j)) + c(i, j)*c(i, j)/<code class="constant">6.0</code>*(q(i+<code class="constant">1</code>, j<code class="label">&</code></a>
<a href="null_p.html#tp_core_modi378" target="origFile"><code class="label">&             </code>)-<code class="constant">2.0</code>*q(i, j)+q(i-<code class="constant">1</code>, j))</a>
          <a href="null_p.html#tp_core_modi376" target="origFile"><code class="keyword">END IF</code></a>
        <a href="null_p.html#tp_core_modi379" target="origFile"><code class="keyword">END DO</code></a>
<a name="xtp_tlmi381"></a>      <a href="null_p.html#tp_core_modi380" target="origFile"><code class="keyword">END DO</code></a>
    <a href="null_p.html#tp_core_modi375" target="origFile"><code class="keyword">ELSE</code></a>
      <a href="null_p.html#tp_core_modi381" target="origFile"><code class="keyword">CALL </code><code class="funcname">FXPPM_TLM</code>(c, q, q_tl, fx, fx_tl, iord, ifirst, ilast, jfirst<code class="label">&</code></a>
<a href="null_p.html#tp_core_modi381" target="origFile"><code class="label">&              </code>, jlast, npx, npy)</a>
<a name="xtp"></a>    <a href="null_p.html#tp_core_modi369" target="origFile"><code class="keyword">END IF</code></a>
  <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END SUBROUTINE </code><code class="funcname">XTP_TLM</code></a>
  <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">SUBROUTINE </code><code class="funcname">XTP</code>(<code class="vardecl">fx</code>, <code class="vardecl">q</code>, <code class="vardecl">c</code>, <code class="vardecl">iord</code>, <code class="vardecl">ifirst</code>, <code class="vardecl">ilast</code>, <code class="vardecl">jfirst</code>, <code class="vardecl">jlast</code>, <code class="vardecl">npx</code>, <code class="vardecl">npy</code>)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IMPLICIT NONE</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!  X-Dir strip</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">ifirst</code>, <code class="vardecl">ilast</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!  Y-Dir strip</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">jfirst</code>, <code class="vardecl">jlast</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">npx</code>, <code class="vardecl">npy</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">iord</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! Courant numbers</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">c</code>(<code class="vardecl">is</code>:<code class="vardecl">ie</code>+<code class="constant">1</code>, <code class="vardecl">jfirst</code>:<code class="vardecl">jlast</code>)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">q</code>(<code class="vardecl">isd</code>:<code class="vardecl">ied</code>, <code class="vardecl">jfirst</code>:<code class="vardecl">jlast</code>)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">INTENT(OUT) </code>:: <code class="vardecl">fx</code>(<code class="vardecl">ifirst</code>:<code class="vardecl">ilast</code>+<code class="constant">1</code>, <code class="vardecl">jfirst</code>:<code class="vardecl">jlast</code>)</a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! Local:</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">dm</code>(<code class="vardecl">is</code>-<code class="constant">2</code>:<code class="vardecl">ie</code>+<code class="constant">2</code>)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">x0l</code>, <code class="vardecl">x0r</code>, <code class="vardecl">x1</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">INTEGER </code>:: <code class="vardecl">i</code>, <code class="vardecl">j</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IF</code> (iord .EQ. <code class="constant">1</code>) <code class="keyword">THEN</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>j=jfirst,jlast</a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>i=ifirst,ilast+<code class="constant">1</code></a>
          <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IF</code> (c(i, j) .GT. <code class="constant">0.</code>) <code class="keyword">THEN</code></a>
            <a href="null_p.html#tp_core_mod" target="origFile">fx(i, j) = q(i-<code class="constant">1</code>, j)</a>
          <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">ELSE</code></a>
            <a href="null_p.html#tp_core_mod" target="origFile">fx(i, j) = q(i, j)</a>
          <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END IF</code></a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">ELSE IF</code> (iord .EQ. <code class="constant">333</code>) <code class="keyword">THEN</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!Advection using third order scheme</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>j=jfirst,jlast</a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>i=ifirst,ilast+<code class="constant">1</code></a>
          <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IF</code> (c(i, j) .GT. <code class="constant">0.</code>) <code class="keyword">THEN</code></a>
            <a href="null_p.html#tp_core_mod" target="origFile">fx(i, j) = (<code class="constant">2.0</code>*q(i, j)+<code class="constant">5.0</code>*q(i-<code class="constant">1</code>, j)-q(i-<code class="constant">2</code>, j))/<code class="constant">6.0 </code>- <code class="constant">0.5</code>*c<code class="label">&</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="label">&             </code>(i, j)*(q(i, j)-q(i-<code class="constant">1</code>, j)) + c(i, j)*c(i, j)/<code class="constant">6.0</code>*(q(i, j)-<code class="label">&</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="label">&             </code><code class="constant">2.0</code>*q(i-<code class="constant">1</code>, j)+q(i-<code class="constant">2</code>, j))</a>
          <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">ELSE</code></a>
            <a href="null_p.html#tp_core_mod" target="origFile">fx(i, j) = (<code class="constant">2.0</code>*q(i-<code class="constant">1</code>, j)+<code class="constant">5.0</code>*q(i, j)-q(i+<code class="constant">1</code>, j))/<code class="constant">6.0 </code>- <code class="constant">0.5</code>*c<code class="label">&</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="label">&             </code>(i, j)*(q(i, j)-q(i-<code class="constant">1</code>, j)) + c(i, j)*c(i, j)/<code class="constant">6.0</code>*(q(i+<code class="constant">1</code>, j<code class="label">&</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="label">&             </code>)-<code class="constant">2.0</code>*q(i, j)+q(i-<code class="constant">1</code>, j))</a>
          <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END IF</code></a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">ELSE</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">CALL </code><code class="funcname">FXPPM</code>(c, q, fx, iord, ifirst, ilast, jfirst, jlast, npx, npy)</a>
<a name="ytp_tlm"></a>    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END IF</code></a>
  <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END SUBROUTINE </code><code class="funcname">XTP</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!  Differentiation of ytp in forward (tangent) mode:</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!   variations   of useful results: fy</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!   with respect to varying inputs: q</code></a>
  <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">SUBROUTINE </code><code class="funcname">YTP_TLM</code>(<code class="vardecl">fy</code>, <code class="vardecl">fy_tl</code>, <code class="vardecl">q</code>, <code class="vardecl">q_tl</code>, <code class="vardecl">c</code>, <code class="vardecl">jord</code>, <code class="vardecl">ifirst</code>, <code class="vardecl">ilast</code>, <code class="vardecl">jfirst</code><code class="label">&</code></a>
<a name="ytp_tlmi336"></a><a href="null_p.html#tp_core_mod" target="origFile"><code class="label">&   </code>, <code class="vardecl">jlast</code>, <code class="vardecl">npx</code>, <code class="vardecl">npy</code>)</a>
<a name="ytp_tlmi337"></a>    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IMPLICIT NONE</code></a>
    <a href="null_p.html#tp_core_modi336" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">npx</code>, <code class="vardecl">npy</code></a>
<a name="ytp_tlmi338"></a><a href="null_p.html#tp_core_modi337" target="origFile"><code class="comment">!  X-Dir strip</code></a>
    <a href="null_p.html#tp_core_modi337" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">ifirst</code>, <code class="vardecl">ilast</code></a>
<a name="ytp_tlmi339"></a><a href="null_p.html#tp_core_modi338" target="origFile"><code class="comment">!  Y-Dir strip</code></a>
<a name="ytp_tlmi340"></a>    <a href="null_p.html#tp_core_modi338" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">jfirst</code>, <code class="vardecl">jlast</code></a>
    <a href="null_p.html#tp_core_modi339" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">jord</code></a>
<a name="ytp_tlmi341"></a>    <a href="null_p.html#tp_core_modi340" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">q</code>(<code class="vardecl">ifirst</code>:<code class="vardecl">ilast</code>, <code class="vardecl">jfirst</code>-<code class="vardecl">ng</code>:<code class="vardecl">jlast</code>+<code class="vardecl">ng</code>)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">q_tl</code>(<code class="vardecl">ifirst</code>:<code class="vardecl">ilast</code>, <code class="vardecl">jfirst</code>-<code class="vardecl">ng</code>:<code class="vardecl">jlast</code>+<code class="vardecl">ng</code>)</a>
<a name="ytp_tlmi342"></a><a href="null_p.html#tp_core_modi341" target="origFile"><code class="comment">! Courant number</code></a>
    <a href="null_p.html#tp_core_modi341" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">c</code>(<code class="vardecl">isd</code>:<code class="vardecl">ied</code>, <code class="vardecl">js</code>:<code class="vardecl">je</code>+<code class="constant">1</code>)</a>
<a href="null_p.html#tp_core_modi342" target="origFile"><code class="comment">!  Flux</code></a>
<a name="ytp_tlmi343"></a>    <a href="null_p.html#tp_core_modi342" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">INTENT(OUT) </code>:: <code class="vardecl">fy</code>(<code class="vardecl">ifirst</code>:<code class="vardecl">ilast</code>, <code class="vardecl">jfirst</code>:<code class="vardecl">jlast</code>+<code class="constant">1</code>)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">INTENT(OUT) </code>:: <code class="vardecl">fy_tl</code>(<code class="vardecl">ifirst</code>:<code class="vardecl">ilast</code>, <code class="vardecl">jfirst</code>:<code class="vardecl">jlast</code>+<code class="constant">1</code>)</a>
<a name="ytp_tlmi344"></a><a href="null_p.html#tp_core_modi343" target="origFile"><code class="comment">! !LOCAL VARIABLES:</code></a>
<a name="ytp_tlmi345"></a>    <a href="null_p.html#tp_core_modi343" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">dm</code>(<code class="vardecl">ifirst</code>:<code class="vardecl">ilast</code>, <code class="vardecl">jfirst</code>-<code class="constant">2</code>:<code class="vardecl">jlast</code>+<code class="constant">2</code>)</a>
<a name="ytp_tlmi346"></a>    <a href="null_p.html#tp_core_modi344" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">x0l</code>, <code class="vardecl">x0r</code>, <code class="vardecl">x1</code></a>
    <a href="null_p.html#tp_core_modi345" target="origFile"><code class="typename">INTEGER </code>:: <code class="vardecl">i</code>, <code class="vardecl">j</code></a>
<a name="ytp_tlmi351"></a>    <a href="null_p.html#tp_core_modi346" target="origFile"><code class="keyword">IF</code> (jord .EQ. <code class="constant">1</code>) <code class="keyword">THEN</code></a>
<a name="ytp_tlmi350"></a>      <a href="null_p.html#tp_core_modi346" target="origFile">fy_tl = <code class="constant">0.0_8</code></a>
<a name="ytp_tlmi347"></a>      <a href="null_p.html#tp_core_modi351" target="origFile"><code class="keyword">DO </code>j=jfirst,jlast+<code class="constant">1</code></a>
<a name="ytp_tlmi348"></a>        <a href="null_p.html#tp_core_modi350" target="origFile"><code class="keyword">DO </code>i=ifirst,ilast</a>
<a name="ytp_tlmi348"></a>          <a href="null_p.html#tp_core_modi347" target="origFile"><code class="keyword">IF</code> (c(i, j) .GT. <code class="constant">0.</code>) <code class="keyword">THEN</code></a>
            <a href="null_p.html#tp_core_modi348" target="origFile">fy_tl(i, j) = q_tl(i, j-<code class="constant">1</code>)</a>
<a name="ytp_tlmi349"></a>            <a href="null_p.html#tp_core_modi348" target="origFile">fy(i, j) = q(i, j-<code class="constant">1</code>)</a>
<a name="ytp_tlmi349"></a>          <a href="null_p.html#tp_core_modi347" target="origFile"><code class="keyword">ELSE</code></a>
            <a href="null_p.html#tp_core_modi349" target="origFile">fy_tl(i, j) = q_tl(i, j)</a>
            <a href="null_p.html#tp_core_modi349" target="origFile">fy(i, j) = q(i, j)</a>
          <a href="null_p.html#tp_core_modi347" target="origFile"><code class="keyword">END IF</code></a>
<a name="ytp_tlmi352"></a>        <a href="null_p.html#tp_core_modi350" target="origFile"><code class="keyword">END DO</code></a>
      <a href="null_p.html#tp_core_modi351" target="origFile"><code class="keyword">END DO</code></a>
<a name="ytp_tlmi357"></a>    <a href="null_p.html#tp_core_modi346" target="origFile"><code class="keyword">ELSE </code></a><a href="null_p.html#tp_core_modi352" target="origFile"><code class="keyword">IF</code> (jord .EQ. <code class="constant">333</code>) <code class="keyword">THEN</code></a>
      <a href="null_p.html#tp_core_modi352" target="origFile">fy_tl = <code class="constant">0.0_8</code></a>
<a name="ytp_tlmi356"></a><a href="null_p.html#tp_core_modi357" target="origFile"><code class="comment">!Advected using third order scheme</code></a>
<a name="ytp_tlmi353"></a>      <a href="null_p.html#tp_core_modi357" target="origFile"><code class="keyword">DO </code>j=jfirst,jlast+<code class="constant">1</code></a>
<a name="ytp_tlmi354"></a>        <a href="null_p.html#tp_core_modi356" target="origFile"><code class="keyword">DO </code>i=ifirst,ilast</a>
          <a href="null_p.html#tp_core_modi353" target="origFile"><code class="keyword">IF</code> (c(i, j) .GT. <code class="constant">0.</code>) <code class="keyword">THEN</code></a>
            <a href="null_p.html#tp_core_modi354" target="origFile">fy_tl(i, j) = (<code class="constant">2.0</code>*q_tl(i, j)+<code class="constant">5.0</code>*q_tl(i, j-<code class="constant">1</code>)-q_tl(i, j-<code class="constant">2</code>))<code class="label">&</code></a>
<a name="ytp_tlmi354"></a><a href="null_p.html#tp_core_modi354" target="origFile"><code class="label">&             </code>/<code class="constant">6.0 </code>- <code class="constant">0.5</code>*c(i, j)*(q_tl(i, j)-q_tl(i, j-<code class="constant">1</code>)) + c(i, j)**<code class="constant">2</code>*<code class="label">&</code></a>
<a href="null_p.html#tp_core_modi354" target="origFile"><code class="label">&             </code>(q_tl(i, j)-<code class="constant">2.0</code>*q_tl(i, j-<code class="constant">1</code>)+q_tl(i, j-<code class="constant">2</code>))/<code class="constant">6.0</code></a>
            <a href="null_p.html#tp_core_modi354" target="origFile">fy(i, j) = (<code class="constant">2.0</code>*q(i, j)+<code class="constant">5.0</code>*q(i, j-<code class="constant">1</code>)-q(i, j-<code class="constant">2</code>))/<code class="constant">6.0 </code>- <code class="constant">0.5</code>*c<code class="label">&</code></a>
<a href="null_p.html#tp_core_modi354" target="origFile"><code class="label">&             </code>(i, j)*(q(i, j)-q(i, j-<code class="constant">1</code>)) + c(i, j)*c(i, j)/<code class="constant">6.0</code>*(q(i, j)-<code class="label">&</code></a>
<a name="ytp_tlmi355"></a><a href="null_p.html#tp_core_modi354" target="origFile"><code class="label">&             </code><code class="constant">2.0</code>*q(i, j-<code class="constant">1</code>)+q(i, j-<code class="constant">2</code>))</a>
          <a href="null_p.html#tp_core_modi353" target="origFile"><code class="keyword">ELSE</code></a>
            <a href="null_p.html#tp_core_modi355" target="origFile">fy_tl(i, j) = (<code class="constant">2.0</code>*q_tl(i, j-<code class="constant">1</code>)+<code class="constant">5.0</code>*q_tl(i, j)-q_tl(i, j+<code class="constant">1</code>))<code class="label">&</code></a>
<a name="ytp_tlmi355"></a><a href="null_p.html#tp_core_modi355" target="origFile"><code class="label">&             </code>/<code class="constant">6.0 </code>- <code class="constant">0.5</code>*c(i, j)*(q_tl(i, j)-q_tl(i, j-<code class="constant">1</code>)) + c(i, j)**<code class="constant">2</code>*<code class="label">&</code></a>
<a href="null_p.html#tp_core_modi355" target="origFile"><code class="label">&             </code>(q_tl(i, j+<code class="constant">1</code>)-<code class="constant">2.0</code>*q_tl(i, j)+q_tl(i, j-<code class="constant">1</code>))/<code class="constant">6.0</code></a>
            <a href="null_p.html#tp_core_modi355" target="origFile">fy(i, j) = (<code class="constant">2.0</code>*q(i, j-<code class="constant">1</code>)+<code class="constant">5.0</code>*q(i, j)-q(i, j+<code class="constant">1</code>))/<code class="constant">6.0 </code>- <code class="constant">0.5</code>*c<code class="label">&</code></a>
<a href="null_p.html#tp_core_modi355" target="origFile"><code class="label">&             </code>(i, j)*(q(i, j)-q(i, j-<code class="constant">1</code>)) + c(i, j)*c(i, j)/<code class="constant">6.0</code>*(q(i, j+<code class="constant">1</code><code class="label">&</code></a>
<a href="null_p.html#tp_core_modi355" target="origFile"><code class="label">&             </code>)-<code class="constant">2.0</code>*q(i, j)+q(i, j-<code class="constant">1</code>))</a>
          <a href="null_p.html#tp_core_modi353" target="origFile"><code class="keyword">END IF</code></a>
        <a href="null_p.html#tp_core_modi356" target="origFile"><code class="keyword">END DO</code></a>
<a name="ytp_tlmi358"></a>      <a href="null_p.html#tp_core_modi357" target="origFile"><code class="keyword">END DO</code></a>
    <a href="null_p.html#tp_core_modi352" target="origFile"><code class="keyword">ELSE</code></a>
      <a href="null_p.html#tp_core_modi358" target="origFile"><code class="keyword">CALL </code><code class="funcname">FYPPM_TLM</code>(c, q, q_tl, fy, fy_tl, jord, ifirst, ilast, jfirst<code class="label">&</code></a>
<a href="null_p.html#tp_core_modi358" target="origFile"><code class="label">&              </code>, jlast, npx, npy)</a>
<a name="ytp"></a>    <a href="null_p.html#tp_core_modi346" target="origFile"><code class="keyword">END IF</code></a>
  <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END SUBROUTINE </code><code class="funcname">YTP_TLM</code></a>
  <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">SUBROUTINE </code><code class="funcname">YTP</code>(<code class="vardecl">fy</code>, <code class="vardecl">q</code>, <code class="vardecl">c</code>, <code class="vardecl">jord</code>, <code class="vardecl">ifirst</code>, <code class="vardecl">ilast</code>, <code class="vardecl">jfirst</code>, <code class="vardecl">jlast</code>, <code class="vardecl">npx</code>, <code class="vardecl">npy</code>)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IMPLICIT NONE</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">npx</code>, <code class="vardecl">npy</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!  X-Dir strip</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">ifirst</code>, <code class="vardecl">ilast</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!  Y-Dir strip</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">jfirst</code>, <code class="vardecl">jlast</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">jord</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">q</code>(<code class="vardecl">ifirst</code>:<code class="vardecl">ilast</code>, <code class="vardecl">jfirst</code>-<code class="vardecl">ng</code>:<code class="vardecl">jlast</code>+<code class="vardecl">ng</code>)</a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! Courant number</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">c</code>(<code class="vardecl">isd</code>:<code class="vardecl">ied</code>, <code class="vardecl">js</code>:<code class="vardecl">je</code>+<code class="constant">1</code>)</a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!  Flux</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">INTENT(OUT) </code>:: <code class="vardecl">fy</code>(<code class="vardecl">ifirst</code>:<code class="vardecl">ilast</code>, <code class="vardecl">jfirst</code>:<code class="vardecl">jlast</code>+<code class="constant">1</code>)</a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! !LOCAL VARIABLES:</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">dm</code>(<code class="vardecl">ifirst</code>:<code class="vardecl">ilast</code>, <code class="vardecl">jfirst</code>-<code class="constant">2</code>:<code class="vardecl">jlast</code>+<code class="constant">2</code>)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">x0l</code>, <code class="vardecl">x0r</code>, <code class="vardecl">x1</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">INTEGER </code>:: <code class="vardecl">i</code>, <code class="vardecl">j</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IF</code> (jord .EQ. <code class="constant">1</code>) <code class="keyword">THEN</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>j=jfirst,jlast+<code class="constant">1</code></a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>i=ifirst,ilast</a>
          <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IF</code> (c(i, j) .GT. <code class="constant">0.</code>) <code class="keyword">THEN</code></a>
            <a href="null_p.html#tp_core_mod" target="origFile">fy(i, j) = q(i, j-<code class="constant">1</code>)</a>
          <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">ELSE</code></a>
            <a href="null_p.html#tp_core_mod" target="origFile">fy(i, j) = q(i, j)</a>
          <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END IF</code></a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">ELSE IF</code> (jord .EQ. <code class="constant">333</code>) <code class="keyword">THEN</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!Advected using third order scheme</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>j=jfirst,jlast+<code class="constant">1</code></a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>i=ifirst,ilast</a>
          <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IF</code> (c(i, j) .GT. <code class="constant">0.</code>) <code class="keyword">THEN</code></a>
            <a href="null_p.html#tp_core_mod" target="origFile">fy(i, j) = (<code class="constant">2.0</code>*q(i, j)+<code class="constant">5.0</code>*q(i, j-<code class="constant">1</code>)-q(i, j-<code class="constant">2</code>))/<code class="constant">6.0 </code>- <code class="constant">0.5</code>*c<code class="label">&</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="label">&             </code>(i, j)*(q(i, j)-q(i, j-<code class="constant">1</code>)) + c(i, j)*c(i, j)/<code class="constant">6.0</code>*(q(i, j)-<code class="label">&</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="label">&             </code><code class="constant">2.0</code>*q(i, j-<code class="constant">1</code>)+q(i, j-<code class="constant">2</code>))</a>
          <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">ELSE</code></a>
            <a href="null_p.html#tp_core_mod" target="origFile">fy(i, j) = (<code class="constant">2.0</code>*q(i, j-<code class="constant">1</code>)+<code class="constant">5.0</code>*q(i, j)-q(i, j+<code class="constant">1</code>))/<code class="constant">6.0 </code>- <code class="constant">0.5</code>*c<code class="label">&</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="label">&             </code>(i, j)*(q(i, j)-q(i, j-<code class="constant">1</code>)) + c(i, j)*c(i, j)/<code class="constant">6.0</code>*(q(i, j+<code class="constant">1</code><code class="label">&</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="label">&             </code>)-<code class="constant">2.0</code>*q(i, j)+q(i, j-<code class="constant">1</code>))</a>
          <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END IF</code></a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">ELSE</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">CALL </code><code class="funcname">FYPPM</code>(c, q, fy, jord, ifirst, ilast, jfirst, jlast, npx, npy)</a>
<a name="xppm0_tlm"></a>    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END IF</code></a>
  <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END SUBROUTINE </code><code class="funcname">YTP</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!  Differentiation of xppm0 in forward (tangent) mode:</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!   variations   of useful results: flux</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!   with respect to varying inputs: q</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!#ifdef XPPM_2D</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! subroutine xppm0(flux, q, c, iord, ifirst, ilast, jfirst, jlast, npx, npy, bd, dxa, nested, grid_type)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! type(fv_grid_bounds_type), intent(IN) :: bd</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! integer, INTENT(IN) :: ifirst, ilast               !  X-Dir strip</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! integer, INTENT(IN) :: jfirst, jlast               !  Y-Dir strip</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! integer, INTENT(IN) :: iord</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! integer, INTENT(IN) :: npx, npy</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! real   , INTENT(IN) :: q(ifirst-ng:ilast+ng,jfirst:jlast)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! real   , INTENT(IN) :: c(ifirst   :ilast+1 ,jfirst:jlast) ! Courant   N (like FLUX)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! real   , intent(IN) :: dxa(bd%isd:bd%ied,bd%jsd:bd%jed)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! logical, intent(IN) :: nested</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! integer, intent(IN) :: grid_type</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!! !OUTPUT PARAMETERS:</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! real  , INTENT(OUT) :: flux(ifirst:ilast+1,jfirst:jlast) !  Flux</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!! Local</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! real, dimension(3*jfirst:3*jlast+2) :: q_tmp, bl_tmp, br_tmp</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! real, dimension(ifirst-1:ilast+1,jfirst:jlast):: bl, br</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! real  al(ifirst-1:ilast+2,jfirst:jlast)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! real  dm(ifirst-2:ilast+2,jfirst:jlast)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! real  dq(ifirst-3:ilast+2,jfirst:jlast)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! logical extm(ifirst-2:ilast+2,jfirst:jlast)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! integer i, j, ie3, is1, ie1</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! real xt, pmp_1, lac_1, pmp_2, lac_2</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! if ( .not. nested .and. grid_type&lt;3 ) then</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!    is1 = max(3,is-1);  ie3 = min(npx-2,ie+2)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!                        ie1 = min(npx-3,ie+1)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! else</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!    is1 = is-1;         ie3 = ie+2</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!                        ie1 = ie+1</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! end if</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! if ( abs(iord) &lt; 8 ) then</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!    ! ord = -5: linear scheme based on PPM 4th order interpolation</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!    ! ord = -6: linear PPM with 2-delta filter</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!    ! ord = -7: (-6) with additional Positive definite constraint:</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!    do j=jfirst,jlast</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!       do i=is1, ie3</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!          al(i,j) = p1*(q(i-1,j)+q(i,j)) + p2*(q(i-2,j)+q(i+1,j))</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!       enddo</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!    enddo</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!    if ( .not. nested .and. grid_type&lt;3 ) then</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!       if ( is==1 ) then</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!          do j=jfirst,jlast</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!             al(0,j) = c1*q(-2,j) + c2*q(-1,j) + c3*q(0,j)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!             al(1,j) = 0.5*(((2.*dxa(0,j)+dxa(-1,j))*q(0,j)-dxa(0,j)*q(-1,j))/(dxa(-1,j)+dxa(0,j)) &</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!                  +      ((2.*dxa(1,j)+dxa( 2,j))*q(1,j)-dxa(1,j)*q(2,j))/(dxa(1, j)+dxa(2,j)))</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!             al(2,j) = c3*q(1,j) + c2*q(2,j) +c1*q(3,j)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!          enddo</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!          if(iord==-7) then</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!             do j=jfirst,jlast</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!                al(0,j) = max(0., al(0,j))</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!                al(1,j) = max(0., al(1,j))</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!                al(2,j) = max(0., al(2,j))</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!             enddo</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!          endif</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!       endif</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!       if ( (ie+1)==npx ) then</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!          do j=jfirst,jlast</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!             al(npx-1,j) = c1*q(npx-3,j) + c2*q(npx-2,j) + c3*q(npx-1,j)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!             al(npx,j) = 0.5*(((2.*dxa(npx-1,j)+dxa(npx-2,j))*q(npx-1,j)-dxa(npx-1,j)*q(npx-2,j))/(dxa(npx-2,j)+dxa(npx-1,j)) &</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!                  +      ((2.*dxa(npx,  j)+dxa(npx+1,j))*q(npx,j)-dxa(npx,  j)*q(npx+1,j))/(dxa(npx,  j)+dxa(npx+1,j)))</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!             al(npx+1,j) = c3*q(npx,j) + c2*q(npx+1,j) + c1*q(npx+2,j)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!          enddo</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!          if(iord==-7) then</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!             do j=jfirst,jlast</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!                al(npx-1,j) = max(0., al(npx-1,j))</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!                al(npx,  j) = max(0., al(npx  ,j))</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!                al(npx+1,j) = max(0., al(npx+1,j))</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!             enddo</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!          endif</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!       endif</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!    endif</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!    if ( iord==-5 ) then</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!       do j=jfirst,jlast</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!          do i=ifirst-1,ilast+1</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!             bl(i,j) = al(i,j)   - q(i,j)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!             br(i,j) = al(i+1,j) - q(i,j)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!          enddo</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!       enddo</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!    else</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!       do j=jfirst,jlast</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!          do i=ifirst-3,ilast+2</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!             dq(i,j) = q(i+1,j) - q(i,j)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!          enddo</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!       enddo</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!       do j=jfirst,jlast</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!          do i=ifirst-2, ilast+2</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!             if ( dq(i-1,j)*dq(i,j) &gt; 0. ) then</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!                extm(i,j) = .false.</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!             else</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!                extm(i,j) = .true.</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!             endif</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!          enddo</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!       enddo</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!       do j=jfirst,jlast</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!          do i=ifirst-1,ilast+1</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!             if ( extm(i-1,j).and.extm(i,j).and.extm(i+1,j) ) then</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!                bl(i,j) = 0.</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!                br(i,j) = 0.</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!             else</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!                bl(i,j) = al(i,j)   - q(i,j)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!                br(i,j) = al(i+1,j) - q(i,j)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!             endif</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!          enddo</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!       enddo</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!       ! Additional positive definite constraint:</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!       if(iord==-7) call pert_ppm(ilast-ifirst+3, q(ifirst-1,j), bl(ifirst-1,j), br(ifirst-1,j), 0)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!    endif</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! else</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!! Monotonic constraints:</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!! ord = 8: PPM with Lin's PPM fast monotone constraint</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!! ord = 10: PPM with Lin's modification of Huynh 2nd constraint</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!! ord = 13: 10 plus positive definite constraint</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!    do j=jfirst,jlast</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!!DEC$ VECTOR ALWAYS</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!       do i=is-2,ie+2</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!          xt = 0.25*(q(i+1,j) - q(i-1,j))</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!          dm(i,j) = sign(min(abs(xt), max(q(i-1,j), q(i,j), q(i+1,j)) - q(i,j),  &</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!               q(i,j) - min(q(i-1,j), q(i,j), q(i+1,j))), xt)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!       enddo</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!    enddo</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!    do j=jfirst,jlast</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!!DEC$ VECTOR ALWAYS</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!       do i=is1,ie1+1</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!          al(i,j) = 0.5*(q(i-1,j)+q(i,j)) + r3*(dm(i-1,j)-dm(i,j))</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!       enddo</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!    enddo</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!    if ( iord==-8 ) then</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!       do j=jfirst,jlast</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!!DEC$ VECTOR ALWAYS</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!          do i=is1, ie1</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!             xt = 2.*dm(i,j)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!             bl(i,j) = -sign(min(abs(xt), abs(al(i,j  )-q(i,j))), xt)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!             br(i,j) =  sign(min(abs(xt), abs(al(i+1,j)-q(i,j))), xt)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!          enddo</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!       enddo</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!    else</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!       do j=jfirst,jlast</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!          do i=is1-2, ie1+1</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!             dq(i,j) = q(i+1,j) - q(i,j)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!          enddo</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!       enddo</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!       do j=jfirst,jlast</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!          do i=is1, ie1</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!             bl(i,j) = al(i,j  ) - q(i,j)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!             br(i,j) = al(i+1,j) - q(i,j)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!             if ( abs(dm(i-1,j))+abs(dm(i,j))+abs(dm(i+1,j)) &lt; near_zero ) then</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!                bl(i,j) = 0.</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!                br(i,j) = 0.</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!             elseif( abs(3.*(bl(i,j)+br(i,j))) &gt; abs(bl(i,j)-br(i,j)) ) then</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!                pmp_1 = -(dq(i,j) + dq(i,j))</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!                lac_1 = pmp_1 + 1.5*dq(i+1,j)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!                bl(i,j) = min( max(0., pmp_1, lac_1), max(bl(i,j), min(0., pmp_1, lac_1)) )</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!                pmp_2 = dq(i-1,j) + dq(i-1,j)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!                lac_2 = pmp_2 - 1.5*dq(i-2,j)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!                br(i,j) = min( max(0., pmp_2, lac_2), max(br(i,j), min(0., pmp_2, lac_2)) )</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!             endif</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!          enddo</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!       enddo</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!    endif</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!    ! Positive definite constraint:</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!    if(iord==-9 .or. iord==-13) call pert_ppm(ie1-is1+1, q(is1,j), bl(is1,j), br(is1,j), 0)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!    if (.not. nested .and. grid_type&lt;3) then</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!       if ( is==1 ) then</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!          do j=jfirst,jlast</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!             bl_tmp(3*j) = s14*dm(-1,j) + s11*(q(-1,j)-q(0,j))</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!             xt = 0.5*(((2.*dxa(0,j)+dxa(-1,j))*q(0,j)-dxa(0,j)*q(-1,j))/(dxa(-1,j)+dxa(0,j)) &</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!                  +      ((2.*dxa(1,j)+dxa( 2,j))*q(1,j)-dxa(1,j)*q(2,j))/(dxa(1, j)+dxa(2,j)))</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!             br_tmp(3*j) = xt - q(0,j)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!             bl_tmp(3*j+1) = xt - q(1,j)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!             xt = s15*q(1,j) + s11*q(2,j) - s14*dm(2,j)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!             br_tmp(3*j+1) = xt - q(1,j)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!             bl_tmp(3*j+2) = xt - q(2,j)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!             br_tmp(3*j+2) = al(3,j) - q(2,j)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!             q_tmp(j*3:j*3+2) = q(0:2,j)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!          enddo</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!          call pert_ppm(3*(jlast-jfirst+1), q_tmp, bl_tmp, br_tmp, 1)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!          do j=jfirst,jlast</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!             bl(0:2,j) = bl_tmp(j*3:j*3+2)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!             br(0:2,j) = br_tmp(j*3:j*3+2)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!          enddo</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!      endif</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!      if ( (ie+1)==npx ) then</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!         do j=jfirst,jlast</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!            bl_tmp(3*j) = al(npx-2,j) - q(npx-2,j)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!            xt = s15*q(npx-1,j) + s11*q(npx-2,j) + s14*dm(npx-2,j)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!            br_tmp(3*j) = xt - q(npx-2,j)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!            bl_tmp(3*j+1) = xt - q(npx-1,j)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!            xt = 0.5*(((2.*dxa(npx-1,j)+dxa(npx-2,j))*q(npx-1,j)-dxa(npx-1,j)*q(npx-2,j))/(dxa(npx-2,j)+dxa(npx-1,j)) &</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!               +      ((2.*dxa(npx,  j)+dxa(npx+1,j))*q(npx,j  )-dxa(npx,  j)*q(npx+1,j))/(dxa(npx,  j)+dxa(npx+1,j)))</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!            br_tmp(3*j+1) = xt - q(npx-1,j)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!            bl_tmp(3*j+2) = xt - q(npx,j  )</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!            br_tmp(3*j+2) = s11*(q(npx+1,j)-q(npx,j)) - s14*dm(npx+1,j)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!            q_tmp(j*3:j*3+2) = q(npx-2:npx,j)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!         enddo</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!         call pert_ppm(3*(jlast-jfirst+1), q_tmp, bl_tmp, br_tmp, 1)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!         do j=jfirst,jlast</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!            bl(npx-2:npx,j) = bl_tmp(j*3:j*3+2)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!            br(npx-2:npx,j) = br_tmp(j*3:j*3+2)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!         enddo</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!      endif</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!    endif</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!  endif</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!  do j=jfirst,jlast</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!!DEC$ VECTOR ALWAYS</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!     do i=ifirst,ilast+1</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!        if( c(i,j)&gt;0. ) then</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!           flux(i,j) = q(i-1,j) + (1.-c(i,j))*(br(i-1,j)-c(i,j)*(bl(i-1,j)+br(i-1,j)))</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!        else</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!           flux(i,j) = q(i,j  ) + (1.+c(i,j))*(bl(i,j  )+c(i,j)*(bl(i,j  )+br(i,j  )))</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!        endif</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!     enddo</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!  enddo</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! end subroutine xppm0</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!#else</code></a>
  <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">SUBROUTINE </code><code class="funcname">XPPM0_TLM</code>(<code class="vardecl">flux</code>, <code class="vardecl">flux_tl</code>, <code class="vardecl">q</code>, <code class="vardecl">q_tl</code>, <code class="vardecl">c</code>, <code class="vardecl">iord</code>, <code class="vardecl">ifirst</code>, <code class="vardecl">ilast</code>, <code class="label">&</code></a>
<a name="xppm0_tlmi278"></a><a href="null_p.html#tp_core_mod" target="origFile"><code class="label">&   </code><code class="vardecl">jfirst</code>, <code class="vardecl">jlast</code>, <code class="vardecl">npx</code>, <code class="vardecl">npy</code>)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IMPLICIT NONE</code></a>
<a name="xppm0_tlmi279"></a><a href="null_p.html#tp_core_modi278" target="origFile"><code class="comment">!  X-Dir strip</code></a>
    <a href="null_p.html#tp_core_modi278" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">ifirst</code>, <code class="vardecl">ilast</code></a>
<a name="xppm0_tlmi280"></a><a href="null_p.html#tp_core_modi279" target="origFile"><code class="comment">!  Y-Dir strip</code></a>
<a name="xppm0_tlmi281"></a>    <a href="null_p.html#tp_core_modi279" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">jfirst</code>, <code class="vardecl">jlast</code></a>
<a name="xppm0_tlmi282"></a>    <a href="null_p.html#tp_core_modi280" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">iord</code></a>
    <a href="null_p.html#tp_core_modi281" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">npx</code>, <code class="vardecl">npy</code></a>
<a name="xppm0_tlmi283"></a>    <a href="null_p.html#tp_core_modi282" target="origFile"><code class="typename">REAL</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">q</code>(<code class="vardecl">ifirst</code>-<code class="vardecl">ng</code>:<code class="vardecl">ilast</code>+<code class="vardecl">ng</code>, <code class="vardecl">jfirst</code>:<code class="vardecl">jlast</code>)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">q_tl</code>(<code class="vardecl">ifirst</code>-<code class="vardecl">ng</code>:<code class="vardecl">ilast</code>+<code class="vardecl">ng</code>, <code class="vardecl">jfirst</code>:<code class="vardecl">jlast</code>)</a>
<a name="xppm0_tlmi284"></a><a href="null_p.html#tp_core_modi283" target="origFile"><code class="comment">! Courant   N (like FLUX)</code></a>
    <a href="null_p.html#tp_core_modi283" target="origFile"><code class="typename">REAL</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">c</code>(<code class="vardecl">ifirst</code>:<code class="vardecl">ilast</code>+<code class="constant">1</code>, <code class="vardecl">jfirst</code>:<code class="vardecl">jlast</code>)</a>
<a href="null_p.html#tp_core_modi284" target="origFile"><code class="comment">! !OUTPUT PARAMETERS:</code></a>
<a href="null_p.html#tp_core_modi284" target="origFile"><code class="comment">!  Flux</code></a>
<a name="xppm0_tlmi285"></a>    <a href="null_p.html#tp_core_modi284" target="origFile"><code class="typename">REAL</code>, <code class="typename">INTENT(OUT) </code>:: <code class="vardecl">flux</code>(<code class="vardecl">ifirst</code>:<code class="vardecl">ilast</code>+<code class="constant">1</code>, <code class="vardecl">jfirst</code>:<code class="vardecl">jlast</code>)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL</code>, <code class="typename">INTENT(OUT) </code>:: <code class="vardecl">flux_tl</code>(<code class="vardecl">ifirst</code>:<code class="vardecl">ilast</code>+<code class="constant">1</code>, <code class="vardecl">jfirst</code>:<code class="vardecl">jlast</code>)</a>
<a href="null_p.html#tp_core_modi285" target="origFile"><code class="comment">! Local</code></a>
<a name="xppm0_tlmi286"></a>    <a href="null_p.html#tp_core_modi285" target="origFile"><code class="typename">REAL</code>, <code class="typename">DIMENSION(</code>ifirst-ng:ilast+ng<code class="typename">) </code>:: <code class="vardecl">q1</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL</code>, DIMENSION(ifirst-ng:ilast+ng) :: <code class="vardecl">q1_tl</code></a>
<a name="xppm0_tlmi287"></a>    <a href="null_p.html#tp_core_modi286" target="origFile"><code class="typename">REAL</code>, <code class="typename">DIMENSION(</code>ifirst-<code class="constant">1</code>:ilast+<code class="constant">1</code><code class="typename">) </code>:: <code class="vardecl">bl</code>, <code class="vardecl">br</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL</code>, DIMENSION(ifirst-<code class="constant">1</code>:ilast+<code class="constant">1</code>) :: <code class="vardecl">bl_tl</code>, <code class="vardecl">br_tl</code></a>
<a name="xppm0_tlmi288"></a>    <a href="null_p.html#tp_core_modi287" target="origFile"><code class="typename">REAL </code>:: <code class="vardecl">al</code>(<code class="vardecl">ifirst</code>-<code class="constant">1</code>:<code class="vardecl">ilast</code>+<code class="constant">2</code>)</a>
<a name="xppm0_tlmi289"></a>    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL </code>:: <code class="vardecl">al_tl</code>(<code class="vardecl">ifirst</code>-<code class="constant">1</code>:<code class="vardecl">ilast</code>+<code class="constant">2</code>)</a>
<a name="xppm0_tlmi290"></a>    <a href="null_p.html#tp_core_modi288" target="origFile"><code class="typename">REAL </code>:: <code class="vardecl">dm</code>(<code class="vardecl">ifirst</code>-<code class="constant">2</code>:<code class="vardecl">ilast</code>+<code class="constant">2</code>)</a>
<a name="xppm0_tlmi291"></a>    <a href="null_p.html#tp_core_modi289" target="origFile"><code class="typename">REAL </code>:: <code class="vardecl">dq</code>(<code class="vardecl">ifirst</code>-<code class="constant">3</code>:<code class="vardecl">ilast</code>+<code class="constant">2</code>)</a>
<a name="xppm0_tlmi292"></a>    <a href="null_p.html#tp_core_modi290" target="origFile"><code class="typename">LOGICAL </code>:: <code class="vardecl">extm</code>(<code class="vardecl">ifirst</code>-<code class="constant">2</code>:<code class="vardecl">ilast</code>+<code class="constant">2</code>)</a>
<a name="xppm0_tlmi293"></a>    <a href="null_p.html#tp_core_modi291" target="origFile"><code class="typename">INTEGER </code>:: <code class="vardecl">i</code>, <code class="vardecl">j</code>, <code class="vardecl">ie3</code>, <code class="vardecl">is1</code>, <code class="vardecl">ie1</code></a>
<a name="xppm0_tlmi294"></a>    <a href="null_p.html#tp_core_modi292" target="origFile"><code class="typename">REAL </code>:: <code class="vardecl">xt</code>, <code class="vardecl">pmp_1</code>, <code class="vardecl">lac_1</code>, <code class="vardecl">pmp_2</code>, <code class="vardecl">lac_2</code></a>
<a name="xppm0_tlmi295"></a>    <a href="null_p.html#tp_core_modi293" target="origFile"><code class="keyword">INTRINSIC </code><code class="funcname">MAX</code></a>
<a name="xppm0_tlmi296"></a>    <a href="null_p.html#tp_core_modi294" target="origFile"><code class="keyword">INTRINSIC </code><code class="funcname">MIN</code></a>
<a name="xppm0_tlmi297"></a>    <a href="null_p.html#tp_core_modi295" target="origFile"><code class="keyword">INTRINSIC </code><code class="funcname">ABS</code></a>
<a name="xppm0_tlmi298"></a>    <a href="null_p.html#tp_core_modi296" target="origFile"><code class="typename">INTEGER </code>:: <code class="vardecl">abs0</code></a>
<a name="xppm0_tlmi299"></a>    <a href="null_p.html#tp_core_modi297" target="origFile"><code class="keyword">IF</code> (.NOT.nested .AND. grid_type .LT. <code class="constant">3</code>) <code class="keyword">THEN</code></a>
      <a href="null_p.html#tp_core_modi298" target="origFile"><code class="keyword">IF</code> (<code class="constant">3 </code>.LT. is - <code class="constant">1</code>) <code class="keyword">THEN</code></a>
<a name="xppm0_tlmi300"></a>        <a href="null_p.html#tp_core_modi299" target="origFile">is1 = is - <code class="constant">1</code></a>
      <a href="null_p.html#tp_core_modi298" target="origFile"><code class="keyword">ELSE</code></a>
<a name="xppm0_tlmi301"></a>        <a href="null_p.html#tp_core_modi300" target="origFile">is1 = <code class="constant">3</code></a>
<a name="xppm0_tlmi302"></a>      <a href="null_p.html#tp_core_modi298" target="origFile"><code class="keyword">END IF</code></a>
      <a href="null_p.html#tp_core_modi301" target="origFile"><code class="keyword">IF</code> (npx - <code class="constant">2 </code>.GT. ie + <code class="constant">2</code>) <code class="keyword">THEN</code></a>
<a name="xppm0_tlmi303"></a>        <a href="null_p.html#tp_core_modi302" target="origFile">ie3 = ie + <code class="constant">2</code></a>
      <a href="null_p.html#tp_core_modi301" target="origFile"><code class="keyword">ELSE</code></a>
<a name="xppm0_tlmi304"></a>        <a href="null_p.html#tp_core_modi303" target="origFile">ie3 = npx - <code class="constant">2</code></a>
<a name="xppm0_tlmi305"></a>      <a href="null_p.html#tp_core_modi301" target="origFile"><code class="keyword">END IF</code></a>
      <a href="null_p.html#tp_core_modi304" target="origFile"><code class="keyword">IF</code> (npx - <code class="constant">3 </code>.GT. ie + <code class="constant">1</code>) <code class="keyword">THEN</code></a>
<a name="xppm0_tlmi306"></a>        <a href="null_p.html#tp_core_modi305" target="origFile">ie1 = ie + <code class="constant">1</code></a>
      <a href="null_p.html#tp_core_modi304" target="origFile"><code class="keyword">ELSE</code></a>
        <a href="null_p.html#tp_core_modi306" target="origFile">ie1 = npx - <code class="constant">3</code></a>
      <a href="null_p.html#tp_core_modi304" target="origFile"><code class="keyword">END IF</code></a>
      <a href="null_p.html#tp_core_modi297" target="origFile">flux_tl = <code class="constant">0.0</code></a>
      <a href="null_p.html#tp_core_modi297" target="origFile">al_tl = <code class="constant">0.0</code></a>
      <a href="null_p.html#tp_core_modi297" target="origFile">bl_tl = <code class="constant">0.0</code></a>
      <a href="null_p.html#tp_core_modi297" target="origFile">br_tl = <code class="constant">0.0</code></a>
<a name="xppm0_tlmi307"></a>      <a href="null_p.html#tp_core_modi297" target="origFile">q1_tl = <code class="constant">0.0</code></a>
<a name="xppm0_tlmi308"></a>    <a href="null_p.html#tp_core_modi297" target="origFile"><code class="keyword">ELSE</code></a>
<a name="xppm0_tlmi309"></a>      <a href="null_p.html#tp_core_modi307" target="origFile">is1 = is - <code class="constant">1</code></a>
      <a href="null_p.html#tp_core_modi308" target="origFile">ie3 = ie + <code class="constant">2</code></a>
      <a href="null_p.html#tp_core_modi309" target="origFile">ie1 = ie + <code class="constant">1</code></a>
      <a href="null_p.html#tp_core_modi297" target="origFile">flux_tl = <code class="constant">0.0</code></a>
      <a href="null_p.html#tp_core_modi297" target="origFile">al_tl = <code class="constant">0.0</code></a>
      <a href="null_p.html#tp_core_modi297" target="origFile">bl_tl = <code class="constant">0.0</code></a>
      <a href="null_p.html#tp_core_modi297" target="origFile">br_tl = <code class="constant">0.0</code></a>
<a name="xppm0_tlmi335"></a>      <a href="null_p.html#tp_core_modi297" target="origFile">q1_tl = <code class="constant">0.0</code></a>
<a name="xppm0_tlmi311"></a>    <a href="null_p.html#tp_core_modi297" target="origFile"><code class="keyword">END IF</code></a>
<a name="xppm0_tlmi310"></a>    <a href="null_p.html#tp_core_modi335" target="origFile"><code class="keyword">DO </code>j=jfirst,jlast</a>
<a name="xppm0_tlmi310"></a>      <a href="null_p.html#tp_core_modi311" target="origFile"><code class="keyword">DO </code>i=ifirst-ng,ilast+ng</a>
        <a href="null_p.html#tp_core_modi310" target="origFile">q1_tl(i) = q_tl(i, j)</a>
<a name="xppm0_tlmi312"></a>        <a href="null_p.html#tp_core_modi310" target="origFile">q1(i) = q(i, j)</a>
<a name="xppm0_tlmi313"></a>      <a href="null_p.html#tp_core_modi311" target="origFile"><code class="keyword">END DO</code></a>
      <a href="null_p.html#tp_core_modi312" target="origFile"><code class="keyword">IF</code> (iord .GE. <code class="constant">0.</code>) <code class="keyword">THEN</code></a>
<a name="xppm0_tlmi314"></a>        <a href="null_p.html#tp_core_modi313" target="origFile">abs0 = iord</a>
      <a href="null_p.html#tp_core_modi312" target="origFile"><code class="keyword">ELSE</code></a>
<a name="xppm0_tlmi315"></a>        <a href="null_p.html#tp_core_modi314" target="origFile">abs0 = -iord</a>
<a name="xppm0_tlmi317"></a>      <a href="null_p.html#tp_core_modi312" target="origFile"><code class="keyword">END IF</code></a>
      <a href="null_p.html#tp_core_modi315" target="origFile"><code class="keyword">IF</code> (abs0 .LT. <code class="constant">8</code>) <code class="keyword">THEN</code></a>
<a href="null_p.html#tp_core_modi317" target="origFile"><code class="comment">! ord = -5: linear scheme based on PPM 4th order interpolation</code></a>
<a href="null_p.html#tp_core_modi317" target="origFile"><code class="comment">! ord = -6: linear PPM with 2-delta filter</code></a>
<a name="xppm0_tlmi316"></a><a href="null_p.html#tp_core_modi317" target="origFile"><code class="comment">! ord = -7: (-6) with additional Positive definite constraint:</code></a>
        <a href="null_p.html#tp_core_modi317" target="origFile"><code class="keyword">DO </code>i=is1,ie3</a>
<a name="p30"></a><a name="xppm0_tlmi316"></a>          <a href="null_p.html#tp_core_modi316" target="origFile">al_tl(i) = p1*(q1_tl(i-<code class="constant">1</code>)+q1_tl(i)) + p2*(q1_tl(i-<code class="constant">2</code>)+q1_tl(i+<code class="constant">1</code><code class="label">&</code></a>
<a href="null_p.html#tp_core_modi316" target="origFile"><code class="label">&           </code>))</a>
<a name="xppm0_tlmi318"></a>          <a href="msg.html#p30" target="msg"><code class="comment"><img src="danger.gif" align=middle border=0 alt="!" /></code></a><a href="null_p.html#tp_core_modi316" target="origFile">al(i) = p1*(q1(i-<code class="constant">1</code>)+q1(i)) + p2*(q1(i-<code class="constant">2</code>)+q1(i+<code class="constant">1</code>))</a>
<a name="xppm0_tlmi319"></a>        <a href="null_p.html#tp_core_modi317" target="origFile"><code class="keyword">END DO</code></a>
<a name="xppm0_tlmi320"></a>        <a href="null_p.html#tp_core_modi318" target="origFile"><code class="keyword">IF</code> (.NOT.nested .AND. grid_type .LT. <code class="constant">3</code>) <code class="keyword">THEN</code></a>
<a name="p31"></a><a name="xppm0_tlmi320"></a>          <a href="null_p.html#tp_core_modi319" target="origFile"><code class="keyword">IF</code> (is .EQ. <code class="constant">1</code>) <code class="keyword">THEN</code></a>
<a name="xppm0_tlmi321"></a>            <a href="null_p.html#tp_core_modi320" target="origFile">al_tl(<code class="constant">0</code>) = c1*q1_tl(-<code class="constant">2</code>) + c2*q1_tl(-<code class="constant">1</code>) + c3*q1_tl(<code class="constant">0</code>)</a>
            <a href="msg.html#p31" target="msg"><code class="comment"><img src="danger.gif" align=middle border=0 alt="!" /></code></a><a href="null_p.html#tp_core_modi320" target="origFile">al(<code class="constant">0</code>) = c1*q1(-<code class="constant">2</code>) + c2*q1(-<code class="constant">1</code>) + c3*q1(<code class="constant">0</code>)</a>
            <a href="null_p.html#tp_core_modi321" target="origFile">al_tl(<code class="constant">1</code>) = <code class="constant">0.5</code>*(((<code class="constant">2.</code>*dxa(<code class="constant">0</code>, j)+dxa(-<code class="constant">1</code>, j))*q1_tl(<code class="constant">0</code>)-dxa(<code class="constant">0</code>, j<code class="label">&</code></a>
<a name="p32"></a><a name="xppm0_tlmi321"></a><a href="null_p.html#tp_core_modi321" target="origFile"><code class="label">&             </code>)*q1_tl(-<code class="constant">1</code>))/(dxa(-<code class="constant">1</code>, j)+dxa(<code class="constant">0</code>, j))+((<code class="constant">2.</code>*dxa(<code class="constant">1</code>, j)+dxa(<code class="constant">2</code>, <code class="label">&</code></a>
<a href="null_p.html#tp_core_modi321" target="origFile"><code class="label">&             </code>j))*q1_tl(<code class="constant">1</code>)-dxa(<code class="constant">1</code>, j)*q1_tl(<code class="constant">2</code>))/(dxa(<code class="constant">1</code>, j)+dxa(<code class="constant">2</code>, j)))</a>
            <a href="msg.html#p32" target="msg"><code class="comment"><img src="danger.gif" align=middle border=0 alt="!" /></code></a><a href="null_p.html#tp_core_modi321" target="origFile">al(<code class="constant">1</code>) = <code class="constant">0.5</code>*(((<code class="constant">2.</code>*dxa(<code class="constant">0</code>, j)+dxa(-<code class="constant">1</code>, j))*q1(<code class="constant">0</code>)-dxa(<code class="constant">0</code>, j)*q1(-<code class="label">&</code></a>
<a name="xppm0_tlmi322"></a><a href="null_p.html#tp_core_modi321" target="origFile"><code class="label">&             </code><code class="constant">1</code>))/(dxa(-<code class="constant">1</code>, j)+dxa(<code class="constant">0</code>, j))+((<code class="constant">2.</code>*dxa(<code class="constant">1</code>, j)+dxa(<code class="constant">2</code>, j))*q1(<code class="constant">1</code>)<code class="label">&</code></a>
<a name="p33"></a><a name="xppm0_tlmi322"></a><a href="null_p.html#tp_core_modi321" target="origFile"><code class="label">&             </code>-dxa(<code class="constant">1</code>, j)*q1(<code class="constant">2</code>))/(dxa(<code class="constant">1</code>, j)+dxa(<code class="constant">2</code>, j)))</a>
            <a href="null_p.html#tp_core_modi322" target="origFile">al_tl(<code class="constant">2</code>) = c3*q1_tl(<code class="constant">1</code>) + c2*q1_tl(<code class="constant">2</code>) + c1*q1_tl(<code class="constant">3</code>)</a>
<a name="xppm0_tlmi323"></a>            <a href="msg.html#p33" target="msg"><code class="comment"><img src="danger.gif" align=middle border=0 alt="!" /></code></a><a href="null_p.html#tp_core_modi322" target="origFile">al(<code class="constant">2</code>) = c3*q1(<code class="constant">1</code>) + c2*q1(<code class="constant">2</code>) + c1*q1(<code class="constant">3</code>)</a>
<a name="xppm0_tlmi324"></a>          <a href="null_p.html#tp_core_modi319" target="origFile"><code class="keyword">END IF</code></a>
          <a href="null_p.html#tp_core_modi323" target="origFile"><code class="keyword">IF</code> (ie + <code class="constant">1 </code>.EQ. npx) <code class="keyword">THEN</code></a>
<a name="p34"></a><a name="xppm0_tlmi324"></a>            <a href="null_p.html#tp_core_modi324" target="origFile">al_tl(npx-<code class="constant">1</code>) = c1*q1_tl(npx-<code class="constant">3</code>) + c2*q1_tl(npx-<code class="constant">2</code>) + c3*q1_tl(<code class="label">&</code></a>
<a name="xppm0_tlmi325"></a><a href="null_p.html#tp_core_modi324" target="origFile"><code class="label">&             </code>npx-<code class="constant">1</code>)</a>
            <a href="msg.html#p34" target="msg"><code class="comment"><img src="danger.gif" align=middle border=0 alt="!" /></code></a><a href="null_p.html#tp_core_modi324" target="origFile">al(npx-<code class="constant">1</code>) = c1*q1(npx-<code class="constant">3</code>) + c2*q1(npx-<code class="constant">2</code>) + c3*q1(npx-<code class="constant">1</code>)</a>
            <a href="null_p.html#tp_core_modi325" target="origFile">al_tl(npx) = <code class="constant">0.5</code>*(((<code class="constant">2.</code>*dxa(npx-<code class="constant">1</code>, j)+dxa(npx-<code class="constant">2</code>, j))*q1_tl(<code class="label">&</code></a>
<a href="null_p.html#tp_core_modi325" target="origFile"><code class="label">&             </code>npx-<code class="constant">1</code>)-dxa(npx-<code class="constant">1</code>, j)*q1_tl(npx-<code class="constant">2</code>))/(dxa(npx-<code class="constant">2</code>, j)+dxa(npx-<code class="label">&</code></a>
<a name="p35"></a><a name="xppm0_tlmi325"></a><a href="null_p.html#tp_core_modi325" target="origFile"><code class="label">&             </code><code class="constant">1</code>, j))+((<code class="constant">2.</code>*dxa(npx, j)+dxa(npx+<code class="constant">1</code>, j))*q1_tl(npx)-dxa(npx<code class="label">&</code></a>
<a href="null_p.html#tp_core_modi325" target="origFile"><code class="label">&             </code>, j)*q1_tl(npx+<code class="constant">1</code>))/(dxa(npx, j)+dxa(npx+<code class="constant">1</code>, j)))</a>
            <a href="msg.html#p35" target="msg"><code class="comment"><img src="danger.gif" align=middle border=0 alt="!" /></code></a><a href="null_p.html#tp_core_modi325" target="origFile">al(npx) = <code class="constant">0.5</code>*(((<code class="constant">2.</code>*dxa(npx-<code class="constant">1</code>, j)+dxa(npx-<code class="constant">2</code>, j))*q1(npx-<code class="constant">1</code>)-<code class="label">&</code></a>
<a href="null_p.html#tp_core_modi325" target="origFile"><code class="label">&             </code>dxa(npx-<code class="constant">1</code>, j)*q1(npx-<code class="constant">2</code>))/(dxa(npx-<code class="constant">2</code>, j)+dxa(npx-<code class="constant">1</code>, j))+((<code class="label">&</code></a>
<a name="xppm0_tlmi326"></a><a href="null_p.html#tp_core_modi325" target="origFile"><code class="label">&             </code><code class="constant">2.</code>*dxa(npx, j)+dxa(npx+<code class="constant">1</code>, j))*q1(npx)-dxa(npx, j)*q1(npx+<code class="constant">1</code><code class="label">&</code></a>
<a href="null_p.html#tp_core_modi325" target="origFile"><code class="label">&             </code>))/(dxa(npx, j)+dxa(npx+<code class="constant">1</code>, j)))</a>
<a name="p36"></a><a name="xppm0_tlmi326"></a>            <a href="null_p.html#tp_core_modi326" target="origFile">al_tl(npx+<code class="constant">1</code>) = c3*q1_tl(npx) + c2*q1_tl(npx+<code class="constant">1</code>) + c1*q1_tl(<code class="label">&</code></a>
<a href="null_p.html#tp_core_modi326" target="origFile"><code class="label">&             </code>npx+<code class="constant">2</code>)</a>
            <a href="msg.html#p36" target="msg"><code class="comment"><img src="danger.gif" align=middle border=0 alt="!" /></code></a><a href="null_p.html#tp_core_modi326" target="origFile">al(npx+<code class="constant">1</code>) = c3*q1(npx) + c2*q1(npx+<code class="constant">1</code>) + c1*q1(npx+<code class="constant">2</code>)</a>
<a name="xppm0_tlmi327"></a>          <a href="null_p.html#tp_core_modi323" target="origFile"><code class="keyword">END IF</code></a>
<a name="xppm0_tlmi330"></a>        <a href="null_p.html#tp_core_modi318" target="origFile"><code class="keyword">END IF</code></a>
<a name="xppm0_tlmi328"></a>        <a href="null_p.html#tp_core_modi327" target="origFile"><code class="keyword">IF</code> (iord .EQ. -<code class="constant">5</code>) <code class="keyword">THEN</code></a>
<a name="xppm0_tlmi328"></a>          <a href="null_p.html#tp_core_modi330" target="origFile"><code class="keyword">DO </code>i=ifirst-<code class="constant">1</code>,ilast+<code class="constant">1</code></a>
<a name="xppm0_tlmi329"></a>            <a href="null_p.html#tp_core_modi328" target="origFile">bl_tl(i) = al_tl(i) - q1_tl(i)</a>
<a name="xppm0_tlmi329"></a>            <a href="null_p.html#tp_core_modi328" target="origFile">bl(i) = al(i) - q1(i)</a>
            <a href="null_p.html#tp_core_modi329" target="origFile">br_tl(i) = al_tl(i+<code class="constant">1</code>) - q1_tl(i)</a>
            <a href="null_p.html#tp_core_modi329" target="origFile">br(i) = al(i+<code class="constant">1</code>) - q1(i)</a>
          <a href="null_p.html#tp_core_modi330" target="origFile"><code class="keyword">END DO</code></a>
<a name="xppm0_tlmi334"></a>        <a href="null_p.html#tp_core_modi327" target="origFile"><code class="keyword">END IF</code></a>
<a name="xppm0_tlmi331"></a>      <a href="null_p.html#tp_core_modi315" target="origFile"><code class="keyword">END IF</code></a>
<a name="xppm0_tlmi332"></a>      <a href="null_p.html#tp_core_modi334" target="origFile"><code class="keyword">DO </code>i=ifirst,ilast+<code class="constant">1</code></a>
        <a href="null_p.html#tp_core_modi331" target="origFile"><code class="keyword">IF</code> (c(i, j) .GT. <code class="constant">0.</code>) <code class="keyword">THEN</code></a>
<a name="xppm0_tlmi332"></a>          <a href="null_p.html#tp_core_modi332" target="origFile">flux_tl(i, j) = q1_tl(i-<code class="constant">1</code>) + (<code class="constant">1.</code>-c(i, j))*(br_tl(i-<code class="constant">1</code>)-c(i, j)*<code class="label">&</code></a>
<a href="null_p.html#tp_core_modi332" target="origFile"><code class="label">&           </code>(bl_tl(i-<code class="constant">1</code>)+br_tl(i-<code class="constant">1</code>)))</a>
          <a href="null_p.html#tp_core_modi332" target="origFile">flux(i, j) = q1(i-<code class="constant">1</code>) + (<code class="constant">1.</code>-c(i, j))*(br(i-<code class="constant">1</code>)-c(i, j)*(bl(i-<code class="constant">1</code>)+<code class="label">&</code></a>
<a name="xppm0_tlmi333"></a><a href="null_p.html#tp_core_modi332" target="origFile"><code class="label">&           </code>br(i-<code class="constant">1</code>)))</a>
        <a href="null_p.html#tp_core_modi331" target="origFile"><code class="keyword">ELSE</code></a>
<a name="xppm0_tlmi333"></a>          <a href="null_p.html#tp_core_modi333" target="origFile">flux_tl(i, j) = q1_tl(i) + (<code class="constant">1.</code>+c(i, j))*(bl_tl(i)+c(i, j)*(<code class="label">&</code></a>
<a href="null_p.html#tp_core_modi333" target="origFile"><code class="label">&           </code>bl_tl(i)+br_tl(i)))</a>
          <a href="null_p.html#tp_core_modi333" target="origFile">flux(i, j) = q1(i) + (<code class="constant">1.</code>+c(i, j))*(bl(i)+c(i, j)*(bl(i)+br(i))<code class="label">&</code></a>
<a href="null_p.html#tp_core_modi333" target="origFile"><code class="label">&           </code>)</a>
        <a href="null_p.html#tp_core_modi331" target="origFile"><code class="keyword">END IF</code></a>
      <a href="null_p.html#tp_core_modi334" target="origFile"><code class="keyword">END DO</code></a>
<a name="xppm0"></a>    <a href="null_p.html#tp_core_modi335" target="origFile"><code class="keyword">END DO</code></a>
  <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END SUBROUTINE </code><code class="funcname">XPPM0_TLM</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!#ifdef XPPM_2D</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! subroutine xppm0(flux, q, c, iord, ifirst, ilast, jfirst, jlast, npx, npy, bd, dxa, nested, grid_type)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! type(fv_grid_bounds_type), intent(IN) :: bd</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! integer, INTENT(IN) :: ifirst, ilast               !  X-Dir strip</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! integer, INTENT(IN) :: jfirst, jlast               !  Y-Dir strip</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! integer, INTENT(IN) :: iord</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! integer, INTENT(IN) :: npx, npy</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! real   , INTENT(IN) :: q(ifirst-ng:ilast+ng,jfirst:jlast)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! real   , INTENT(IN) :: c(ifirst   :ilast+1 ,jfirst:jlast) ! Courant   N (like FLUX)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! real   , intent(IN) :: dxa(bd%isd:bd%ied,bd%jsd:bd%jed)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! logical, intent(IN) :: nested</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! integer, intent(IN) :: grid_type</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!! !OUTPUT PARAMETERS:</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! real  , INTENT(OUT) :: flux(ifirst:ilast+1,jfirst:jlast) !  Flux</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!! Local</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! real, dimension(3*jfirst:3*jlast+2) :: q_tmp, bl_tmp, br_tmp</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! real, dimension(ifirst-1:ilast+1,jfirst:jlast):: bl, br</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! real  al(ifirst-1:ilast+2,jfirst:jlast)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! real  dm(ifirst-2:ilast+2,jfirst:jlast)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! real  dq(ifirst-3:ilast+2,jfirst:jlast)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! logical extm(ifirst-2:ilast+2,jfirst:jlast)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! integer i, j, ie3, is1, ie1</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! real xt, pmp_1, lac_1, pmp_2, lac_2</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! if ( .not. nested .and. grid_type&lt;3 ) then</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!    is1 = max(3,is-1);  ie3 = min(npx-2,ie+2)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!                        ie1 = min(npx-3,ie+1)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! else</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!    is1 = is-1;         ie3 = ie+2</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!                        ie1 = ie+1</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! end if</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! if ( abs(iord) &lt; 8 ) then</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!    ! ord = -5: linear scheme based on PPM 4th order interpolation</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!    ! ord = -6: linear PPM with 2-delta filter</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!    ! ord = -7: (-6) with additional Positive definite constraint:</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!    do j=jfirst,jlast</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!       do i=is1, ie3</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!          al(i,j) = p1*(q(i-1,j)+q(i,j)) + p2*(q(i-2,j)+q(i+1,j))</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!       enddo</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!    enddo</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!    if ( .not. nested .and. grid_type&lt;3 ) then</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!       if ( is==1 ) then</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!          do j=jfirst,jlast</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!             al(0,j) = c1*q(-2,j) + c2*q(-1,j) + c3*q(0,j)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!             al(1,j) = 0.5*(((2.*dxa(0,j)+dxa(-1,j))*q(0,j)-dxa(0,j)*q(-1,j))/(dxa(-1,j)+dxa(0,j)) &</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!                  +      ((2.*dxa(1,j)+dxa( 2,j))*q(1,j)-dxa(1,j)*q(2,j))/(dxa(1, j)+dxa(2,j)))</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!             al(2,j) = c3*q(1,j) + c2*q(2,j) +c1*q(3,j)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!          enddo</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!          if(iord==-7) then</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!             do j=jfirst,jlast</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!                al(0,j) = max(0., al(0,j))</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!                al(1,j) = max(0., al(1,j))</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!                al(2,j) = max(0., al(2,j))</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!             enddo</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!          endif</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!       endif</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!       if ( (ie+1)==npx ) then</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!          do j=jfirst,jlast</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!             al(npx-1,j) = c1*q(npx-3,j) + c2*q(npx-2,j) + c3*q(npx-1,j)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!             al(npx,j) = 0.5*(((2.*dxa(npx-1,j)+dxa(npx-2,j))*q(npx-1,j)-dxa(npx-1,j)*q(npx-2,j))/(dxa(npx-2,j)+dxa(npx-1,j)) &</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!                  +      ((2.*dxa(npx,  j)+dxa(npx+1,j))*q(npx,j)-dxa(npx,  j)*q(npx+1,j))/(dxa(npx,  j)+dxa(npx+1,j)))</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!             al(npx+1,j) = c3*q(npx,j) + c2*q(npx+1,j) + c1*q(npx+2,j)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!          enddo</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!          if(iord==-7) then</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!             do j=jfirst,jlast</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!                al(npx-1,j) = max(0., al(npx-1,j))</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!                al(npx,  j) = max(0., al(npx  ,j))</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!                al(npx+1,j) = max(0., al(npx+1,j))</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!             enddo</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!          endif</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!       endif</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!    endif</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!    if ( iord==-5 ) then</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!       do j=jfirst,jlast</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!          do i=ifirst-1,ilast+1</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!             bl(i,j) = al(i,j)   - q(i,j)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!             br(i,j) = al(i+1,j) - q(i,j)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!          enddo</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!       enddo</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!    else</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!       do j=jfirst,jlast</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!          do i=ifirst-3,ilast+2</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!             dq(i,j) = q(i+1,j) - q(i,j)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!          enddo</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!       enddo</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!       do j=jfirst,jlast</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!          do i=ifirst-2, ilast+2</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!             if ( dq(i-1,j)*dq(i,j) &gt; 0. ) then</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!                extm(i,j) = .false.</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!             else</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!                extm(i,j) = .true.</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!             endif</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!          enddo</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!       enddo</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!       do j=jfirst,jlast</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!          do i=ifirst-1,ilast+1</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!             if ( extm(i-1,j).and.extm(i,j).and.extm(i+1,j) ) then</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!                bl(i,j) = 0.</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!                br(i,j) = 0.</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!             else</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!                bl(i,j) = al(i,j)   - q(i,j)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!                br(i,j) = al(i+1,j) - q(i,j)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!             endif</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!          enddo</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!       enddo</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!       ! Additional positive definite constraint:</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!       if(iord==-7) call pert_ppm(ilast-ifirst+3, q(ifirst-1,j), bl(ifirst-1,j), br(ifirst-1,j), 0)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!    endif</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! else</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!! Monotonic constraints:</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!! ord = 8: PPM with Lin's PPM fast monotone constraint</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!! ord = 10: PPM with Lin's modification of Huynh 2nd constraint</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!! ord = 13: 10 plus positive definite constraint</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!    do j=jfirst,jlast</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!!DEC$ VECTOR ALWAYS</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!       do i=is-2,ie+2</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!          xt = 0.25*(q(i+1,j) - q(i-1,j))</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!          dm(i,j) = sign(min(abs(xt), max(q(i-1,j), q(i,j), q(i+1,j)) - q(i,j),  &</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!               q(i,j) - min(q(i-1,j), q(i,j), q(i+1,j))), xt)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!       enddo</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!    enddo</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!    do j=jfirst,jlast</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!!DEC$ VECTOR ALWAYS</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!       do i=is1,ie1+1</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!          al(i,j) = 0.5*(q(i-1,j)+q(i,j)) + r3*(dm(i-1,j)-dm(i,j))</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!       enddo</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!    enddo</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!    if ( iord==-8 ) then</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!       do j=jfirst,jlast</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!!DEC$ VECTOR ALWAYS</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!          do i=is1, ie1</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!             xt = 2.*dm(i,j)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!             bl(i,j) = -sign(min(abs(xt), abs(al(i,j  )-q(i,j))), xt)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!             br(i,j) =  sign(min(abs(xt), abs(al(i+1,j)-q(i,j))), xt)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!          enddo</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!       enddo</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!    else</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!       do j=jfirst,jlast</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!          do i=is1-2, ie1+1</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!             dq(i,j) = q(i+1,j) - q(i,j)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!          enddo</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!       enddo</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!       do j=jfirst,jlast</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!          do i=is1, ie1</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!             bl(i,j) = al(i,j  ) - q(i,j)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!             br(i,j) = al(i+1,j) - q(i,j)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!             if ( abs(dm(i-1,j))+abs(dm(i,j))+abs(dm(i+1,j)) &lt; near_zero ) then</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!                bl(i,j) = 0.</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!                br(i,j) = 0.</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!             elseif( abs(3.*(bl(i,j)+br(i,j))) &gt; abs(bl(i,j)-br(i,j)) ) then</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!                pmp_1 = -(dq(i,j) + dq(i,j))</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!                lac_1 = pmp_1 + 1.5*dq(i+1,j)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!                bl(i,j) = min( max(0., pmp_1, lac_1), max(bl(i,j), min(0., pmp_1, lac_1)) )</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!                pmp_2 = dq(i-1,j) + dq(i-1,j)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!                lac_2 = pmp_2 - 1.5*dq(i-2,j)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!                br(i,j) = min( max(0., pmp_2, lac_2), max(br(i,j), min(0., pmp_2, lac_2)) )</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!             endif</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!          enddo</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!       enddo</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!    endif</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!    ! Positive definite constraint:</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!    if(iord==-9 .or. iord==-13) call pert_ppm(ie1-is1+1, q(is1,j), bl(is1,j), br(is1,j), 0)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!    if (.not. nested .and. grid_type&lt;3) then</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!       if ( is==1 ) then</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!          do j=jfirst,jlast</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!             bl_tmp(3*j) = s14*dm(-1,j) + s11*(q(-1,j)-q(0,j))</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!             xt = 0.5*(((2.*dxa(0,j)+dxa(-1,j))*q(0,j)-dxa(0,j)*q(-1,j))/(dxa(-1,j)+dxa(0,j)) &</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!                  +      ((2.*dxa(1,j)+dxa( 2,j))*q(1,j)-dxa(1,j)*q(2,j))/(dxa(1, j)+dxa(2,j)))</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!             br_tmp(3*j) = xt - q(0,j)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!             bl_tmp(3*j+1) = xt - q(1,j)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!             xt = s15*q(1,j) + s11*q(2,j) - s14*dm(2,j)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!             br_tmp(3*j+1) = xt - q(1,j)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!             bl_tmp(3*j+2) = xt - q(2,j)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!             br_tmp(3*j+2) = al(3,j) - q(2,j)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!             q_tmp(j*3:j*3+2) = q(0:2,j)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!          enddo</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!          call pert_ppm(3*(jlast-jfirst+1), q_tmp, bl_tmp, br_tmp, 1)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!          do j=jfirst,jlast</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!             bl(0:2,j) = bl_tmp(j*3:j*3+2)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!             br(0:2,j) = br_tmp(j*3:j*3+2)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!          enddo</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!      endif</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!      if ( (ie+1)==npx ) then</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!         do j=jfirst,jlast</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!            bl_tmp(3*j) = al(npx-2,j) - q(npx-2,j)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!            xt = s15*q(npx-1,j) + s11*q(npx-2,j) + s14*dm(npx-2,j)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!            br_tmp(3*j) = xt - q(npx-2,j)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!            bl_tmp(3*j+1) = xt - q(npx-1,j)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!            xt = 0.5*(((2.*dxa(npx-1,j)+dxa(npx-2,j))*q(npx-1,j)-dxa(npx-1,j)*q(npx-2,j))/(dxa(npx-2,j)+dxa(npx-1,j)) &</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!               +      ((2.*dxa(npx,  j)+dxa(npx+1,j))*q(npx,j  )-dxa(npx,  j)*q(npx+1,j))/(dxa(npx,  j)+dxa(npx+1,j)))</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!            br_tmp(3*j+1) = xt - q(npx-1,j)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!            bl_tmp(3*j+2) = xt - q(npx,j  )</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!            br_tmp(3*j+2) = s11*(q(npx+1,j)-q(npx,j)) - s14*dm(npx+1,j)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!            q_tmp(j*3:j*3+2) = q(npx-2:npx,j)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!         enddo</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!         call pert_ppm(3*(jlast-jfirst+1), q_tmp, bl_tmp, br_tmp, 1)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!         do j=jfirst,jlast</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!            bl(npx-2:npx,j) = bl_tmp(j*3:j*3+2)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!            br(npx-2:npx,j) = br_tmp(j*3:j*3+2)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!         enddo</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!      endif</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!    endif</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!  endif</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!  do j=jfirst,jlast</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!!DEC$ VECTOR ALWAYS</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!     do i=ifirst,ilast+1</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!        if( c(i,j)&gt;0. ) then</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!           flux(i,j) = q(i-1,j) + (1.-c(i,j))*(br(i-1,j)-c(i,j)*(bl(i-1,j)+br(i-1,j)))</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!        else</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!           flux(i,j) = q(i,j  ) + (1.+c(i,j))*(bl(i,j  )+c(i,j)*(bl(i,j  )+br(i,j  )))</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!        endif</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!     enddo</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!  enddo</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! end subroutine xppm0</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!#else</code></a>
  <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">SUBROUTINE </code><code class="funcname">XPPM0</code>(<code class="vardecl">flux</code>, <code class="vardecl">q</code>, <code class="vardecl">c</code>, <code class="vardecl">iord</code>, <code class="vardecl">ifirst</code>, <code class="vardecl">ilast</code>, <code class="vardecl">jfirst</code>, <code class="vardecl">jlast</code>, <code class="vardecl">npx</code>, <code class="label">&</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="label">&   </code><code class="vardecl">npy</code>)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IMPLICIT NONE</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!  X-Dir strip</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">ifirst</code>, <code class="vardecl">ilast</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!  Y-Dir strip</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">jfirst</code>, <code class="vardecl">jlast</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">iord</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">npx</code>, <code class="vardecl">npy</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">q</code>(<code class="vardecl">ifirst</code>-<code class="vardecl">ng</code>:<code class="vardecl">ilast</code>+<code class="vardecl">ng</code>, <code class="vardecl">jfirst</code>:<code class="vardecl">jlast</code>)</a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! Courant   N (like FLUX)</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">c</code>(<code class="vardecl">ifirst</code>:<code class="vardecl">ilast</code>+<code class="constant">1</code>, <code class="vardecl">jfirst</code>:<code class="vardecl">jlast</code>)</a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! !OUTPUT PARAMETERS:</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!  Flux</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL</code>, <code class="typename">INTENT(OUT) </code>:: <code class="vardecl">flux</code>(<code class="vardecl">ifirst</code>:<code class="vardecl">ilast</code>+<code class="constant">1</code>, <code class="vardecl">jfirst</code>:<code class="vardecl">jlast</code>)</a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! Local</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL</code>, <code class="typename">DIMENSION(</code>ifirst-ng:ilast+ng<code class="typename">) </code>:: <code class="vardecl">q1</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL</code>, <code class="typename">DIMENSION(</code>ifirst-<code class="constant">1</code>:ilast+<code class="constant">1</code><code class="typename">) </code>:: <code class="vardecl">bl</code>, <code class="vardecl">br</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL </code>:: <code class="vardecl">al</code>(<code class="vardecl">ifirst</code>-<code class="constant">1</code>:<code class="vardecl">ilast</code>+<code class="constant">2</code>)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL </code>:: <code class="vardecl">dm</code>(<code class="vardecl">ifirst</code>-<code class="constant">2</code>:<code class="vardecl">ilast</code>+<code class="constant">2</code>)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL </code>:: <code class="vardecl">dq</code>(<code class="vardecl">ifirst</code>-<code class="constant">3</code>:<code class="vardecl">ilast</code>+<code class="constant">2</code>)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">LOGICAL </code>:: <code class="vardecl">extm</code>(<code class="vardecl">ifirst</code>-<code class="constant">2</code>:<code class="vardecl">ilast</code>+<code class="constant">2</code>)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">INTEGER </code>:: <code class="vardecl">i</code>, <code class="vardecl">j</code>, <code class="vardecl">ie3</code>, <code class="vardecl">is1</code>, <code class="vardecl">ie1</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL </code>:: <code class="vardecl">xt</code>, <code class="vardecl">pmp_1</code>, <code class="vardecl">lac_1</code>, <code class="vardecl">pmp_2</code>, <code class="vardecl">lac_2</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">INTRINSIC </code><code class="funcname">MAX</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">INTRINSIC </code><code class="funcname">MIN</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">INTRINSIC </code><code class="funcname">ABS</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">INTEGER </code>:: <code class="vardecl">abs0</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IF</code> (.NOT.nested .AND. grid_type .LT. <code class="constant">3</code>) <code class="keyword">THEN</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IF</code> (<code class="constant">3 </code>.LT. is - <code class="constant">1</code>) <code class="keyword">THEN</code></a>
        <a href="null_p.html#tp_core_mod" target="origFile">is1 = is - <code class="constant">1</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">ELSE</code></a>
        <a href="null_p.html#tp_core_mod" target="origFile">is1 = <code class="constant">3</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END IF</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IF</code> (npx - <code class="constant">2 </code>.GT. ie + <code class="constant">2</code>) <code class="keyword">THEN</code></a>
        <a href="null_p.html#tp_core_mod" target="origFile">ie3 = ie + <code class="constant">2</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">ELSE</code></a>
        <a href="null_p.html#tp_core_mod" target="origFile">ie3 = npx - <code class="constant">2</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END IF</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IF</code> (npx - <code class="constant">3 </code>.GT. ie + <code class="constant">1</code>) <code class="keyword">THEN</code></a>
        <a href="null_p.html#tp_core_mod" target="origFile">ie1 = ie + <code class="constant">1</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">ELSE</code></a>
        <a href="null_p.html#tp_core_mod" target="origFile">ie1 = npx - <code class="constant">3</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END IF</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">ELSE</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile">is1 = is - <code class="constant">1</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile">ie3 = ie + <code class="constant">2</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile">ie1 = ie + <code class="constant">1</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END IF</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>j=jfirst,jlast</a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>i=ifirst-ng,ilast+ng</a>
        <a href="null_p.html#tp_core_mod" target="origFile">q1(i) = q(i, j)</a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IF</code> (iord .GE. <code class="constant">0.</code>) <code class="keyword">THEN</code></a>
        <a href="null_p.html#tp_core_mod" target="origFile">abs0 = iord</a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">ELSE</code></a>
        <a href="null_p.html#tp_core_mod" target="origFile">abs0 = -iord</a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END IF</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IF</code> (abs0 .LT. <code class="constant">8</code>) <code class="keyword">THEN</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! ord = -5: linear scheme based on PPM 4th order interpolation</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! ord = -6: linear PPM with 2-delta filter</code></a>
<a name="p30"></a><a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! ord = -7: (-6) with additional Positive definite constraint:</code></a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>i=is1,ie3</a>
          <a href="msg.html#p30" target="msg"><code class="comment"><img src="danger.gif" align=middle border=0 alt="!" /></code></a><a href="null_p.html#tp_core_mod" target="origFile">al(i) = p1*(q1(i-<code class="constant">1</code>)+q1(i)) + p2*(q1(i-<code class="constant">2</code>)+q1(i+<code class="constant">1</code>))</a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
<a name="p31"></a>        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IF</code> (.NOT.nested .AND. grid_type .LT. <code class="constant">3</code>) <code class="keyword">THEN</code></a>
<a name="p32"></a>          <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IF</code> (is .EQ. <code class="constant">1</code>) <code class="keyword">THEN</code></a>
            <a href="msg.html#p31" target="msg"><code class="comment"><img src="danger.gif" align=middle border=0 alt="!" /></code></a><a href="null_p.html#tp_core_mod" target="origFile">al(<code class="constant">0</code>) = c1*q1(-<code class="constant">2</code>) + c2*q1(-<code class="constant">1</code>) + c3*q1(<code class="constant">0</code>)</a>
            <a href="msg.html#p32" target="msg"><code class="comment"><img src="danger.gif" align=middle border=0 alt="!" /></code></a><a href="null_p.html#tp_core_mod" target="origFile">al(<code class="constant">1</code>) = <code class="constant">0.5</code>*(((<code class="constant">2.</code>*dxa(<code class="constant">0</code>, j)+dxa(-<code class="constant">1</code>, j))*q1(<code class="constant">0</code>)-dxa(<code class="constant">0</code>, j)*q1(-<code class="label">&</code></a>
<a name="p33"></a><a href="null_p.html#tp_core_mod" target="origFile"><code class="label">&             </code><code class="constant">1</code>))/(dxa(-<code class="constant">1</code>, j)+dxa(<code class="constant">0</code>, j))+((<code class="constant">2.</code>*dxa(<code class="constant">1</code>, j)+dxa(<code class="constant">2</code>, j))*q1(<code class="constant">1</code>)<code class="label">&</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="label">&             </code>-dxa(<code class="constant">1</code>, j)*q1(<code class="constant">2</code>))/(dxa(<code class="constant">1</code>, j)+dxa(<code class="constant">2</code>, j)))</a>
            <a href="msg.html#p33" target="msg"><code class="comment"><img src="danger.gif" align=middle border=0 alt="!" /></code></a><a href="null_p.html#tp_core_mod" target="origFile">al(<code class="constant">2</code>) = c3*q1(<code class="constant">1</code>) + c2*q1(<code class="constant">2</code>) + c1*q1(<code class="constant">3</code>)</a>
<a name="p34"></a>          <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END IF</code></a>
<a name="p35"></a>          <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IF</code> (ie + <code class="constant">1 </code>.EQ. npx) <code class="keyword">THEN</code></a>
            <a href="msg.html#p34" target="msg"><code class="comment"><img src="danger.gif" align=middle border=0 alt="!" /></code></a><a href="null_p.html#tp_core_mod" target="origFile">al(npx-<code class="constant">1</code>) = c1*q1(npx-<code class="constant">3</code>) + c2*q1(npx-<code class="constant">2</code>) + c3*q1(npx-<code class="constant">1</code>)</a>
            <a href="msg.html#p35" target="msg"><code class="comment"><img src="danger.gif" align=middle border=0 alt="!" /></code></a><a href="null_p.html#tp_core_mod" target="origFile">al(npx) = <code class="constant">0.5</code>*(((<code class="constant">2.</code>*dxa(npx-<code class="constant">1</code>, j)+dxa(npx-<code class="constant">2</code>, j))*q1(npx-<code class="constant">1</code>)-<code class="label">&</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="label">&             </code>dxa(npx-<code class="constant">1</code>, j)*q1(npx-<code class="constant">2</code>))/(dxa(npx-<code class="constant">2</code>, j)+dxa(npx-<code class="constant">1</code>, j))+((<code class="label">&</code></a>
<a name="p36"></a><a href="null_p.html#tp_core_mod" target="origFile"><code class="label">&             </code><code class="constant">2.</code>*dxa(npx, j)+dxa(npx+<code class="constant">1</code>, j))*q1(npx)-dxa(npx, j)*q1(npx+<code class="constant">1</code><code class="label">&</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="label">&             </code>))/(dxa(npx, j)+dxa(npx+<code class="constant">1</code>, j)))</a>
            <a href="msg.html#p36" target="msg"><code class="comment"><img src="danger.gif" align=middle border=0 alt="!" /></code></a><a href="null_p.html#tp_core_mod" target="origFile">al(npx+<code class="constant">1</code>) = c3*q1(npx) + c2*q1(npx+<code class="constant">1</code>) + c1*q1(npx+<code class="constant">2</code>)</a>
          <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END IF</code></a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END IF</code></a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IF</code> (iord .EQ. -<code class="constant">5</code>) <code class="keyword">THEN</code></a>
          <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>i=ifirst-<code class="constant">1</code>,ilast+<code class="constant">1</code></a>
            <a href="null_p.html#tp_core_mod" target="origFile">bl(i) = al(i) - q1(i)</a>
            <a href="null_p.html#tp_core_mod" target="origFile">br(i) = al(i+<code class="constant">1</code>) - q1(i)</a>
          <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END IF</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END IF</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>i=ifirst,ilast+<code class="constant">1</code></a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IF</code> (c(i, j) .GT. <code class="constant">0.</code>) <code class="keyword">THEN</code></a>
          <a href="null_p.html#tp_core_mod" target="origFile">flux(i, j) = q1(i-<code class="constant">1</code>) + (<code class="constant">1.</code>-c(i, j))*(br(i-<code class="constant">1</code>)-c(i, j)*(bl(i-<code class="constant">1</code>)+<code class="label">&</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="label">&           </code>br(i-<code class="constant">1</code>)))</a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">ELSE</code></a>
          <a href="null_p.html#tp_core_mod" target="origFile">flux(i, j) = q1(i) + (<code class="constant">1.</code>+c(i, j))*(bl(i)+c(i, j)*(bl(i)+br(i))<code class="label">&</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="label">&           </code>)</a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END IF</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
<a name="yppm0_tlm"></a>    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
  <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END SUBROUTINE </code><code class="funcname">XPPM0</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!  Differentiation of yppm0 in forward (tangent) mode:</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!   variations   of useful results: flux</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!   with respect to varying inputs: q</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!#endif</code></a>
  <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">SUBROUTINE </code><code class="funcname">YPPM0_TLM</code>(<code class="vardecl">flux</code>, <code class="vardecl">flux_tl</code>, <code class="vardecl">q</code>, <code class="vardecl">q_tl</code>, <code class="vardecl">c</code>, <code class="vardecl">jord</code>, <code class="vardecl">ifirst</code>, <code class="vardecl">ilast</code>, <code class="label">&</code></a>
<a name="yppm0_tlmi218"></a><a href="null_p.html#tp_core_mod" target="origFile"><code class="label">&   </code><code class="vardecl">jfirst</code>, <code class="vardecl">jlast</code>, <code class="vardecl">npx</code>, <code class="vardecl">npy</code>)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IMPLICIT NONE</code></a>
<a name="yppm0_tlmi219"></a><a href="null_p.html#tp_core_modi218" target="origFile"><code class="comment">!  X-Dir strip</code></a>
    <a href="null_p.html#tp_core_modi218" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">ifirst</code>, <code class="vardecl">ilast</code></a>
<a name="yppm0_tlmi220"></a><a href="null_p.html#tp_core_modi219" target="origFile"><code class="comment">!  Y-Dir strip</code></a>
<a name="yppm0_tlmi221"></a>    <a href="null_p.html#tp_core_modi219" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">jfirst</code>, <code class="vardecl">jlast</code></a>
<a name="yppm0_tlmi222"></a>    <a href="null_p.html#tp_core_modi220" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">jord</code></a>
    <a href="null_p.html#tp_core_modi221" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">npx</code>, <code class="vardecl">npy</code></a>
<a name="yppm0_tlmi223"></a>    <a href="null_p.html#tp_core_modi222" target="origFile"><code class="typename">REAL</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">q</code>(<code class="vardecl">ifirst</code>:<code class="vardecl">ilast</code>, <code class="vardecl">jfirst</code>-<code class="vardecl">ng</code>:<code class="vardecl">jlast</code>+<code class="vardecl">ng</code>)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">q_tl</code>(<code class="vardecl">ifirst</code>:<code class="vardecl">ilast</code>, <code class="vardecl">jfirst</code>-<code class="vardecl">ng</code>:<code class="vardecl">jlast</code>+<code class="vardecl">ng</code>)</a>
<a name="yppm0_tlmi224"></a><a href="null_p.html#tp_core_modi223" target="origFile"><code class="comment">! Courant number</code></a>
    <a href="null_p.html#tp_core_modi223" target="origFile"><code class="typename">REAL</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">c</code>(<code class="vardecl">isd</code>:<code class="vardecl">ied</code>, <code class="vardecl">js</code>:<code class="vardecl">je</code>+<code class="constant">1</code>)</a>
<a href="null_p.html#tp_core_modi224" target="origFile"><code class="comment">!  Flux</code></a>
<a name="yppm0_tlmi225"></a>    <a href="null_p.html#tp_core_modi224" target="origFile"><code class="typename">REAL</code>, <code class="typename">INTENT(OUT) </code>:: <code class="vardecl">flux</code>(<code class="vardecl">ifirst</code>:<code class="vardecl">ilast</code>, <code class="vardecl">jfirst</code>:<code class="vardecl">jlast</code>+<code class="constant">1</code>)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL</code>, <code class="typename">INTENT(OUT) </code>:: <code class="vardecl">flux_tl</code>(<code class="vardecl">ifirst</code>:<code class="vardecl">ilast</code>, <code class="vardecl">jfirst</code>:<code class="vardecl">jlast</code>+<code class="constant">1</code>)</a>
<a name="yppm0_tlmi226"></a><a href="null_p.html#tp_core_modi225" target="origFile"><code class="comment">! Local:</code></a>
    <a href="null_p.html#tp_core_modi225" target="origFile"><code class="typename">REAL </code>:: <code class="vardecl">dm</code>(<code class="vardecl">ifirst</code>:<code class="vardecl">ilast</code>, <code class="vardecl">jfirst</code>-<code class="constant">2</code>:<code class="vardecl">jlast</code>+<code class="constant">2</code>)</a>
<a name="yppm0_tlmi227"></a>    <a href="null_p.html#tp_core_modi226" target="origFile"><code class="typename">REAL </code>:: <code class="vardecl">al</code>(<code class="vardecl">ifirst</code>:<code class="vardecl">ilast</code>, <code class="vardecl">jfirst</code>-<code class="constant">1</code>:<code class="vardecl">jlast</code>+<code class="constant">2</code>)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL </code>:: <code class="vardecl">al_tl</code>(<code class="vardecl">ifirst</code>:<code class="vardecl">ilast</code>, <code class="vardecl">jfirst</code>-<code class="constant">1</code>:<code class="vardecl">jlast</code>+<code class="constant">2</code>)</a>
<a name="yppm0_tlmi228"></a>    <a href="null_p.html#tp_core_modi227" target="origFile"><code class="typename">REAL </code>:: <code class="vardecl">bl</code>(<code class="vardecl">ifirst</code>:<code class="vardecl">ilast</code>, <code class="vardecl">jfirst</code>-<code class="constant">1</code>:<code class="vardecl">jlast</code>+<code class="constant">1</code>)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL </code>:: <code class="vardecl">bl_tl</code>(<code class="vardecl">ifirst</code>:<code class="vardecl">ilast</code>, <code class="vardecl">jfirst</code>-<code class="constant">1</code>:<code class="vardecl">jlast</code>+<code class="constant">1</code>)</a>
<a name="yppm0_tlmi229"></a>    <a href="null_p.html#tp_core_modi228" target="origFile"><code class="typename">REAL </code>:: <code class="vardecl">br</code>(<code class="vardecl">ifirst</code>:<code class="vardecl">ilast</code>, <code class="vardecl">jfirst</code>-<code class="constant">1</code>:<code class="vardecl">jlast</code>+<code class="constant">1</code>)</a>
<a name="yppm0_tlmi230"></a>    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL </code>:: <code class="vardecl">br_tl</code>(<code class="vardecl">ifirst</code>:<code class="vardecl">ilast</code>, <code class="vardecl">jfirst</code>-<code class="constant">1</code>:<code class="vardecl">jlast</code>+<code class="constant">1</code>)</a>
<a name="yppm0_tlmi231"></a>    <a href="null_p.html#tp_core_modi229" target="origFile"><code class="typename">REAL </code>:: <code class="vardecl">dq</code>(<code class="vardecl">ifirst</code>:<code class="vardecl">ilast</code>, <code class="vardecl">jfirst</code>-<code class="constant">3</code>:<code class="vardecl">jlast</code>+<code class="constant">2</code>)</a>
<a name="yppm0_tlmi232"></a>    <a href="null_p.html#tp_core_modi230" target="origFile"><code class="typename">LOGICAL </code>:: <code class="vardecl">extm</code>(<code class="vardecl">ifirst</code>:<code class="vardecl">ilast</code>, <code class="vardecl">jfirst</code>-<code class="constant">2</code>:<code class="vardecl">jlast</code>+<code class="constant">2</code>)</a>
<a name="yppm0_tlmi233"></a>    <a href="null_p.html#tp_core_modi231" target="origFile"><code class="typename">REAL </code>:: <code class="vardecl">xt</code>, <code class="vardecl">pmp_1</code>, <code class="vardecl">lac_1</code>, <code class="vardecl">pmp_2</code>, <code class="vardecl">lac_2</code></a>
<a name="yppm0_tlmi234"></a>    <a href="null_p.html#tp_core_modi232" target="origFile"><code class="typename">INTEGER </code>:: <code class="vardecl">i</code>, <code class="vardecl">j</code>, <code class="vardecl">js1</code>, <code class="vardecl">je3</code>, <code class="vardecl">je1</code></a>
<a name="yppm0_tlmi235"></a>    <a href="null_p.html#tp_core_modi233" target="origFile"><code class="keyword">INTRINSIC </code><code class="funcname">MAX</code></a>
<a name="yppm0_tlmi236"></a>    <a href="null_p.html#tp_core_modi234" target="origFile"><code class="keyword">INTRINSIC </code><code class="funcname">MIN</code></a>
<a name="yppm0_tlmi237"></a>    <a href="null_p.html#tp_core_modi235" target="origFile"><code class="keyword">INTRINSIC </code><code class="funcname">ABS</code></a>
<a name="yppm0_tlmi238"></a>    <a href="null_p.html#tp_core_modi236" target="origFile"><code class="typename">INTEGER </code>:: <code class="vardecl">abs0</code></a>
<a name="yppm0_tlmi239"></a>    <a href="null_p.html#tp_core_modi237" target="origFile"><code class="keyword">IF</code> (.NOT.nested .AND. grid_type .LT. <code class="constant">3</code>) <code class="keyword">THEN</code></a>
      <a href="null_p.html#tp_core_modi238" target="origFile"><code class="keyword">IF</code> (<code class="constant">3 </code>.LT. js - <code class="constant">1</code>) <code class="keyword">THEN</code></a>
<a name="yppm0_tlmi240"></a>        <a href="null_p.html#tp_core_modi239" target="origFile">js1 = js - <code class="constant">1</code></a>
      <a href="null_p.html#tp_core_modi238" target="origFile"><code class="keyword">ELSE</code></a>
<a name="yppm0_tlmi241"></a>        <a href="null_p.html#tp_core_modi240" target="origFile">js1 = <code class="constant">3</code></a>
<a name="yppm0_tlmi242"></a>      <a href="null_p.html#tp_core_modi238" target="origFile"><code class="keyword">END IF</code></a>
      <a href="null_p.html#tp_core_modi241" target="origFile"><code class="keyword">IF</code> (npy - <code class="constant">2 </code>.GT. je + <code class="constant">2</code>) <code class="keyword">THEN</code></a>
<a name="yppm0_tlmi243"></a>        <a href="null_p.html#tp_core_modi242" target="origFile">je3 = je + <code class="constant">2</code></a>
      <a href="null_p.html#tp_core_modi241" target="origFile"><code class="keyword">ELSE</code></a>
<a name="yppm0_tlmi244"></a>        <a href="null_p.html#tp_core_modi243" target="origFile">je3 = npy - <code class="constant">2</code></a>
<a name="yppm0_tlmi245"></a>      <a href="null_p.html#tp_core_modi241" target="origFile"><code class="keyword">END IF</code></a>
      <a href="null_p.html#tp_core_modi244" target="origFile"><code class="keyword">IF</code> (npy - <code class="constant">3 </code>.GT. je + <code class="constant">1</code>) <code class="keyword">THEN</code></a>
<a name="yppm0_tlmi246"></a>        <a href="null_p.html#tp_core_modi245" target="origFile">je1 = je + <code class="constant">1</code></a>
      <a href="null_p.html#tp_core_modi244" target="origFile"><code class="keyword">ELSE</code></a>
        <a href="null_p.html#tp_core_modi246" target="origFile">je1 = npy - <code class="constant">3</code></a>
<a name="yppm0_tlmi247"></a>      <a href="null_p.html#tp_core_modi244" target="origFile"><code class="keyword">END IF</code></a>
    <a href="null_p.html#tp_core_modi237" target="origFile"><code class="keyword">ELSE</code></a>
<a name="yppm0_tlmi248"></a><a href="null_p.html#tp_core_modi247" target="origFile"><code class="comment">! Nested grid OR Doubly periodic domain:</code></a>
<a name="yppm0_tlmi249"></a>      <a href="null_p.html#tp_core_modi247" target="origFile">js1 = js - <code class="constant">1</code></a>
      <a href="null_p.html#tp_core_modi248" target="origFile">je3 = je + <code class="constant">2</code></a>
<a name="yppm0_tlmi250"></a>      <a href="null_p.html#tp_core_modi249" target="origFile">je1 = je + <code class="constant">1</code></a>
<a name="yppm0_tlmi251"></a>    <a href="null_p.html#tp_core_modi237" target="origFile"><code class="keyword">END IF</code></a>
    <a href="null_p.html#tp_core_modi250" target="origFile"><code class="keyword">IF</code> (jord .GE. <code class="constant">0.</code>) <code class="keyword">THEN</code></a>
<a name="yppm0_tlmi252"></a>      <a href="null_p.html#tp_core_modi251" target="origFile">abs0 = jord</a>
    <a href="null_p.html#tp_core_modi250" target="origFile"><code class="keyword">ELSE</code></a>
<a name="yppm0_tlmi253"></a>      <a href="null_p.html#tp_core_modi252" target="origFile">abs0 = -jord</a>
    <a href="null_p.html#tp_core_modi250" target="origFile"><code class="keyword">END IF</code></a>
<a name="yppm0_tlmi256"></a>    <a href="null_p.html#tp_core_modi253" target="origFile"><code class="keyword">IF</code> (abs0 .LT. <code class="constant">8</code>) <code class="keyword">THEN</code></a>
      <a href="null_p.html#tp_core_modi253" target="origFile">al_tl = <code class="constant">0.0</code></a>
<a href="null_p.html#tp_core_modi256" target="origFile"><code class="comment">! ord = -5: linear scheme based on PPM 4th order interpolation</code></a>
<a href="null_p.html#tp_core_modi256" target="origFile"><code class="comment">! ord = -6: linear PPM with 2-delta filter</code></a>
<a name="yppm0_tlmi255"></a><a href="null_p.html#tp_core_modi256" target="origFile"><code class="comment">! ord = -7: (-6) with additional Positive definite constraint:</code></a>
<a name="yppm0_tlmi254"></a>      <a href="null_p.html#tp_core_modi256" target="origFile"><code class="keyword">DO </code>j=js1,je3</a>
        <a href="null_p.html#tp_core_modi255" target="origFile"><code class="keyword">DO </code>i=ifirst,ilast</a>
<a name="p37"></a><a name="yppm0_tlmi254"></a>          <a href="null_p.html#tp_core_modi254" target="origFile">al_tl(i, j) = p1*(q_tl(i, j-<code class="constant">1</code>)+q_tl(i, j)) + p2*(q_tl(i, j-<code class="constant">2</code>)+<code class="label">&</code></a>
<a href="null_p.html#tp_core_modi254" target="origFile"><code class="label">&           </code>q_tl(i, j+<code class="constant">1</code>))</a>
          <a href="msg.html#p37" target="msg"><code class="comment"><img src="danger.gif" align=middle border=0 alt="!" /></code></a><a href="null_p.html#tp_core_modi254" target="origFile">al(i, j) = p1*(q(i, j-<code class="constant">1</code>)+q(i, j)) + p2*(q(i, j-<code class="constant">2</code>)+q(i, j+<code class="constant">1</code>))</a>
<a name="yppm0_tlmi257"></a>        <a href="null_p.html#tp_core_modi255" target="origFile"><code class="keyword">END DO</code></a>
<a name="yppm0_tlmi258"></a>      <a href="null_p.html#tp_core_modi256" target="origFile"><code class="keyword">END DO</code></a>
<a name="yppm0_tlmi262"></a>      <a href="null_p.html#tp_core_modi257" target="origFile"><code class="keyword">IF</code> (.NOT.nested .AND. grid_type .LT. <code class="constant">3</code>) <code class="keyword">THEN</code></a>
<a name="yppm0_tlmi259"></a>        <a href="null_p.html#tp_core_modi258" target="origFile"><code class="keyword">IF</code> (js .EQ. <code class="constant">1</code>) <code class="keyword">THEN</code></a>
          <a href="null_p.html#tp_core_modi262" target="origFile"><code class="keyword">DO </code>i=ifirst,ilast</a>
<a name="p38"></a><a name="yppm0_tlmi259"></a>            <a href="null_p.html#tp_core_modi259" target="origFile">al_tl(i, <code class="constant">0</code>) = c1*q_tl(i, -<code class="constant">2</code>) + c2*q_tl(i, -<code class="constant">1</code>) + c3*q_tl(i, <code class="constant">0</code><code class="label">&</code></a>
<a name="yppm0_tlmi260"></a><a href="null_p.html#tp_core_modi259" target="origFile"><code class="label">&             </code>)</a>
            <a href="msg.html#p38" target="msg"><code class="comment"><img src="danger.gif" align=middle border=0 alt="!" /></code></a><a href="null_p.html#tp_core_modi259" target="origFile">al(i, <code class="constant">0</code>) = c1*q(i, -<code class="constant">2</code>) + c2*q(i, -<code class="constant">1</code>) + c3*q(i, <code class="constant">0</code>)</a>
            <a href="null_p.html#tp_core_modi260" target="origFile">al_tl(i, <code class="constant">1</code>) = <code class="constant">0.5</code>*(((<code class="constant">2.</code>*dya(i, <code class="constant">0</code>)+dya(i, -<code class="constant">1</code>))*q_tl(i, <code class="constant">0</code>)-dya<code class="label">&</code></a>
<a href="null_p.html#tp_core_modi260" target="origFile"><code class="label">&             </code>(i, <code class="constant">0</code>)*q_tl(i, -<code class="constant">1</code>))/(dya(i, -<code class="constant">1</code>)+dya(i, <code class="constant">0</code>))+((<code class="constant">2.</code>*dya(i, <code class="constant">1</code>)+<code class="label">&</code></a>
<a name="p39"></a><a name="yppm0_tlmi260"></a><a href="null_p.html#tp_core_modi260" target="origFile"><code class="label">&             </code>dya(i, <code class="constant">2</code>))*q_tl(i, <code class="constant">1</code>)-dya(i, <code class="constant">1</code>)*q_tl(i, <code class="constant">2</code>))/(dya(i, <code class="constant">1</code>)+dya<code class="label">&</code></a>
<a href="null_p.html#tp_core_modi260" target="origFile"><code class="label">&             </code>(i, <code class="constant">2</code>)))</a>
            <a href="msg.html#p39" target="msg"><code class="comment"><img src="danger.gif" align=middle border=0 alt="!" /></code></a><a href="null_p.html#tp_core_modi260" target="origFile">al(i, <code class="constant">1</code>) = <code class="constant">0.5</code>*(((<code class="constant">2.</code>*dya(i, <code class="constant">0</code>)+dya(i, -<code class="constant">1</code>))*q(i, <code class="constant">0</code>)-dya(i, <code class="constant">0</code>)<code class="label">&</code></a>
<a name="yppm0_tlmi261"></a><a href="null_p.html#tp_core_modi260" target="origFile"><code class="label">&             </code>*q(i, -<code class="constant">1</code>))/(dya(i, -<code class="constant">1</code>)+dya(i, <code class="constant">0</code>))+((<code class="constant">2.</code>*dya(i, <code class="constant">1</code>)+dya(i, <code class="constant">2</code>)<code class="label">&</code></a>
<a name="p40"></a><a name="yppm0_tlmi261"></a><a href="null_p.html#tp_core_modi260" target="origFile"><code class="label">&             </code>)*q(i, <code class="constant">1</code>)-dya(i, <code class="constant">1</code>)*q(i, <code class="constant">2</code>))/(dya(i, <code class="constant">1</code>)+dya(i, <code class="constant">2</code>)))</a>
            <a href="null_p.html#tp_core_modi261" target="origFile">al_tl(i, <code class="constant">2</code>) = c3*q_tl(i, <code class="constant">1</code>) + c2*q_tl(i, <code class="constant">2</code>) + c1*q_tl(i, <code class="constant">3</code>)</a>
            <a href="msg.html#p40" target="msg"><code class="comment"><img src="danger.gif" align=middle border=0 alt="!" /></code></a><a href="null_p.html#tp_core_modi261" target="origFile">al(i, <code class="constant">2</code>) = c3*q(i, <code class="constant">1</code>) + c2*q(i, <code class="constant">2</code>) + c1*q(i, <code class="constant">3</code>)</a>
<a name="yppm0_tlmi263"></a>          <a href="null_p.html#tp_core_modi262" target="origFile"><code class="keyword">END DO</code></a>
<a name="yppm0_tlmi267"></a>        <a href="null_p.html#tp_core_modi258" target="origFile"><code class="keyword">END IF</code></a>
<a name="yppm0_tlmi264"></a>        <a href="null_p.html#tp_core_modi263" target="origFile"><code class="keyword">IF</code> (je + <code class="constant">1 </code>.EQ. npy) <code class="keyword">THEN</code></a>
          <a href="null_p.html#tp_core_modi267" target="origFile"><code class="keyword">DO </code>i=ifirst,ilast</a>
<a name="p41"></a><a name="yppm0_tlmi264"></a>            <a href="null_p.html#tp_core_modi264" target="origFile">al_tl(i, npy-<code class="constant">1</code>) = c1*q_tl(i, npy-<code class="constant">3</code>) + c2*q_tl(i, npy-<code class="constant">2</code>) + c3<code class="label">&</code></a>
<a href="null_p.html#tp_core_modi264" target="origFile"><code class="label">&             </code>*q_tl(i, npy-<code class="constant">1</code>)</a>
<a name="yppm0_tlmi265"></a>            <a href="msg.html#p41" target="msg"><code class="comment"><img src="danger.gif" align=middle border=0 alt="!" /></code></a><a href="null_p.html#tp_core_modi264" target="origFile">al(i, npy-<code class="constant">1</code>) = c1*q(i, npy-<code class="constant">3</code>) + c2*q(i, npy-<code class="constant">2</code>) + c3*q(i, npy<code class="label">&</code></a>
<a href="null_p.html#tp_core_modi264" target="origFile"><code class="label">&             </code>-<code class="constant">1</code>)</a>
            <a href="null_p.html#tp_core_modi265" target="origFile">al_tl(i, npy) = <code class="constant">0.5</code>*(((<code class="constant">2.</code>*dya(i, npy-<code class="constant">1</code>)+dya(i, npy-<code class="constant">2</code>))*q_tl(<code class="label">&</code></a>
<a href="null_p.html#tp_core_modi265" target="origFile"><code class="label">&             </code>i, npy-<code class="constant">1</code>)-dya(i, npy-<code class="constant">1</code>)*q_tl(i, npy-<code class="constant">2</code>))/(dya(i, npy-<code class="constant">2</code>)+dya<code class="label">&</code></a>
<a name="p42"></a><a name="yppm0_tlmi265"></a><a href="null_p.html#tp_core_modi265" target="origFile"><code class="label">&             </code>(i, npy-<code class="constant">1</code>))+((<code class="constant">2.</code>*dya(i, npy)+dya(i, npy+<code class="constant">1</code>))*q_tl(i, npy)-<code class="label">&</code></a>
<a href="null_p.html#tp_core_modi265" target="origFile"><code class="label">&             </code>dya(i, npy)*q_tl(i, npy+<code class="constant">1</code>))/(dya(i, npy)+dya(i, npy+<code class="constant">1</code>)))</a>
            <a href="msg.html#p42" target="msg"><code class="comment"><img src="danger.gif" align=middle border=0 alt="!" /></code></a><a href="null_p.html#tp_core_modi265" target="origFile">al(i, npy) = <code class="constant">0.5</code>*(((<code class="constant">2.</code>*dya(i, npy-<code class="constant">1</code>)+dya(i, npy-<code class="constant">2</code>))*q(i, npy<code class="label">&</code></a>
<a href="null_p.html#tp_core_modi265" target="origFile"><code class="label">&             </code>-<code class="constant">1</code>)-dya(i, npy-<code class="constant">1</code>)*q(i, npy-<code class="constant">2</code>))/(dya(i, npy-<code class="constant">2</code>)+dya(i, npy-<code class="constant">1</code><code class="label">&</code></a>
<a name="yppm0_tlmi266"></a><a href="null_p.html#tp_core_modi265" target="origFile"><code class="label">&             </code>))+((<code class="constant">2.</code>*dya(i, npy)+dya(i, npy+<code class="constant">1</code>))*q(i, npy)-dya(i, npy)*q<code class="label">&</code></a>
<a href="null_p.html#tp_core_modi265" target="origFile"><code class="label">&             </code>(i, npy+<code class="constant">1</code>))/(dya(i, npy)+dya(i, npy+<code class="constant">1</code>)))</a>
<a name="p43"></a><a name="yppm0_tlmi266"></a>            <a href="null_p.html#tp_core_modi266" target="origFile">al_tl(i, npy+<code class="constant">1</code>) = c3*q_tl(i, npy) + c2*q_tl(i, npy+<code class="constant">1</code>) + c1*<code class="label">&</code></a>
<a href="null_p.html#tp_core_modi266" target="origFile"><code class="label">&             </code>q_tl(i, npy+<code class="constant">2</code>)</a>
            <a href="msg.html#p43" target="msg"><code class="comment"><img src="danger.gif" align=middle border=0 alt="!" /></code></a><a href="null_p.html#tp_core_modi266" target="origFile">al(i, npy+<code class="constant">1</code>) = c3*q(i, npy) + c2*q(i, npy+<code class="constant">1</code>) + c1*q(i, npy+<code class="constant">2</code><code class="label">&</code></a>
<a href="null_p.html#tp_core_modi266" target="origFile"><code class="label">&             </code>)</a>
          <a href="null_p.html#tp_core_modi267" target="origFile"><code class="keyword">END DO</code></a>
<a name="yppm0_tlmi268"></a>        <a href="null_p.html#tp_core_modi263" target="origFile"><code class="keyword">END IF</code></a>
      <a href="null_p.html#tp_core_modi257" target="origFile"><code class="keyword">END IF</code></a>
      <a href="null_p.html#tp_core_modi268" target="origFile"><code class="keyword">IF</code> (jord .EQ. -<code class="constant">5</code>) <code class="keyword">THEN</code></a>
<a name="yppm0_tlmi272"></a>        <a href="null_p.html#tp_core_modi268" target="origFile">bl_tl = <code class="constant">0.0</code></a>
<a name="yppm0_tlmi271"></a>        <a href="null_p.html#tp_core_modi268" target="origFile">br_tl = <code class="constant">0.0</code></a>
<a name="yppm0_tlmi269"></a>        <a href="null_p.html#tp_core_modi272" target="origFile"><code class="keyword">DO </code>j=jfirst-<code class="constant">1</code>,jlast+<code class="constant">1</code></a>
<a name="yppm0_tlmi269"></a>          <a href="null_p.html#tp_core_modi271" target="origFile"><code class="keyword">DO </code>i=ifirst,ilast</a>
<a name="yppm0_tlmi270"></a>            <a href="null_p.html#tp_core_modi269" target="origFile">bl_tl(i, j) = al_tl(i, j) - q_tl(i, j)</a>
<a name="yppm0_tlmi270"></a>            <a href="null_p.html#tp_core_modi269" target="origFile">bl(i, j) = al(i, j) - q(i, j)</a>
            <a href="null_p.html#tp_core_modi270" target="origFile">br_tl(i, j) = al_tl(i, j+<code class="constant">1</code>) - q_tl(i, j)</a>
            <a href="null_p.html#tp_core_modi270" target="origFile">br(i, j) = al(i, j+<code class="constant">1</code>) - q(i, j)</a>
          <a href="null_p.html#tp_core_modi271" target="origFile"><code class="keyword">END DO</code></a>
        <a href="null_p.html#tp_core_modi272" target="origFile"><code class="keyword">END DO</code></a>
        <a href="null_p.html#tp_core_modi268" target="origFile">flux_tl = <code class="constant">0.0</code></a>
      <a href="null_p.html#tp_core_modi268" target="origFile"><code class="keyword">ELSE</code></a>
        <a href="null_p.html#tp_core_modi268" target="origFile">flux_tl = <code class="constant">0.0</code></a>
        <a href="null_p.html#tp_core_modi268" target="origFile">bl_tl = <code class="constant">0.0</code></a>
        <a href="null_p.html#tp_core_modi268" target="origFile">br_tl = <code class="constant">0.0</code></a>
      <a href="null_p.html#tp_core_modi268" target="origFile"><code class="keyword">END IF</code></a>
    <a href="null_p.html#tp_core_modi253" target="origFile"><code class="keyword">ELSE</code></a>
      <a href="null_p.html#tp_core_modi253" target="origFile">flux_tl = <code class="constant">0.0</code></a>
      <a href="null_p.html#tp_core_modi253" target="origFile">bl_tl = <code class="constant">0.0</code></a>
<a name="yppm0_tlmi277"></a>      <a href="null_p.html#tp_core_modi253" target="origFile">br_tl = <code class="constant">0.0</code></a>
<a name="yppm0_tlmi276"></a>    <a href="null_p.html#tp_core_modi253" target="origFile"><code class="keyword">END IF</code></a>
<a name="yppm0_tlmi273"></a>    <a href="null_p.html#tp_core_modi277" target="origFile"><code class="keyword">DO </code>j=jfirst,jlast+<code class="constant">1</code></a>
<a name="yppm0_tlmi274"></a>      <a href="null_p.html#tp_core_modi276" target="origFile"><code class="keyword">DO </code>i=ifirst,ilast</a>
        <a href="null_p.html#tp_core_modi273" target="origFile"><code class="keyword">IF</code> (c(i, j) .GT. <code class="constant">0.</code>) <code class="keyword">THEN</code></a>
<a name="yppm0_tlmi274"></a>          <a href="null_p.html#tp_core_modi274" target="origFile">flux_tl(i, j) = q_tl(i, j-<code class="constant">1</code>) + (<code class="constant">1.</code>-c(i, j))*(br_tl(i, j-<code class="constant">1</code>)-c(i<code class="label">&</code></a>
<a href="null_p.html#tp_core_modi274" target="origFile"><code class="label">&           </code>, j)*(bl_tl(i, j-<code class="constant">1</code>)+br_tl(i, j-<code class="constant">1</code>)))</a>
          <a href="null_p.html#tp_core_modi274" target="origFile">flux(i, j) = q(i, j-<code class="constant">1</code>) + (<code class="constant">1.</code>-c(i, j))*(br(i, j-<code class="constant">1</code>)-c(i, j)*(bl(<code class="label">&</code></a>
<a name="yppm0_tlmi275"></a><a href="null_p.html#tp_core_modi274" target="origFile"><code class="label">&           </code>i, j-<code class="constant">1</code>)+br(i, j-<code class="constant">1</code>)))</a>
        <a href="null_p.html#tp_core_modi273" target="origFile"><code class="keyword">ELSE</code></a>
<a name="yppm0_tlmi275"></a>          <a href="null_p.html#tp_core_modi275" target="origFile">flux_tl(i, j) = q_tl(i, j) + (<code class="constant">1.</code>+c(i, j))*(bl_tl(i, j)+c(i, j)<code class="label">&</code></a>
<a href="null_p.html#tp_core_modi275" target="origFile"><code class="label">&           </code>*(bl_tl(i, j)+br_tl(i, j)))</a>
          <a href="null_p.html#tp_core_modi275" target="origFile">flux(i, j) = q(i, j) + (<code class="constant">1.</code>+c(i, j))*(bl(i, j)+c(i, j)*(bl(i, j<code class="label">&</code></a>
<a href="null_p.html#tp_core_modi275" target="origFile"><code class="label">&           </code>)+br(i, j)))</a>
        <a href="null_p.html#tp_core_modi273" target="origFile"><code class="keyword">END IF</code></a>
      <a href="null_p.html#tp_core_modi276" target="origFile"><code class="keyword">END DO</code></a>
<a name="yppm0"></a>    <a href="null_p.html#tp_core_modi277" target="origFile"><code class="keyword">END DO</code></a>
  <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END SUBROUTINE </code><code class="funcname">YPPM0_TLM</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!#endif</code></a>
  <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">SUBROUTINE </code><code class="funcname">YPPM0</code>(<code class="vardecl">flux</code>, <code class="vardecl">q</code>, <code class="vardecl">c</code>, <code class="vardecl">jord</code>, <code class="vardecl">ifirst</code>, <code class="vardecl">ilast</code>, <code class="vardecl">jfirst</code>, <code class="vardecl">jlast</code>, <code class="vardecl">npx</code>, <code class="label">&</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="label">&   </code><code class="vardecl">npy</code>)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IMPLICIT NONE</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!  X-Dir strip</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">ifirst</code>, <code class="vardecl">ilast</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!  Y-Dir strip</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">jfirst</code>, <code class="vardecl">jlast</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">jord</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">npx</code>, <code class="vardecl">npy</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">q</code>(<code class="vardecl">ifirst</code>:<code class="vardecl">ilast</code>, <code class="vardecl">jfirst</code>-<code class="vardecl">ng</code>:<code class="vardecl">jlast</code>+<code class="vardecl">ng</code>)</a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! Courant number</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">c</code>(<code class="vardecl">isd</code>:<code class="vardecl">ied</code>, <code class="vardecl">js</code>:<code class="vardecl">je</code>+<code class="constant">1</code>)</a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!  Flux</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL</code>, <code class="typename">INTENT(OUT) </code>:: <code class="vardecl">flux</code>(<code class="vardecl">ifirst</code>:<code class="vardecl">ilast</code>, <code class="vardecl">jfirst</code>:<code class="vardecl">jlast</code>+<code class="constant">1</code>)</a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! Local:</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL </code>:: <code class="vardecl">dm</code>(<code class="vardecl">ifirst</code>:<code class="vardecl">ilast</code>, <code class="vardecl">jfirst</code>-<code class="constant">2</code>:<code class="vardecl">jlast</code>+<code class="constant">2</code>)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL </code>:: <code class="vardecl">al</code>(<code class="vardecl">ifirst</code>:<code class="vardecl">ilast</code>, <code class="vardecl">jfirst</code>-<code class="constant">1</code>:<code class="vardecl">jlast</code>+<code class="constant">2</code>)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL </code>:: <code class="vardecl">bl</code>(<code class="vardecl">ifirst</code>:<code class="vardecl">ilast</code>, <code class="vardecl">jfirst</code>-<code class="constant">1</code>:<code class="vardecl">jlast</code>+<code class="constant">1</code>)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL </code>:: <code class="vardecl">br</code>(<code class="vardecl">ifirst</code>:<code class="vardecl">ilast</code>, <code class="vardecl">jfirst</code>-<code class="constant">1</code>:<code class="vardecl">jlast</code>+<code class="constant">1</code>)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL </code>:: <code class="vardecl">dq</code>(<code class="vardecl">ifirst</code>:<code class="vardecl">ilast</code>, <code class="vardecl">jfirst</code>-<code class="constant">3</code>:<code class="vardecl">jlast</code>+<code class="constant">2</code>)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">LOGICAL </code>:: <code class="vardecl">extm</code>(<code class="vardecl">ifirst</code>:<code class="vardecl">ilast</code>, <code class="vardecl">jfirst</code>-<code class="constant">2</code>:<code class="vardecl">jlast</code>+<code class="constant">2</code>)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL </code>:: <code class="vardecl">xt</code>, <code class="vardecl">pmp_1</code>, <code class="vardecl">lac_1</code>, <code class="vardecl">pmp_2</code>, <code class="vardecl">lac_2</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">INTEGER </code>:: <code class="vardecl">i</code>, <code class="vardecl">j</code>, <code class="vardecl">js1</code>, <code class="vardecl">je3</code>, <code class="vardecl">je1</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">INTRINSIC </code><code class="funcname">MAX</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">INTRINSIC </code><code class="funcname">MIN</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">INTRINSIC </code><code class="funcname">ABS</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">INTEGER </code>:: <code class="vardecl">abs0</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IF</code> (.NOT.nested .AND. grid_type .LT. <code class="constant">3</code>) <code class="keyword">THEN</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IF</code> (<code class="constant">3 </code>.LT. js - <code class="constant">1</code>) <code class="keyword">THEN</code></a>
        <a href="null_p.html#tp_core_mod" target="origFile">js1 = js - <code class="constant">1</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">ELSE</code></a>
        <a href="null_p.html#tp_core_mod" target="origFile">js1 = <code class="constant">3</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END IF</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IF</code> (npy - <code class="constant">2 </code>.GT. je + <code class="constant">2</code>) <code class="keyword">THEN</code></a>
        <a href="null_p.html#tp_core_mod" target="origFile">je3 = je + <code class="constant">2</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">ELSE</code></a>
        <a href="null_p.html#tp_core_mod" target="origFile">je3 = npy - <code class="constant">2</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END IF</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IF</code> (npy - <code class="constant">3 </code>.GT. je + <code class="constant">1</code>) <code class="keyword">THEN</code></a>
        <a href="null_p.html#tp_core_mod" target="origFile">je1 = je + <code class="constant">1</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">ELSE</code></a>
        <a href="null_p.html#tp_core_mod" target="origFile">je1 = npy - <code class="constant">3</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END IF</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">ELSE</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! Nested grid OR Doubly periodic domain:</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile">js1 = js - <code class="constant">1</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile">je3 = je + <code class="constant">2</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile">je1 = je + <code class="constant">1</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END IF</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IF</code> (jord .GE. <code class="constant">0.</code>) <code class="keyword">THEN</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile">abs0 = jord</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">ELSE</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile">abs0 = -jord</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END IF</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IF</code> (abs0 .LT. <code class="constant">8</code>) <code class="keyword">THEN</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! ord = -5: linear scheme based on PPM 4th order interpolation</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! ord = -6: linear PPM with 2-delta filter</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! ord = -7: (-6) with additional Positive definite constraint:</code></a>
<a name="p37"></a>      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>j=js1,je3</a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>i=ifirst,ilast</a>
          <a href="msg.html#p37" target="msg"><code class="comment"><img src="danger.gif" align=middle border=0 alt="!" /></code></a><a href="null_p.html#tp_core_mod" target="origFile">al(i, j) = p1*(q(i, j-<code class="constant">1</code>)+q(i, j)) + p2*(q(i, j-<code class="constant">2</code>)+q(i, j+<code class="constant">1</code>))</a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IF</code> (.NOT.nested .AND. grid_type .LT. <code class="constant">3</code>) <code class="keyword">THEN</code></a>
<a name="p38"></a>        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IF</code> (js .EQ. <code class="constant">1</code>) <code class="keyword">THEN</code></a>
<a name="p39"></a>          <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>i=ifirst,ilast</a>
            <a href="msg.html#p38" target="msg"><code class="comment"><img src="danger.gif" align=middle border=0 alt="!" /></code></a><a href="null_p.html#tp_core_mod" target="origFile">al(i, <code class="constant">0</code>) = c1*q(i, -<code class="constant">2</code>) + c2*q(i, -<code class="constant">1</code>) + c3*q(i, <code class="constant">0</code>)</a>
            <a href="msg.html#p39" target="msg"><code class="comment"><img src="danger.gif" align=middle border=0 alt="!" /></code></a><a href="null_p.html#tp_core_mod" target="origFile">al(i, <code class="constant">1</code>) = <code class="constant">0.5</code>*(((<code class="constant">2.</code>*dya(i, <code class="constant">0</code>)+dya(i, -<code class="constant">1</code>))*q(i, <code class="constant">0</code>)-dya(i, <code class="constant">0</code>)<code class="label">&</code></a>
<a name="p40"></a><a href="null_p.html#tp_core_mod" target="origFile"><code class="label">&             </code>*q(i, -<code class="constant">1</code>))/(dya(i, -<code class="constant">1</code>)+dya(i, <code class="constant">0</code>))+((<code class="constant">2.</code>*dya(i, <code class="constant">1</code>)+dya(i, <code class="constant">2</code>)<code class="label">&</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="label">&             </code>)*q(i, <code class="constant">1</code>)-dya(i, <code class="constant">1</code>)*q(i, <code class="constant">2</code>))/(dya(i, <code class="constant">1</code>)+dya(i, <code class="constant">2</code>)))</a>
            <a href="msg.html#p40" target="msg"><code class="comment"><img src="danger.gif" align=middle border=0 alt="!" /></code></a><a href="null_p.html#tp_core_mod" target="origFile">al(i, <code class="constant">2</code>) = c3*q(i, <code class="constant">1</code>) + c2*q(i, <code class="constant">2</code>) + c1*q(i, <code class="constant">3</code>)</a>
          <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END IF</code></a>
<a name="p41"></a>        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IF</code> (je + <code class="constant">1 </code>.EQ. npy) <code class="keyword">THEN</code></a>
          <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>i=ifirst,ilast</a>
<a name="p42"></a>            <a href="msg.html#p41" target="msg"><code class="comment"><img src="danger.gif" align=middle border=0 alt="!" /></code></a><a href="null_p.html#tp_core_mod" target="origFile">al(i, npy-<code class="constant">1</code>) = c1*q(i, npy-<code class="constant">3</code>) + c2*q(i, npy-<code class="constant">2</code>) + c3*q(i, npy<code class="label">&</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="label">&             </code>-<code class="constant">1</code>)</a>
            <a href="msg.html#p42" target="msg"><code class="comment"><img src="danger.gif" align=middle border=0 alt="!" /></code></a><a href="null_p.html#tp_core_mod" target="origFile">al(i, npy) = <code class="constant">0.5</code>*(((<code class="constant">2.</code>*dya(i, npy-<code class="constant">1</code>)+dya(i, npy-<code class="constant">2</code>))*q(i, npy<code class="label">&</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="label">&             </code>-<code class="constant">1</code>)-dya(i, npy-<code class="constant">1</code>)*q(i, npy-<code class="constant">2</code>))/(dya(i, npy-<code class="constant">2</code>)+dya(i, npy-<code class="constant">1</code><code class="label">&</code></a>
<a name="p43"></a><a href="null_p.html#tp_core_mod" target="origFile"><code class="label">&             </code>))+((<code class="constant">2.</code>*dya(i, npy)+dya(i, npy+<code class="constant">1</code>))*q(i, npy)-dya(i, npy)*q<code class="label">&</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="label">&             </code>(i, npy+<code class="constant">1</code>))/(dya(i, npy)+dya(i, npy+<code class="constant">1</code>)))</a>
            <a href="msg.html#p43" target="msg"><code class="comment"><img src="danger.gif" align=middle border=0 alt="!" /></code></a><a href="null_p.html#tp_core_mod" target="origFile">al(i, npy+<code class="constant">1</code>) = c3*q(i, npy) + c2*q(i, npy+<code class="constant">1</code>) + c1*q(i, npy+<code class="constant">2</code><code class="label">&</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="label">&             </code>)</a>
          <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END IF</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END IF</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IF</code> (jord .EQ. -<code class="constant">5</code>) <code class="keyword">THEN</code></a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>j=jfirst-<code class="constant">1</code>,jlast+<code class="constant">1</code></a>
          <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>i=ifirst,ilast</a>
            <a href="null_p.html#tp_core_mod" target="origFile">bl(i, j) = al(i, j) - q(i, j)</a>
            <a href="null_p.html#tp_core_mod" target="origFile">br(i, j) = al(i, j+<code class="constant">1</code>) - q(i, j)</a>
          <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END IF</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END IF</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>j=jfirst,jlast+<code class="constant">1</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>i=ifirst,ilast</a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IF</code> (c(i, j) .GT. <code class="constant">0.</code>) <code class="keyword">THEN</code></a>
          <a href="null_p.html#tp_core_mod" target="origFile">flux(i, j) = q(i, j-<code class="constant">1</code>) + (<code class="constant">1.</code>-c(i, j))*(br(i, j-<code class="constant">1</code>)-c(i, j)*(bl(<code class="label">&</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="label">&           </code>i, j-<code class="constant">1</code>)+br(i, j-<code class="constant">1</code>)))</a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">ELSE</code></a>
          <a href="null_p.html#tp_core_mod" target="origFile">flux(i, j) = q(i, j) + (<code class="constant">1.</code>+c(i, j))*(bl(i, j)+c(i, j)*(bl(i, j<code class="label">&</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="label">&           </code>)+br(i, j)))</a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END IF</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
<a name="fxppm_tlm"></a>    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
  <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END SUBROUTINE </code><code class="funcname">YPPM0</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!  Differentiation of fxppm in forward (tangent) mode:</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!   variations   of useful results: flux</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!   with respect to varying inputs: q</code></a>
  <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">SUBROUTINE </code><code class="funcname">FXPPM_TLM</code>(<code class="vardecl">c</code>, <code class="vardecl">q</code>, <code class="vardecl">q_tl</code>, <code class="vardecl">flux</code>, <code class="vardecl">flux_tl</code>, <code class="vardecl">iord</code>, <code class="vardecl">ifirst</code>, <code class="vardecl">ilast</code>, <code class="label">&</code></a>
<a name="fxppm_tlmi159"></a><a href="null_p.html#tp_core_mod" target="origFile"><code class="label">&   </code><code class="vardecl">jfirst</code>, <code class="vardecl">jlast</code>, <code class="vardecl">npx</code>, <code class="vardecl">npy</code>)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IMPLICIT NONE</code></a>
<a href="null_p.html#tp_core_modi159" target="origFile"><code class="comment">! !INPUT PARAMETERS:</code></a>
<a name="fxppm_tlmi160"></a><a href="null_p.html#tp_core_modi159" target="origFile"><code class="comment">!  X-Dir strip</code></a>
    <a href="null_p.html#tp_core_modi159" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">ifirst</code>, <code class="vardecl">ilast</code></a>
<a name="fxppm_tlmi161"></a><a href="null_p.html#tp_core_modi160" target="origFile"><code class="comment">!  Y-Dir strip</code></a>
<a name="fxppm_tlmi162"></a>    <a href="null_p.html#tp_core_modi160" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">jfirst</code>, <code class="vardecl">jlast</code></a>
<a name="fxppm_tlmi163"></a>    <a href="null_p.html#tp_core_modi161" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">iord</code></a>
    <a href="null_p.html#tp_core_modi162" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">npx</code>, <code class="vardecl">npy</code></a>
<a name="fxppm_tlmi164"></a>    <a href="null_p.html#tp_core_modi163" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">q</code>(<code class="vardecl">ifirst</code>-<code class="vardecl">ng</code>:<code class="vardecl">ilast</code>+<code class="vardecl">ng</code>, <code class="vardecl">jfirst</code>:<code class="vardecl">jlast</code>)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">q_tl</code>(<code class="vardecl">ifirst</code>-<code class="vardecl">ng</code>:<code class="vardecl">ilast</code>+<code class="vardecl">ng</code>, <code class="vardecl">jfirst</code>:<code class="vardecl">jlast</code>)</a>
<a name="fxppm_tlmi165"></a><a href="null_p.html#tp_core_modi164" target="origFile"><code class="comment">! Courant   N (like FLUX)</code></a>
    <a href="null_p.html#tp_core_modi164" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">c</code>(<code class="vardecl">ifirst</code>:<code class="vardecl">ilast</code>+<code class="constant">1</code>, <code class="vardecl">jfirst</code>:<code class="vardecl">jlast</code>)</a>
<a href="null_p.html#tp_core_modi165" target="origFile"><code class="comment">! !OUTPUT PARAMETERS:</code></a>
<a href="null_p.html#tp_core_modi165" target="origFile"><code class="comment">!  Flux</code></a>
<a name="fxppm_tlmi166"></a>    <a href="null_p.html#tp_core_modi165" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">INTENT(OUT) </code>:: <code class="vardecl">flux</code>(<code class="vardecl">ifirst</code>:<code class="vardecl">ilast</code>+<code class="constant">1</code>, <code class="vardecl">jfirst</code>:<code class="vardecl">jlast</code>)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">INTENT(OUT) </code>:: <code class="vardecl">flux_tl</code>(<code class="vardecl">ifirst</code>:<code class="vardecl">ilast</code>+<code class="constant">1</code>, <code class="vardecl">jfirst</code>:<code class="vardecl">jlast</code>)</a>
<a name="fxppm_tlmi167"></a><a href="null_p.html#tp_core_modi166" target="origFile"><code class="comment">! Local</code></a>
<a name="fxppm_tlmi168"></a>    <a href="null_p.html#tp_core_modi166" target="origFile"><code class="typename">LOGICAL </code>:: <code class="vardecl">extm</code>(<code class="vardecl">ifirst</code>-<code class="constant">2</code>:<code class="vardecl">ilast</code>+<code class="constant">2</code>)</a>
<a name="fxppm_tlmi169"></a>    <a href="null_p.html#tp_core_modi167" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">dm1</code>(<code class="vardecl">ifirst</code>-<code class="constant">2</code>:<code class="vardecl">ilast</code>+<code class="constant">2</code>)</a>
    <a href="null_p.html#tp_core_modi168" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">al</code>(<code class="vardecl">ifirst</code>-<code class="constant">1</code>:<code class="vardecl">ilast</code>+<code class="constant">2</code>)</a>
<a name="fxppm_tlmi170"></a>    <a href="null_p.html#tp_core_modi169" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">bl</code>(<code class="vardecl">ifirst</code>-<code class="constant">1</code>:<code class="vardecl">ilast</code>+<code class="constant">1</code>)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">bl_tl</code>(<code class="vardecl">ifirst</code>-<code class="constant">1</code>:<code class="vardecl">ilast</code>+<code class="constant">1</code>)</a>
<a name="fxppm_tlmi171"></a>    <a href="null_p.html#tp_core_modi170" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">br</code>(<code class="vardecl">ifirst</code>-<code class="constant">1</code>:<code class="vardecl">ilast</code>+<code class="constant">1</code>)</a>
<a name="fxppm_tlmi172"></a>    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">br_tl</code>(<code class="vardecl">ifirst</code>-<code class="constant">1</code>:<code class="vardecl">ilast</code>+<code class="constant">1</code>)</a>
<a name="fxppm_tlmi173"></a>    <a href="null_p.html#tp_core_modi171" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">dq</code>(<code class="vardecl">ifirst</code>-<code class="constant">3</code>:<code class="vardecl">ilast</code>+<code class="constant">2</code>)</a>
<a name="fxppm_tlmi174"></a>    <a href="null_p.html#tp_core_modi172" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">dl</code>, <code class="vardecl">dr</code>, <code class="vardecl">pmp</code>, <code class="vardecl">lac</code>, <code class="vardecl">ct</code>, <code class="vardecl">qe</code></a>
    <a href="null_p.html#tp_core_modi173" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">pmp_1</code>, <code class="vardecl">lac_1</code>, <code class="vardecl">pmp_2</code>, <code class="vardecl">lac_2</code></a>
<a name="fxppm_tlmi175"></a>    <a href="null_p.html#tp_core_modi174" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">xt</code>, <code class="vardecl">x1</code>, <code class="vardecl">x0</code>, <code class="vardecl">x0l</code>, <code class="vardecl">x0r</code></a>
<a name="fxppm_tlmi176"></a>    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">xt_tl</code>, <code class="vardecl">x0l_tl</code>, <code class="vardecl">x0r_tl</code></a>
<a name="fxppm_tlmi177"></a>    <a href="null_p.html#tp_core_modi175" target="origFile"><code class="typename">INTEGER </code>:: <code class="vardecl">i</code>, <code class="vardecl">j</code>, <code class="vardecl">is3</code>, <code class="vardecl">ie3</code>, <code class="vardecl">it</code></a>
<a name="fxppm_tlmi178"></a>    <a href="null_p.html#tp_core_modi176" target="origFile"><code class="keyword">INTRINSIC </code><code class="funcname">MAX</code></a>
<a name="fxppm_tlmi179"></a>    <a href="null_p.html#tp_core_modi177" target="origFile"><code class="keyword">INTRINSIC </code><code class="funcname">MIN</code></a>
<a name="fxppm_tlmi180"></a>    <a href="null_p.html#tp_core_modi178" target="origFile">x0 = big_number</a>
    <a href="null_p.html#tp_core_modi179" target="origFile"><code class="keyword">IF</code> (<code class="constant">3 </code>.LT. is - <code class="constant">1</code>) <code class="keyword">THEN</code></a>
<a name="fxppm_tlmi181"></a>      <a href="null_p.html#tp_core_modi180" target="origFile">is3 = is - <code class="constant">1</code></a>
    <a href="null_p.html#tp_core_modi179" target="origFile"><code class="keyword">ELSE</code></a>
<a name="fxppm_tlmi182"></a>      <a href="null_p.html#tp_core_modi181" target="origFile">is3 = <code class="constant">3</code></a>
<a name="fxppm_tlmi183"></a>    <a href="null_p.html#tp_core_modi179" target="origFile"><code class="keyword">END IF</code></a>
    <a href="null_p.html#tp_core_modi182" target="origFile"><code class="keyword">IF</code> (npx - <code class="constant">3 </code>.GT. ie + <code class="constant">1</code>) <code class="keyword">THEN</code></a>
<a name="fxppm_tlmi184"></a>      <a href="null_p.html#tp_core_modi183" target="origFile">ie3 = ie + <code class="constant">1</code></a>
    <a href="null_p.html#tp_core_modi182" target="origFile"><code class="keyword">ELSE</code></a>
<a name="fxppm_tlmi185"></a>      <a href="null_p.html#tp_core_modi184" target="origFile">ie3 = npx - <code class="constant">3</code></a>
    <a href="null_p.html#tp_core_modi182" target="origFile"><code class="keyword">END IF</code></a>
    <a href="null_p.html#tp_core_modi185" target="origFile"><code class="keyword">IF</code> (iord .EQ. <code class="constant">666</code>) <code class="keyword">THEN</code></a>
      <a href="null_p.html#tp_core_modi185" target="origFile">flux_tl = <code class="constant">0.0_8</code></a>
<a name="fxppm_tlmi217"></a>      <a href="null_p.html#tp_core_modi185" target="origFile">bl_tl = <code class="constant">0.0_8</code></a>
<a name="fxppm_tlmi188"></a>      <a href="null_p.html#tp_core_modi185" target="origFile">br_tl = <code class="constant">0.0_8</code></a>
<a name="fxppm_tlmi186"></a>      <a href="null_p.html#tp_core_modi217" target="origFile"><code class="keyword">DO </code>j=jfirst,jlast</a>
        <a href="null_p.html#tp_core_modi188" target="origFile"><code class="keyword">DO </code>i=is3,ie3</a>
<a name="fxppm_tlmi186"></a>          <a href="null_p.html#tp_core_modi186" target="origFile">bl_tl(i) = b5*q_tl(i-<code class="constant">2</code>, j) + b4*q_tl(i-<code class="constant">1</code>, j) + b3*q_tl(i, j) +<code class="label">&</code></a>
<a href="null_p.html#tp_core_modi186" target="origFile"><code class="label">&           </code>b2*q_tl(i+<code class="constant">1</code>, j) + b1*q_tl(i+<code class="constant">2</code>, j)</a>
<a name="fxppm_tlmi187"></a>          <a href="null_p.html#tp_core_modi186" target="origFile">bl(i) = b5*q(i-<code class="constant">2</code>, j) + b4*q(i-<code class="constant">1</code>, j) + b3*q(i, j) + b2*q(i+<code class="constant">1</code>, j<code class="label">&</code></a>
<a href="null_p.html#tp_core_modi186" target="origFile"><code class="label">&           </code>) + b1*q(i+<code class="constant">2</code>, j)</a>
<a name="fxppm_tlmi187"></a>          <a href="null_p.html#tp_core_modi187" target="origFile">br_tl(i) = b1*q_tl(i-<code class="constant">2</code>, j) + b2*q_tl(i-<code class="constant">1</code>, j) + b3*q_tl(i, j) +<code class="label">&</code></a>
<a href="null_p.html#tp_core_modi187" target="origFile"><code class="label">&           </code>b4*q_tl(i+<code class="constant">1</code>, j) + b5*q_tl(i+<code class="constant">2</code>, j)</a>
          <a href="null_p.html#tp_core_modi187" target="origFile">br(i) = b1*q(i-<code class="constant">2</code>, j) + b2*q(i-<code class="constant">1</code>, j) + b3*q(i, j) + b4*q(i+<code class="constant">1</code>, j<code class="label">&</code></a>
<a name="fxppm_tlmi189"></a><a href="null_p.html#tp_core_modi187" target="origFile"><code class="label">&           </code>) + b5*q(i+<code class="constant">2</code>, j)</a>
        <a href="null_p.html#tp_core_modi188" target="origFile"><code class="keyword">END DO</code></a>
<a href="null_p.html#tp_core_modi189" target="origFile"><code class="comment">!--------------</code></a>
<a href="null_p.html#tp_core_modi189" target="origFile"><code class="comment">! fix the edges</code></a>
<a name="fxppm_tlmi190"></a><a href="null_p.html#tp_core_modi189" target="origFile"><code class="comment">!--------------</code></a>
        <a href="null_p.html#tp_core_modi189" target="origFile"><code class="keyword">IF</code> (is .EQ. <code class="constant">1</code>) <code class="keyword">THEN</code></a>
<a name="fxppm_tlmi190"></a>          <a href="null_p.html#tp_core_modi190" target="origFile">x0l_tl = <code class="constant">0.5</code>*((<code class="constant">2.</code>*dxa(<code class="constant">0</code>, j)+dxa(-<code class="constant">1</code>, j))*q_tl(<code class="constant">0</code>, j)-dxa(<code class="constant">0</code>, j)*<code class="label">&</code></a>
<a href="null_p.html#tp_core_modi190" target="origFile"><code class="label">&           </code>q_tl(-<code class="constant">1</code>, j))/(dxa(<code class="constant">0</code>, j)+dxa(-<code class="constant">1</code>, j))</a>
<a name="fxppm_tlmi191"></a>          <a href="null_p.html#tp_core_modi190" target="origFile">x0l = <code class="constant">0.5</code>*((<code class="constant">2.</code>*dxa(<code class="constant">0</code>, j)+dxa(-<code class="constant">1</code>, j))*q(<code class="constant">0</code>, j)-dxa(<code class="constant">0</code>, j)*q(-<code class="constant">1</code>, j<code class="label">&</code></a>
<a href="null_p.html#tp_core_modi190" target="origFile"><code class="label">&           </code>))/(dxa(<code class="constant">0</code>, j)+dxa(-<code class="constant">1</code>, j))</a>
<a name="fxppm_tlmi191"></a>          <a href="null_p.html#tp_core_modi191" target="origFile">x0r_tl = <code class="constant">0.5</code>*((<code class="constant">2.</code>*dxa(<code class="constant">1</code>, j)+dxa(<code class="constant">2</code>, j))*q_tl(<code class="constant">1</code>, j)-dxa(<code class="constant">1</code>, j)*<code class="label">&</code></a>
<a href="null_p.html#tp_core_modi191" target="origFile"><code class="label">&           </code>q_tl(<code class="constant">2</code>, j))/(dxa(<code class="constant">1</code>, j)+dxa(<code class="constant">2</code>, j))</a>
<a name="fxppm_tlmi192"></a>          <a href="null_p.html#tp_core_modi191" target="origFile">x0r = <code class="constant">0.5</code>*((<code class="constant">2.</code>*dxa(<code class="constant">1</code>, j)+dxa(<code class="constant">2</code>, j))*q(<code class="constant">1</code>, j)-dxa(<code class="constant">1</code>, j)*q(<code class="constant">2</code>, j))<code class="label">&</code></a>
<a href="null_p.html#tp_core_modi191" target="origFile"><code class="label">&           </code>/(dxa(<code class="constant">1</code>, j)+dxa(<code class="constant">2</code>, j))</a>
<a name="fxppm_tlmi192"></a>          <a href="null_p.html#tp_core_modi192" target="origFile">br_tl(<code class="constant">2</code>) = p1*(q_tl(<code class="constant">2</code>, j)+q_tl(<code class="constant">3</code>, j)) + p2*(q_tl(<code class="constant">1</code>, j)+q_tl(<code class="constant">4</code><code class="label">&</code></a>
<a name="fxppm_tlmi193"></a><a href="null_p.html#tp_core_modi192" target="origFile"><code class="label">&           </code>, j)) - q_tl(<code class="constant">2</code>, j)</a>
<a name="fxppm_tlmi193"></a>          <a href="null_p.html#tp_core_modi192" target="origFile">br(<code class="constant">2</code>) = p1*(q(<code class="constant">2</code>, j)+q(<code class="constant">3</code>, j)) + p2*(q(<code class="constant">1</code>, j)+q(<code class="constant">4</code>, j)) - q(<code class="constant">2</code>, j)</a>
<a name="fxppm_tlmi194"></a>          <a href="null_p.html#tp_core_modi193" target="origFile">xt_tl = x0l_tl + x0r_tl</a>
<a name="fxppm_tlmi194"></a>          <a href="null_p.html#tp_core_modi193" target="origFile">xt = x0l + x0r</a>
<a name="fxppm_tlmi195"></a>          <a href="null_p.html#tp_core_modi194" target="origFile">bl_tl(<code class="constant">1</code>) = xt_tl - q_tl(<code class="constant">1</code>, j)</a>
<a name="fxppm_tlmi195"></a>          <a href="null_p.html#tp_core_modi194" target="origFile">bl(<code class="constant">1</code>) = xt - q(<code class="constant">1</code>, j)</a>
<a name="fxppm_tlmi196"></a>          <a href="null_p.html#tp_core_modi195" target="origFile">br_tl(<code class="constant">0</code>) = xt_tl - q_tl(<code class="constant">0</code>, j)</a>
<a name="fxppm_tlmi196"></a>          <a href="null_p.html#tp_core_modi195" target="origFile">br(<code class="constant">0</code>) = xt - q(<code class="constant">0</code>, j)</a>
<a name="fxppm_tlmi197"></a>          <a href="null_p.html#tp_core_modi196" target="origFile">xt_tl = c1*q_tl(-<code class="constant">2</code>, j) + c2*q_tl(-<code class="constant">1</code>, j) + c3*q_tl(<code class="constant">0</code>, j)</a>
          <a href="null_p.html#tp_core_modi196" target="origFile">xt = c1*q(-<code class="constant">2</code>, j) + c2*q(-<code class="constant">1</code>, j) + c3*q(<code class="constant">0</code>, j)</a>
<a href="null_p.html#tp_core_modi197" target="origFile"><code class="comment">!#ifdef DO_MONO_EDGE</code></a>
<a href="null_p.html#tp_core_modi197" target="origFile"><code class="comment">!             xt = max( xt, min(q(-1,j),q(0,j)) )</code></a>
<a href="null_p.html#tp_core_modi197" target="origFile"><code class="comment">!             xt = min( xt, max(q(-1,j),q(0,j)) )</code></a>
<a name="fxppm_tlmi197"></a><a href="null_p.html#tp_core_modi197" target="origFile"><code class="comment">!#endif</code></a>
<a name="fxppm_tlmi198"></a>          <a href="null_p.html#tp_core_modi197" target="origFile">bl_tl(<code class="constant">0</code>) = xt_tl - q_tl(<code class="constant">0</code>, j)</a>
<a name="fxppm_tlmi198"></a>          <a href="null_p.html#tp_core_modi197" target="origFile">bl(<code class="constant">0</code>) = xt - q(<code class="constant">0</code>, j)</a>
<a name="fxppm_tlmi199"></a>          <a href="null_p.html#tp_core_modi198" target="origFile">xt_tl = c3*q_tl(<code class="constant">1</code>, j) + c2*q_tl(<code class="constant">2</code>, j) + c1*q_tl(<code class="constant">3</code>, j)</a>
          <a href="null_p.html#tp_core_modi198" target="origFile">xt = c3*q(<code class="constant">1</code>, j) + c2*q(<code class="constant">2</code>, j) + c1*q(<code class="constant">3</code>, j)</a>
<a href="null_p.html#tp_core_modi199" target="origFile"><code class="comment">!#ifdef DO_MONO_EDGE</code></a>
<a href="null_p.html#tp_core_modi199" target="origFile"><code class="comment">!             xt = max( xt, min(q(1,j),q(2,j)) )</code></a>
<a href="null_p.html#tp_core_modi199" target="origFile"><code class="comment">!             xt = min( xt, max(q(1,j),q(2,j)) )</code></a>
<a name="fxppm_tlmi199"></a><a href="null_p.html#tp_core_modi199" target="origFile"><code class="comment">!#endif</code></a>
<a name="fxppm_tlmi200"></a>          <a href="null_p.html#tp_core_modi199" target="origFile">br_tl(<code class="constant">1</code>) = xt_tl - q_tl(<code class="constant">1</code>, j)</a>
<a name="fxppm_tlmi200"></a>          <a href="null_p.html#tp_core_modi199" target="origFile">br(<code class="constant">1</code>) = xt - q(<code class="constant">1</code>, j)</a>
          <a href="null_p.html#tp_core_modi200" target="origFile">bl_tl(<code class="constant">2</code>) = xt_tl - q_tl(<code class="constant">2</code>, j)</a>
<a name="fxppm_tlmi201"></a>          <a href="null_p.html#tp_core_modi200" target="origFile">bl(<code class="constant">2</code>) = xt - q(<code class="constant">2</code>, j)</a>
<a name="fxppm_tlmi202"></a>        <a href="null_p.html#tp_core_modi189" target="origFile"><code class="keyword">END IF</code></a>
        <a href="null_p.html#tp_core_modi201" target="origFile"><code class="keyword">IF</code> (ie + <code class="constant">1 </code>.EQ. npx) <code class="keyword">THEN</code></a>
<a name="fxppm_tlmi202"></a>          <a href="null_p.html#tp_core_modi202" target="origFile">x0l_tl = <code class="constant">0.5</code>*((<code class="constant">2.</code>*dxa(npx-<code class="constant">1</code>, j)+dxa(npx-<code class="constant">2</code>, j))*q_tl(npx-<code class="constant">1</code>, j)-<code class="label">&</code></a>
<a href="null_p.html#tp_core_modi202" target="origFile"><code class="label">&           </code>dxa(npx-<code class="constant">1</code>, j)*q_tl(npx-<code class="constant">2</code>, j))/(dxa(npx-<code class="constant">1</code>, j)+dxa(npx-<code class="constant">2</code>, j))</a>
<a name="fxppm_tlmi203"></a>          <a href="null_p.html#tp_core_modi202" target="origFile">x0l = <code class="constant">0.5</code>*((<code class="constant">2.</code>*dxa(npx-<code class="constant">1</code>, j)+dxa(npx-<code class="constant">2</code>, j))*q(npx-<code class="constant">1</code>, j)-dxa(<code class="label">&</code></a>
<a href="null_p.html#tp_core_modi202" target="origFile"><code class="label">&           </code>npx-<code class="constant">1</code>, j)*q(npx-<code class="constant">2</code>, j))/(dxa(npx-<code class="constant">1</code>, j)+dxa(npx-<code class="constant">2</code>, j))</a>
<a name="fxppm_tlmi203"></a>          <a href="null_p.html#tp_core_modi203" target="origFile">x0r_tl = <code class="constant">0.5</code>*((<code class="constant">2.</code>*dxa(npx, j)+dxa(npx+<code class="constant">1</code>, j))*q_tl(npx, j)-dxa(<code class="label">&</code></a>
<a href="null_p.html#tp_core_modi203" target="origFile"><code class="label">&           </code>npx, j)*q_tl(npx+<code class="constant">1</code>, j))/(dxa(npx, j)+dxa(npx+<code class="constant">1</code>, j))</a>
<a name="fxppm_tlmi204"></a>          <a href="null_p.html#tp_core_modi203" target="origFile">x0r = <code class="constant">0.5</code>*((<code class="constant">2.</code>*dxa(npx, j)+dxa(npx+<code class="constant">1</code>, j))*q(npx, j)-dxa(npx, j<code class="label">&</code></a>
<a href="null_p.html#tp_core_modi203" target="origFile"><code class="label">&           </code>)*q(npx+<code class="constant">1</code>, j))/(dxa(npx, j)+dxa(npx+<code class="constant">1</code>, j))</a>
<a name="fxppm_tlmi204"></a>          <a href="null_p.html#tp_core_modi204" target="origFile">bl_tl(npx-<code class="constant">2</code>) = p1*(q_tl(npx-<code class="constant">2</code>, j)+q_tl(npx-<code class="constant">3</code>, j)) + p2*(q_tl(<code class="label">&</code></a>
<a href="null_p.html#tp_core_modi204" target="origFile"><code class="label">&           </code>npx-<code class="constant">4</code>, j)+q_tl(npx-<code class="constant">1</code>, j)) - q_tl(npx-<code class="constant">2</code>, j)</a>
<a name="fxppm_tlmi205"></a>          <a href="null_p.html#tp_core_modi204" target="origFile">bl(npx-<code class="constant">2</code>) = p1*(q(npx-<code class="constant">2</code>, j)+q(npx-<code class="constant">3</code>, j)) + p2*(q(npx-<code class="constant">4</code>, j)+q(<code class="label">&</code></a>
<a href="null_p.html#tp_core_modi204" target="origFile"><code class="label">&           </code>npx-<code class="constant">1</code>, j)) - q(npx-<code class="constant">2</code>, j)</a>
<a href="null_p.html#tp_core_modi205" target="origFile"><code class="comment">!             xt = x0L*sin_sg(npx-1,j,3) + x0R*sin_sg(npx,j,1)</code></a>
<a name="fxppm_tlmi205"></a><a href="null_p.html#tp_core_modi205" target="origFile"><code class="comment">!             xt = 2.*xt / (sin_sg(npx,j,1) + sin_sg(npx-1,j,3))</code></a>
<a name="fxppm_tlmi206"></a>          <a href="null_p.html#tp_core_modi205" target="origFile">xt_tl = x0l_tl + x0r_tl</a>
<a name="fxppm_tlmi206"></a>          <a href="null_p.html#tp_core_modi205" target="origFile">xt = x0l + x0r</a>
<a name="fxppm_tlmi207"></a>          <a href="null_p.html#tp_core_modi206" target="origFile">br_tl(npx-<code class="constant">1</code>) = xt_tl - q_tl(npx-<code class="constant">1</code>, j)</a>
<a name="fxppm_tlmi207"></a>          <a href="null_p.html#tp_core_modi206" target="origFile">br(npx-<code class="constant">1</code>) = xt - q(npx-<code class="constant">1</code>, j)</a>
<a name="fxppm_tlmi208"></a>          <a href="null_p.html#tp_core_modi207" target="origFile">bl_tl(npx) = xt_tl - q_tl(npx, j)</a>
          <a href="null_p.html#tp_core_modi207" target="origFile">bl(npx) = xt - q(npx, j)</a>
<a name="fxppm_tlmi208"></a>          <a href="null_p.html#tp_core_modi208" target="origFile">xt_tl = c3*q_tl(npx, j) + c2*q_tl(npx+<code class="constant">1</code>, j) + c1*q_tl(npx+<code class="constant">2</code>, j<code class="label">&</code></a>
<a name="fxppm_tlmi209"></a><a href="null_p.html#tp_core_modi208" target="origFile"><code class="label">&           </code>)</a>
          <a href="null_p.html#tp_core_modi208" target="origFile">xt = c3*q(npx, j) + c2*q(npx+<code class="constant">1</code>, j) + c1*q(npx+<code class="constant">2</code>, j)</a>
<a href="null_p.html#tp_core_modi209" target="origFile"><code class="comment">!#ifdef DO_MONO_EDGE</code></a>
<a href="null_p.html#tp_core_modi209" target="origFile"><code class="comment">!             xt = max( xt, min(q(npx,j),q(npx+1,j)) )</code></a>
<a href="null_p.html#tp_core_modi209" target="origFile"><code class="comment">!             xt = min( xt, max(q(npx,j),q(npx+1,j)) )</code></a>
<a name="fxppm_tlmi209"></a><a href="null_p.html#tp_core_modi209" target="origFile"><code class="comment">!#endif</code></a>
<a name="fxppm_tlmi210"></a>          <a href="null_p.html#tp_core_modi209" target="origFile">br_tl(npx) = xt_tl - q_tl(npx, j)</a>
          <a href="null_p.html#tp_core_modi209" target="origFile">br(npx) = xt - q(npx, j)</a>
<a name="fxppm_tlmi210"></a>          <a href="null_p.html#tp_core_modi210" target="origFile">xt_tl = c1*q_tl(npx-<code class="constant">3</code>, j) + c2*q_tl(npx-<code class="constant">2</code>, j) + c3*q_tl(npx-<code class="constant">1</code><code class="label">&</code></a>
<a name="fxppm_tlmi211"></a><a href="null_p.html#tp_core_modi210" target="origFile"><code class="label">&           </code>, j)</a>
          <a href="null_p.html#tp_core_modi210" target="origFile">xt = c1*q(npx-<code class="constant">3</code>, j) + c2*q(npx-<code class="constant">2</code>, j) + c3*q(npx-<code class="constant">1</code>, j)</a>
<a href="null_p.html#tp_core_modi211" target="origFile"><code class="comment">!#ifdef DO_MONO_EDGE</code></a>
<a href="null_p.html#tp_core_modi211" target="origFile"><code class="comment">!             xt = max( xt, min(q(npx-2,j),q(npx-1,j)) )</code></a>
<a href="null_p.html#tp_core_modi211" target="origFile"><code class="comment">!             xt = min( xt, max(q(npx-2,j),q(npx-1,j)) )</code></a>
<a name="fxppm_tlmi211"></a><a href="null_p.html#tp_core_modi211" target="origFile"><code class="comment">!#endif</code></a>
<a name="fxppm_tlmi212"></a>          <a href="null_p.html#tp_core_modi211" target="origFile">br_tl(npx-<code class="constant">2</code>) = xt_tl - q_tl(npx-<code class="constant">2</code>, j)</a>
<a name="fxppm_tlmi212"></a>          <a href="null_p.html#tp_core_modi211" target="origFile">br(npx-<code class="constant">2</code>) = xt - q(npx-<code class="constant">2</code>, j)</a>
          <a href="null_p.html#tp_core_modi212" target="origFile">bl_tl(npx-<code class="constant">1</code>) = xt_tl - q_tl(npx-<code class="constant">1</code>, j)</a>
<a name="fxppm_tlmi216"></a>          <a href="null_p.html#tp_core_modi212" target="origFile">bl(npx-<code class="constant">1</code>) = xt - q(npx-<code class="constant">1</code>, j)</a>
<a name="fxppm_tlmi213"></a>        <a href="null_p.html#tp_core_modi201" target="origFile"><code class="keyword">END IF</code></a>
<a name="fxppm_tlmi214"></a>        <a href="null_p.html#tp_core_modi216" target="origFile"><code class="keyword">DO </code>i=ifirst,ilast+<code class="constant">1</code></a>
          <a href="null_p.html#tp_core_modi213" target="origFile"><code class="keyword">IF</code> (c(i, j) .GT. <code class="constant">0.</code>) <code class="keyword">THEN</code></a>
<a name="fxppm_tlmi214"></a>            <a href="null_p.html#tp_core_modi214" target="origFile">flux_tl(i, j) = q_tl(i-<code class="constant">1</code>, j) + (<code class="constant">1.</code>-c(i, j))*(br_tl(i-<code class="constant">1</code>)-c(i<code class="label">&</code></a>
<a href="null_p.html#tp_core_modi214" target="origFile"><code class="label">&             </code>, j)*(bl_tl(i-<code class="constant">1</code>)+br_tl(i-<code class="constant">1</code>)))</a>
            <a href="null_p.html#tp_core_modi214" target="origFile">flux(i, j) = q(i-<code class="constant">1</code>, j) + (<code class="constant">1.</code>-c(i, j))*(br(i-<code class="constant">1</code>)-c(i, j)*(bl(i<code class="label">&</code></a>
<a name="fxppm_tlmi215"></a><a href="null_p.html#tp_core_modi214" target="origFile"><code class="label">&             </code>-<code class="constant">1</code>)+br(i-<code class="constant">1</code>)))</a>
          <a href="null_p.html#tp_core_modi213" target="origFile"><code class="keyword">ELSE</code></a>
<a name="fxppm_tlmi215"></a>            <a href="null_p.html#tp_core_modi215" target="origFile">flux_tl(i, j) = q_tl(i, j) + (<code class="constant">1.</code>+c(i, j))*(bl_tl(i)+c(i, j)*<code class="label">&</code></a>
<a href="null_p.html#tp_core_modi215" target="origFile"><code class="label">&             </code>(bl_tl(i)+br_tl(i)))</a>
            <a href="null_p.html#tp_core_modi215" target="origFile">flux(i, j) = q(i, j) + (<code class="constant">1.</code>+c(i, j))*(bl(i)+c(i, j)*(bl(i)+br<code class="label">&</code></a>
<a href="null_p.html#tp_core_modi215" target="origFile"><code class="label">&             </code>(i)))</a>
          <a href="null_p.html#tp_core_modi213" target="origFile"><code class="keyword">END IF</code></a>
        <a href="null_p.html#tp_core_modi216" target="origFile"><code class="keyword">END DO</code></a>
      <a href="null_p.html#tp_core_modi217" target="origFile"><code class="keyword">END DO</code></a>
    <a href="null_p.html#tp_core_modi185" target="origFile"><code class="keyword">ELSE</code></a>
      <a href="null_p.html#tp_core_modi185" target="origFile">flux_tl = <code class="constant">0.0_8</code></a>
<a name="fxppm"></a>    <a href="null_p.html#tp_core_modi185" target="origFile"><code class="keyword">END IF</code></a>
  <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END SUBROUTINE </code><code class="funcname">FXPPM_TLM</code></a>
  <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">SUBROUTINE </code><code class="funcname">FXPPM</code>(<code class="vardecl">c</code>, <code class="vardecl">q</code>, <code class="vardecl">flux</code>, <code class="vardecl">iord</code>, <code class="vardecl">ifirst</code>, <code class="vardecl">ilast</code>, <code class="vardecl">jfirst</code>, <code class="vardecl">jlast</code>, <code class="vardecl">npx</code>, <code class="label">&</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="label">&   </code><code class="vardecl">npy</code>)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IMPLICIT NONE</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! !INPUT PARAMETERS:</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!  X-Dir strip</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">ifirst</code>, <code class="vardecl">ilast</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!  Y-Dir strip</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">jfirst</code>, <code class="vardecl">jlast</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">iord</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">npx</code>, <code class="vardecl">npy</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">q</code>(<code class="vardecl">ifirst</code>-<code class="vardecl">ng</code>:<code class="vardecl">ilast</code>+<code class="vardecl">ng</code>, <code class="vardecl">jfirst</code>:<code class="vardecl">jlast</code>)</a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! Courant   N (like FLUX)</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">c</code>(<code class="vardecl">ifirst</code>:<code class="vardecl">ilast</code>+<code class="constant">1</code>, <code class="vardecl">jfirst</code>:<code class="vardecl">jlast</code>)</a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! !OUTPUT PARAMETERS:</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!  Flux</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">INTENT(OUT) </code>:: <code class="vardecl">flux</code>(<code class="vardecl">ifirst</code>:<code class="vardecl">ilast</code>+<code class="constant">1</code>, <code class="vardecl">jfirst</code>:<code class="vardecl">jlast</code>)</a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! Local</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">LOGICAL </code>:: <code class="vardecl">extm</code>(<code class="vardecl">ifirst</code>-<code class="constant">2</code>:<code class="vardecl">ilast</code>+<code class="constant">2</code>)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">dm1</code>(<code class="vardecl">ifirst</code>-<code class="constant">2</code>:<code class="vardecl">ilast</code>+<code class="constant">2</code>)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">al</code>(<code class="vardecl">ifirst</code>-<code class="constant">1</code>:<code class="vardecl">ilast</code>+<code class="constant">2</code>)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">bl</code>(<code class="vardecl">ifirst</code>-<code class="constant">1</code>:<code class="vardecl">ilast</code>+<code class="constant">1</code>)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">br</code>(<code class="vardecl">ifirst</code>-<code class="constant">1</code>:<code class="vardecl">ilast</code>+<code class="constant">1</code>)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">dq</code>(<code class="vardecl">ifirst</code>-<code class="constant">3</code>:<code class="vardecl">ilast</code>+<code class="constant">2</code>)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">dl</code>, <code class="vardecl">dr</code>, <code class="vardecl">pmp</code>, <code class="vardecl">lac</code>, <code class="vardecl">ct</code>, <code class="vardecl">qe</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">pmp_1</code>, <code class="vardecl">lac_1</code>, <code class="vardecl">pmp_2</code>, <code class="vardecl">lac_2</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">xt</code>, <code class="vardecl">x1</code>, <code class="vardecl">x0</code>, <code class="vardecl">x0l</code>, <code class="vardecl">x0r</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">INTEGER </code>:: <code class="vardecl">i</code>, <code class="vardecl">j</code>, <code class="vardecl">is3</code>, <code class="vardecl">ie3</code>, <code class="vardecl">it</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">INTRINSIC </code><code class="funcname">MAX</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">INTRINSIC </code><code class="funcname">MIN</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile">x0 = big_number</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IF</code> (<code class="constant">3 </code>.LT. is - <code class="constant">1</code>) <code class="keyword">THEN</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile">is3 = is - <code class="constant">1</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">ELSE</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile">is3 = <code class="constant">3</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END IF</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IF</code> (npx - <code class="constant">3 </code>.GT. ie + <code class="constant">1</code>) <code class="keyword">THEN</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile">ie3 = ie + <code class="constant">1</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">ELSE</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile">ie3 = npx - <code class="constant">3</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END IF</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IF</code> (iord .EQ. <code class="constant">666</code>) <code class="keyword">THEN</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>j=jfirst,jlast</a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>i=is3,ie3</a>
          <a href="null_p.html#tp_core_mod" target="origFile">bl(i) = b5*q(i-<code class="constant">2</code>, j) + b4*q(i-<code class="constant">1</code>, j) + b3*q(i, j) + b2*q(i+<code class="constant">1</code>, j<code class="label">&</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="label">&           </code>) + b1*q(i+<code class="constant">2</code>, j)</a>
          <a href="null_p.html#tp_core_mod" target="origFile">br(i) = b1*q(i-<code class="constant">2</code>, j) + b2*q(i-<code class="constant">1</code>, j) + b3*q(i, j) + b4*q(i+<code class="constant">1</code>, j<code class="label">&</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="label">&           </code>) + b5*q(i+<code class="constant">2</code>, j)</a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!--------------</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! fix the edges</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!--------------</code></a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IF</code> (is .EQ. <code class="constant">1</code>) <code class="keyword">THEN</code></a>
          <a href="null_p.html#tp_core_mod" target="origFile">x0l = <code class="constant">0.5</code>*((<code class="constant">2.</code>*dxa(<code class="constant">0</code>, j)+dxa(-<code class="constant">1</code>, j))*q(<code class="constant">0</code>, j)-dxa(<code class="constant">0</code>, j)*q(-<code class="constant">1</code>, j<code class="label">&</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="label">&           </code>))/(dxa(<code class="constant">0</code>, j)+dxa(-<code class="constant">1</code>, j))</a>
          <a href="null_p.html#tp_core_mod" target="origFile">x0r = <code class="constant">0.5</code>*((<code class="constant">2.</code>*dxa(<code class="constant">1</code>, j)+dxa(<code class="constant">2</code>, j))*q(<code class="constant">1</code>, j)-dxa(<code class="constant">1</code>, j)*q(<code class="constant">2</code>, j))<code class="label">&</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="label">&           </code>/(dxa(<code class="constant">1</code>, j)+dxa(<code class="constant">2</code>, j))</a>
          <a href="null_p.html#tp_core_mod" target="origFile">br(<code class="constant">2</code>) = p1*(q(<code class="constant">2</code>, j)+q(<code class="constant">3</code>, j)) + p2*(q(<code class="constant">1</code>, j)+q(<code class="constant">4</code>, j)) - q(<code class="constant">2</code>, j)</a>
          <a href="null_p.html#tp_core_mod" target="origFile">xt = x0l + x0r</a>
          <a href="null_p.html#tp_core_mod" target="origFile">bl(<code class="constant">1</code>) = xt - q(<code class="constant">1</code>, j)</a>
          <a href="null_p.html#tp_core_mod" target="origFile">br(<code class="constant">0</code>) = xt - q(<code class="constant">0</code>, j)</a>
          <a href="null_p.html#tp_core_mod" target="origFile">xt = c1*q(-<code class="constant">2</code>, j) + c2*q(-<code class="constant">1</code>, j) + c3*q(<code class="constant">0</code>, j)</a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!#ifdef DO_MONO_EDGE</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!             xt = max( xt, min(q(-1,j),q(0,j)) )</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!             xt = min( xt, max(q(-1,j),q(0,j)) )</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!#endif</code></a>
          <a href="null_p.html#tp_core_mod" target="origFile">bl(<code class="constant">0</code>) = xt - q(<code class="constant">0</code>, j)</a>
          <a href="null_p.html#tp_core_mod" target="origFile">xt = c3*q(<code class="constant">1</code>, j) + c2*q(<code class="constant">2</code>, j) + c1*q(<code class="constant">3</code>, j)</a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!#ifdef DO_MONO_EDGE</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!             xt = max( xt, min(q(1,j),q(2,j)) )</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!             xt = min( xt, max(q(1,j),q(2,j)) )</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!#endif</code></a>
          <a href="null_p.html#tp_core_mod" target="origFile">br(<code class="constant">1</code>) = xt - q(<code class="constant">1</code>, j)</a>
          <a href="null_p.html#tp_core_mod" target="origFile">bl(<code class="constant">2</code>) = xt - q(<code class="constant">2</code>, j)</a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END IF</code></a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IF</code> (ie + <code class="constant">1 </code>.EQ. npx) <code class="keyword">THEN</code></a>
          <a href="null_p.html#tp_core_mod" target="origFile">x0l = <code class="constant">0.5</code>*((<code class="constant">2.</code>*dxa(npx-<code class="constant">1</code>, j)+dxa(npx-<code class="constant">2</code>, j))*q(npx-<code class="constant">1</code>, j)-dxa(<code class="label">&</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="label">&           </code>npx-<code class="constant">1</code>, j)*q(npx-<code class="constant">2</code>, j))/(dxa(npx-<code class="constant">1</code>, j)+dxa(npx-<code class="constant">2</code>, j))</a>
          <a href="null_p.html#tp_core_mod" target="origFile">x0r = <code class="constant">0.5</code>*((<code class="constant">2.</code>*dxa(npx, j)+dxa(npx+<code class="constant">1</code>, j))*q(npx, j)-dxa(npx, j<code class="label">&</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="label">&           </code>)*q(npx+<code class="constant">1</code>, j))/(dxa(npx, j)+dxa(npx+<code class="constant">1</code>, j))</a>
          <a href="null_p.html#tp_core_mod" target="origFile">bl(npx-<code class="constant">2</code>) = p1*(q(npx-<code class="constant">2</code>, j)+q(npx-<code class="constant">3</code>, j)) + p2*(q(npx-<code class="constant">4</code>, j)+q(<code class="label">&</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="label">&           </code>npx-<code class="constant">1</code>, j)) - q(npx-<code class="constant">2</code>, j)</a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!             xt = x0L*sin_sg(npx-1,j,3) + x0R*sin_sg(npx,j,1)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!             xt = 2.*xt / (sin_sg(npx,j,1) + sin_sg(npx-1,j,3))</code></a>
          <a href="null_p.html#tp_core_mod" target="origFile">xt = x0l + x0r</a>
          <a href="null_p.html#tp_core_mod" target="origFile">br(npx-<code class="constant">1</code>) = xt - q(npx-<code class="constant">1</code>, j)</a>
          <a href="null_p.html#tp_core_mod" target="origFile">bl(npx) = xt - q(npx, j)</a>
          <a href="null_p.html#tp_core_mod" target="origFile">xt = c3*q(npx, j) + c2*q(npx+<code class="constant">1</code>, j) + c1*q(npx+<code class="constant">2</code>, j)</a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!#ifdef DO_MONO_EDGE</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!             xt = max( xt, min(q(npx,j),q(npx+1,j)) )</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!             xt = min( xt, max(q(npx,j),q(npx+1,j)) )</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!#endif</code></a>
          <a href="null_p.html#tp_core_mod" target="origFile">br(npx) = xt - q(npx, j)</a>
          <a href="null_p.html#tp_core_mod" target="origFile">xt = c1*q(npx-<code class="constant">3</code>, j) + c2*q(npx-<code class="constant">2</code>, j) + c3*q(npx-<code class="constant">1</code>, j)</a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!#ifdef DO_MONO_EDGE</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!             xt = max( xt, min(q(npx-2,j),q(npx-1,j)) )</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!             xt = min( xt, max(q(npx-2,j),q(npx-1,j)) )</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!#endif</code></a>
          <a href="null_p.html#tp_core_mod" target="origFile">br(npx-<code class="constant">2</code>) = xt - q(npx-<code class="constant">2</code>, j)</a>
          <a href="null_p.html#tp_core_mod" target="origFile">bl(npx-<code class="constant">1</code>) = xt - q(npx-<code class="constant">1</code>, j)</a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END IF</code></a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>i=ifirst,ilast+<code class="constant">1</code></a>
          <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IF</code> (c(i, j) .GT. <code class="constant">0.</code>) <code class="keyword">THEN</code></a>
            <a href="null_p.html#tp_core_mod" target="origFile">flux(i, j) = q(i-<code class="constant">1</code>, j) + (<code class="constant">1.</code>-c(i, j))*(br(i-<code class="constant">1</code>)-c(i, j)*(bl(i<code class="label">&</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="label">&             </code>-<code class="constant">1</code>)+br(i-<code class="constant">1</code>)))</a>
          <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">ELSE</code></a>
            <a href="null_p.html#tp_core_mod" target="origFile">flux(i, j) = q(i, j) + (<code class="constant">1.</code>+c(i, j))*(bl(i)+c(i, j)*(bl(i)+br<code class="label">&</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="label">&             </code>(i)))</a>
          <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END IF</code></a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
<a name="fyppm_tlm"></a>    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END IF</code></a>
  <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END SUBROUTINE </code><code class="funcname">FXPPM</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!  Differentiation of fyppm in forward (tangent) mode:</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!   variations   of useful results: flux</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!   with respect to varying inputs: q</code></a>
  <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">SUBROUTINE </code><code class="funcname">FYPPM_TLM</code>(<code class="vardecl">c</code>, <code class="vardecl">q</code>, <code class="vardecl">q_tl</code>, <code class="vardecl">flux</code>, <code class="vardecl">flux_tl</code>, <code class="vardecl">jord</code>, <code class="vardecl">ifirst</code>, <code class="vardecl">ilast</code>, <code class="label">&</code></a>
<a name="fyppm_tlmi97"></a><a href="null_p.html#tp_core_mod" target="origFile"><code class="label">&   </code><code class="vardecl">jfirst</code>, <code class="vardecl">jlast</code>, <code class="vardecl">npx</code>, <code class="vardecl">npy</code>)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IMPLICIT NONE</code></a>
<a name="fyppm_tlmi98"></a><a href="null_p.html#tp_core_modi97" target="origFile"><code class="comment">!  X-Dir strip</code></a>
    <a href="null_p.html#tp_core_modi97" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">ifirst</code>, <code class="vardecl">ilast</code></a>
<a name="fyppm_tlmi99"></a><a href="null_p.html#tp_core_modi98" target="origFile"><code class="comment">!  Y-Dir strip</code></a>
<a name="fyppm_tlmi100"></a>    <a href="null_p.html#tp_core_modi98" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">jfirst</code>, <code class="vardecl">jlast</code></a>
<a name="fyppm_tlmi101"></a>    <a href="null_p.html#tp_core_modi99" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">jord</code></a>
    <a href="null_p.html#tp_core_modi100" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">npx</code>, <code class="vardecl">npy</code></a>
<a name="fyppm_tlmi102"></a>    <a href="null_p.html#tp_core_modi101" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">q</code>(<code class="vardecl">ifirst</code>:<code class="vardecl">ilast</code>, <code class="vardecl">jfirst</code>-<code class="vardecl">ng</code>:<code class="vardecl">jlast</code>+<code class="vardecl">ng</code>)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">q_tl</code>(<code class="vardecl">ifirst</code>:<code class="vardecl">ilast</code>, <code class="vardecl">jfirst</code>-<code class="vardecl">ng</code>:<code class="vardecl">jlast</code>+<code class="vardecl">ng</code>)</a>
<a name="fyppm_tlmi103"></a><a href="null_p.html#tp_core_modi102" target="origFile"><code class="comment">! Courant number</code></a>
    <a href="null_p.html#tp_core_modi102" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">c</code>(<code class="vardecl">isd</code>:<code class="vardecl">ied</code>, <code class="vardecl">js</code>:<code class="vardecl">je</code>+<code class="constant">1</code>)</a>
<a href="null_p.html#tp_core_modi103" target="origFile"><code class="comment">!  Flux</code></a>
<a name="fyppm_tlmi104"></a>    <a href="null_p.html#tp_core_modi103" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">INTENT(OUT) </code>:: <code class="vardecl">flux</code>(<code class="vardecl">ifirst</code>:<code class="vardecl">ilast</code>, <code class="vardecl">jfirst</code>:<code class="vardecl">jlast</code>+<code class="constant">1</code>)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">INTENT(OUT) </code>:: <code class="vardecl">flux_tl</code>(<code class="vardecl">ifirst</code>:<code class="vardecl">ilast</code>, <code class="vardecl">jfirst</code>:<code class="vardecl">jlast</code>+<code class="constant">1</code>)</a>
<a href="null_p.html#tp_core_modi104" target="origFile"><code class="comment">! real(FVPRC)   , INTENT(OUT)::   dm(ifirst:ilast,jfirst-2:jlast+2)</code></a>
<a name="fyppm_tlmi105"></a><a href="null_p.html#tp_core_modi104" target="origFile"><code class="comment">! Local:</code></a>
<a name="fyppm_tlmi106"></a>    <a href="null_p.html#tp_core_modi104" target="origFile"><code class="typename">LOGICAL </code>:: <code class="vardecl">extm</code>(<code class="vardecl">ifirst</code>:<code class="vardecl">ilast</code>, <code class="vardecl">jfirst</code>-<code class="constant">2</code>:<code class="vardecl">jlast</code>+<code class="constant">2</code>)</a>
    <a href="null_p.html#tp_core_modi105" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">al</code>(<code class="vardecl">ifirst</code>:<code class="vardecl">ilast</code>, <code class="vardecl">jfirst</code>-<code class="constant">1</code>:<code class="vardecl">jlast</code>+<code class="constant">2</code>)</a>
<a name="fyppm_tlmi107"></a>    <a href="null_p.html#tp_core_modi106" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">bl</code>(<code class="vardecl">ifirst</code>:<code class="vardecl">ilast</code>, <code class="vardecl">jfirst</code>-<code class="constant">1</code>:<code class="vardecl">jlast</code>+<code class="constant">1</code>)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">bl_tl</code>(<code class="vardecl">ifirst</code>:<code class="vardecl">ilast</code>, <code class="vardecl">jfirst</code>-<code class="constant">1</code>:<code class="vardecl">jlast</code>+<code class="constant">1</code>)</a>
<a name="fyppm_tlmi108"></a>    <a href="null_p.html#tp_core_modi107" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">br</code>(<code class="vardecl">ifirst</code>:<code class="vardecl">ilast</code>, <code class="vardecl">jfirst</code>-<code class="constant">1</code>:<code class="vardecl">jlast</code>+<code class="constant">1</code>)</a>
<a name="fyppm_tlmi109"></a>    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">br_tl</code>(<code class="vardecl">ifirst</code>:<code class="vardecl">ilast</code>, <code class="vardecl">jfirst</code>-<code class="constant">1</code>:<code class="vardecl">jlast</code>+<code class="constant">1</code>)</a>
<a name="fyppm_tlmi110"></a>    <a href="null_p.html#tp_core_modi108" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">dq</code>(<code class="vardecl">ifirst</code>:<code class="vardecl">ilast</code>, <code class="vardecl">jfirst</code>-<code class="constant">3</code>:<code class="vardecl">jlast</code>+<code class="constant">2</code>)</a>
<a name="fyppm_tlmi111"></a>    <a href="null_p.html#tp_core_modi109" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">dl</code>, <code class="vardecl">dr</code>, <code class="vardecl">pmp</code>, <code class="vardecl">lac</code>, <code class="vardecl">ct</code>, <code class="vardecl">qe</code></a>
    <a href="null_p.html#tp_core_modi110" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">pmp_1</code>, <code class="vardecl">lac_1</code>, <code class="vardecl">pmp_2</code>, <code class="vardecl">lac_2</code></a>
<a name="fyppm_tlmi112"></a>    <a href="null_p.html#tp_core_modi111" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">xt</code>, <code class="vardecl">x0</code>, <code class="vardecl">x1</code>, <code class="vardecl">x0l</code>, <code class="vardecl">x0r</code></a>
<a name="fyppm_tlmi113"></a>    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">xt_tl</code>, <code class="vardecl">x0l_tl</code>, <code class="vardecl">x0r_tl</code></a>
<a name="fyppm_tlmi114"></a>    <a href="null_p.html#tp_core_modi112" target="origFile"><code class="typename">INTEGER </code>:: <code class="vardecl">i</code>, <code class="vardecl">j</code>, <code class="vardecl">js3</code>, <code class="vardecl">je3</code>, <code class="vardecl">jt</code></a>
<a name="fyppm_tlmi115"></a>    <a href="null_p.html#tp_core_modi113" target="origFile"><code class="keyword">INTRINSIC </code><code class="funcname">MAX</code></a>
<a name="fyppm_tlmi116"></a>    <a href="null_p.html#tp_core_modi114" target="origFile"><code class="keyword">INTRINSIC </code><code class="funcname">MIN</code></a>
<a name="fyppm_tlmi117"></a>    <a href="null_p.html#tp_core_modi115" target="origFile"><code class="typename">INTEGER </code>:: <code class="vardecl">max1</code></a>
<a name="fyppm_tlmi118"></a>    <a href="null_p.html#tp_core_modi116" target="origFile"><code class="typename">INTEGER </code>:: <code class="vardecl">min1</code></a>
<a name="fyppm_tlmi119"></a>    <a href="null_p.html#tp_core_modi117" target="origFile"><code class="keyword">IF</code> (jord .EQ. <code class="constant">666</code>) <code class="keyword">THEN</code></a>
      <a href="null_p.html#tp_core_modi118" target="origFile"><code class="keyword">IF</code> (<code class="constant">3 </code>.LT. js - <code class="constant">1</code>) <code class="keyword">THEN</code></a>
<a name="fyppm_tlmi120"></a>        <a href="null_p.html#tp_core_modi119" target="origFile">max1 = js - <code class="constant">1</code></a>
      <a href="null_p.html#tp_core_modi118" target="origFile"><code class="keyword">ELSE</code></a>
<a name="fyppm_tlmi121"></a>        <a href="null_p.html#tp_core_modi120" target="origFile">max1 = <code class="constant">3</code></a>
<a name="fyppm_tlmi122"></a>      <a href="null_p.html#tp_core_modi118" target="origFile"><code class="keyword">END IF</code></a>
      <a href="null_p.html#tp_core_modi121" target="origFile"><code class="keyword">IF</code> (npy - <code class="constant">3 </code>.GT. je + <code class="constant">1</code>) <code class="keyword">THEN</code></a>
        <a href="null_p.html#tp_core_modi122" target="origFile">min1 = je + <code class="constant">1</code></a>
        <a href="null_p.html#tp_core_modi121" target="origFile">bl_tl = <code class="constant">0.0_8</code></a>
<a name="fyppm_tlmi123"></a>        <a href="null_p.html#tp_core_modi121" target="origFile">br_tl = <code class="constant">0.0_8</code></a>
      <a href="null_p.html#tp_core_modi121" target="origFile"><code class="keyword">ELSE</code></a>
        <a href="null_p.html#tp_core_modi123" target="origFile">min1 = npy - <code class="constant">3</code></a>
        <a href="null_p.html#tp_core_modi121" target="origFile">bl_tl = <code class="constant">0.0_8</code></a>
<a name="fyppm_tlmi127"></a>        <a href="null_p.html#tp_core_modi121" target="origFile">br_tl = <code class="constant">0.0_8</code></a>
<a name="fyppm_tlmi126"></a>      <a href="null_p.html#tp_core_modi121" target="origFile"><code class="keyword">END IF</code></a>
<a name="fyppm_tlmi124"></a>      <a href="null_p.html#tp_core_modi127" target="origFile"><code class="keyword">DO </code>j=max1,min1</a>
        <a href="null_p.html#tp_core_modi126" target="origFile"><code class="keyword">DO </code>i=ifirst,ilast</a>
<a name="fyppm_tlmi124"></a>          <a href="null_p.html#tp_core_modi124" target="origFile">bl_tl(i, j) = b5*q_tl(i, j-<code class="constant">2</code>) + b4*q_tl(i, j-<code class="constant">1</code>) + b3*q_tl(i, j<code class="label">&</code></a>
<a href="null_p.html#tp_core_modi124" target="origFile"><code class="label">&           </code>) + b2*q_tl(i, j+<code class="constant">1</code>) + b1*q_tl(i, j+<code class="constant">2</code>)</a>
<a name="fyppm_tlmi125"></a>          <a href="null_p.html#tp_core_modi124" target="origFile">bl(i, j) = b5*q(i, j-<code class="constant">2</code>) + b4*q(i, j-<code class="constant">1</code>) + b3*q(i, j) + b2*q(i, <code class="label">&</code></a>
<a href="null_p.html#tp_core_modi124" target="origFile"><code class="label">&           </code>j+<code class="constant">1</code>) + b1*q(i, j+<code class="constant">2</code>)</a>
<a name="fyppm_tlmi125"></a>          <a href="null_p.html#tp_core_modi125" target="origFile">br_tl(i, j) = b1*q_tl(i, j-<code class="constant">2</code>) + b2*q_tl(i, j-<code class="constant">1</code>) + b3*q_tl(i, j<code class="label">&</code></a>
<a href="null_p.html#tp_core_modi125" target="origFile"><code class="label">&           </code>) + b4*q_tl(i, j+<code class="constant">1</code>) + b5*q_tl(i, j+<code class="constant">2</code>)</a>
          <a href="null_p.html#tp_core_modi125" target="origFile">br(i, j) = b1*q(i, j-<code class="constant">2</code>) + b2*q(i, j-<code class="constant">1</code>) + b3*q(i, j) + b4*q(i, <code class="label">&</code></a>
<a href="null_p.html#tp_core_modi125" target="origFile"><code class="label">&           </code>j+<code class="constant">1</code>) + b5*q(i, j+<code class="constant">2</code>)</a>
<a name="fyppm_tlmi128"></a>        <a href="null_p.html#tp_core_modi126" target="origFile"><code class="keyword">END DO</code></a>
<a name="fyppm_tlmi140"></a>      <a href="null_p.html#tp_core_modi127" target="origFile"><code class="keyword">END DO</code></a>
<a name="fyppm_tlmi129"></a>      <a href="null_p.html#tp_core_modi128" target="origFile"><code class="keyword">IF</code> (js .EQ. <code class="constant">1</code>) <code class="keyword">THEN</code></a>
        <a href="null_p.html#tp_core_modi140" target="origFile"><code class="keyword">DO </code>i=ifirst,ilast</a>
<a href="null_p.html#tp_core_modi129" target="origFile"><code class="comment">!           br(i,2) = al(i,3) - q(i,2)</code></a>
<a name="fyppm_tlmi129"></a>          <a href="null_p.html#tp_core_modi129" target="origFile">br_tl(i, <code class="constant">2</code>) = p1*(q_tl(i, <code class="constant">2</code>)+q_tl(i, <code class="constant">3</code>)) + p2*(q_tl(i, <code class="constant">1</code>)+q_tl<code class="label">&</code></a>
<a href="null_p.html#tp_core_modi129" target="origFile"><code class="label">&           </code>(i, <code class="constant">4</code>)) - q_tl(i, <code class="constant">2</code>)</a>
<a name="fyppm_tlmi130"></a>          <a href="null_p.html#tp_core_modi129" target="origFile">br(i, <code class="constant">2</code>) = p1*(q(i, <code class="constant">2</code>)+q(i, <code class="constant">3</code>)) + p2*(q(i, <code class="constant">1</code>)+q(i, <code class="constant">4</code>)) - q(i, <code class="label">&</code></a>
<a href="null_p.html#tp_core_modi129" target="origFile"><code class="label">&           </code><code class="constant">2</code>)</a>
<a name="fyppm_tlmi130"></a>          <a href="null_p.html#tp_core_modi130" target="origFile">x0l_tl = <code class="constant">0.5</code>*((<code class="constant">2.</code>*dya(i, <code class="constant">0</code>)+dya(i, -<code class="constant">1</code>))*q_tl(i, <code class="constant">0</code>)-dya(i, <code class="constant">0</code>)*<code class="label">&</code></a>
<a href="null_p.html#tp_core_modi130" target="origFile"><code class="label">&           </code>q_tl(i, -<code class="constant">1</code>))/(dya(i, <code class="constant">0</code>)+dya(i, -<code class="constant">1</code>))</a>
<a name="fyppm_tlmi131"></a>          <a href="null_p.html#tp_core_modi130" target="origFile">x0l = <code class="constant">0.5</code>*((<code class="constant">2.</code>*dya(i, <code class="constant">0</code>)+dya(i, -<code class="constant">1</code>))*q(i, <code class="constant">0</code>)-dya(i, <code class="constant">0</code>)*q(i, -<code class="constant">1</code><code class="label">&</code></a>
<a href="null_p.html#tp_core_modi130" target="origFile"><code class="label">&           </code>))/(dya(i, <code class="constant">0</code>)+dya(i, -<code class="constant">1</code>))</a>
<a name="fyppm_tlmi131"></a>          <a href="null_p.html#tp_core_modi131" target="origFile">x0r_tl = <code class="constant">0.5</code>*((<code class="constant">2.</code>*dya(i, <code class="constant">1</code>)+dya(i, <code class="constant">2</code>))*q_tl(i, <code class="constant">1</code>)-dya(i, <code class="constant">1</code>)*<code class="label">&</code></a>
<a href="null_p.html#tp_core_modi131" target="origFile"><code class="label">&           </code>q_tl(i, <code class="constant">2</code>))/(dya(i, <code class="constant">1</code>)+dya(i, <code class="constant">2</code>))</a>
<a name="fyppm_tlmi132"></a>          <a href="null_p.html#tp_core_modi131" target="origFile">x0r = <code class="constant">0.5</code>*((<code class="constant">2.</code>*dya(i, <code class="constant">1</code>)+dya(i, <code class="constant">2</code>))*q(i, <code class="constant">1</code>)-dya(i, <code class="constant">1</code>)*q(i, <code class="constant">2</code>))<code class="label">&</code></a>
<a name="fyppm_tlmi132"></a><a href="null_p.html#tp_core_modi131" target="origFile"><code class="label">&           </code>/(dya(i, <code class="constant">1</code>)+dya(i, <code class="constant">2</code>))</a>
<a name="fyppm_tlmi133"></a>          <a href="null_p.html#tp_core_modi132" target="origFile">xt_tl = x0l_tl + x0r_tl</a>
          <a href="null_p.html#tp_core_modi132" target="origFile">xt = x0l + x0r</a>
<a href="null_p.html#tp_core_modi133" target="origFile"><code class="comment">!            xt = ( x0L*sin_sg(i,0,4) + x0R*sin_sg(i,1,2) ) </code></a>
<a name="fyppm_tlmi133"></a><a href="null_p.html#tp_core_modi133" target="origFile"><code class="comment">!            xt = 2.*xt / ( sin_sg(i,0,4) + sin_sg(i,1,2) )</code></a>
<a name="fyppm_tlmi134"></a>          <a href="null_p.html#tp_core_modi133" target="origFile">bl_tl(i, <code class="constant">1</code>) = xt_tl - q_tl(i, <code class="constant">1</code>)</a>
<a name="fyppm_tlmi134"></a>          <a href="null_p.html#tp_core_modi133" target="origFile">bl(i, <code class="constant">1</code>) = xt - q(i, <code class="constant">1</code>)</a>
<a name="fyppm_tlmi135"></a>          <a href="null_p.html#tp_core_modi134" target="origFile">br_tl(i, <code class="constant">0</code>) = xt_tl - q_tl(i, <code class="constant">0</code>)</a>
          <a href="null_p.html#tp_core_modi134" target="origFile">br(i, <code class="constant">0</code>) = xt - q(i, <code class="constant">0</code>)</a>
<a name="fyppm_tlmi135"></a><a href="null_p.html#tp_core_modi135" target="origFile"><code class="comment">!           xt = s14*0.25*(q(i,0)-q(i,-2)) - s11*(q(i,0)-q(i,-1)) + q(i,0)</code></a>
<a name="fyppm_tlmi136"></a>          <a href="null_p.html#tp_core_modi135" target="origFile">xt_tl = c1*q_tl(i, -<code class="constant">2</code>) + c2*q_tl(i, -<code class="constant">1</code>) + c3*q_tl(i, <code class="constant">0</code>)</a>
          <a href="null_p.html#tp_core_modi135" target="origFile">xt = c1*q(i, -<code class="constant">2</code>) + c2*q(i, -<code class="constant">1</code>) + c3*q(i, <code class="constant">0</code>)</a>
<a href="null_p.html#tp_core_modi136" target="origFile"><code class="comment">!#ifdef DO_MONO_EDGE</code></a>
<a href="null_p.html#tp_core_modi136" target="origFile"><code class="comment">!            xt = min( xt, max(q(i,-1), q(i,0)) )</code></a>
<a href="null_p.html#tp_core_modi136" target="origFile"><code class="comment">!            xt = max( xt, min(q(i,-1), q(i,0)) )</code></a>
<a name="fyppm_tlmi136"></a><a href="null_p.html#tp_core_modi136" target="origFile"><code class="comment">!#endif</code></a>
<a name="fyppm_tlmi137"></a>          <a href="null_p.html#tp_core_modi136" target="origFile">bl_tl(i, <code class="constant">0</code>) = xt_tl - q_tl(i, <code class="constant">0</code>)</a>
          <a href="null_p.html#tp_core_modi136" target="origFile">bl(i, <code class="constant">0</code>) = xt - q(i, <code class="constant">0</code>)</a>
<a name="fyppm_tlmi137"></a><a href="null_p.html#tp_core_modi137" target="origFile"><code class="comment">!           xt = s15*q(i,1) + s11*q(i,2) - s14*0.25*(q(i,3)-q(i,1))</code></a>
<a name="fyppm_tlmi138"></a>          <a href="null_p.html#tp_core_modi137" target="origFile">xt_tl = c3*q_tl(i, <code class="constant">1</code>) + c2*q_tl(i, <code class="constant">2</code>) + c1*q_tl(i, <code class="constant">3</code>)</a>
          <a href="null_p.html#tp_core_modi137" target="origFile">xt = c3*q(i, <code class="constant">1</code>) + c2*q(i, <code class="constant">2</code>) + c1*q(i, <code class="constant">3</code>)</a>
<a href="null_p.html#tp_core_modi138" target="origFile"><code class="comment">!#ifdef DO_MONO_EDGE</code></a>
<a href="null_p.html#tp_core_modi138" target="origFile"><code class="comment">!            xt = min( xt, max(q(i,1), q(i,2)) )</code></a>
<a href="null_p.html#tp_core_modi138" target="origFile"><code class="comment">!            xt = max( xt, min(q(i,1), q(i,2)) )</code></a>
<a name="fyppm_tlmi138"></a><a href="null_p.html#tp_core_modi138" target="origFile"><code class="comment">!#endif</code></a>
<a name="fyppm_tlmi139"></a>          <a href="null_p.html#tp_core_modi138" target="origFile">br_tl(i, <code class="constant">1</code>) = xt_tl - q_tl(i, <code class="constant">1</code>)</a>
<a name="fyppm_tlmi139"></a>          <a href="null_p.html#tp_core_modi138" target="origFile">br(i, <code class="constant">1</code>) = xt - q(i, <code class="constant">1</code>)</a>
          <a href="null_p.html#tp_core_modi139" target="origFile">bl_tl(i, <code class="constant">2</code>) = xt_tl - q_tl(i, <code class="constant">2</code>)</a>
          <a href="null_p.html#tp_core_modi139" target="origFile">bl(i, <code class="constant">2</code>) = xt - q(i, <code class="constant">2</code>)</a>
<a name="fyppm_tlmi141"></a>        <a href="null_p.html#tp_core_modi140" target="origFile"><code class="keyword">END DO</code></a>
<a name="fyppm_tlmi153"></a>      <a href="null_p.html#tp_core_modi128" target="origFile"><code class="keyword">END IF</code></a>
<a name="fyppm_tlmi142"></a>      <a href="null_p.html#tp_core_modi141" target="origFile"><code class="keyword">IF</code> (je + <code class="constant">1 </code>.EQ. npy) <code class="keyword">THEN</code></a>
        <a href="null_p.html#tp_core_modi153" target="origFile"><code class="keyword">DO </code>i=ifirst,ilast</a>
<a href="null_p.html#tp_core_modi142" target="origFile"><code class="comment">!           bl(i,npy-2) = al(i,npy-2) - q(i,npy-2)</code></a>
<a name="fyppm_tlmi142"></a>          <a href="null_p.html#tp_core_modi142" target="origFile">bl_tl(i, npy-<code class="constant">2</code>) = p1*(q_tl(i, npy-<code class="constant">3</code>)+q_tl(i, npy-<code class="constant">2</code>)) + p2*(<code class="label">&</code></a>
<a href="null_p.html#tp_core_modi142" target="origFile"><code class="label">&           </code>q_tl(i, npy-<code class="constant">4</code>)+q_tl(i, npy-<code class="constant">1</code>)) - q_tl(i, npy-<code class="constant">2</code>)</a>
<a name="fyppm_tlmi143"></a>          <a href="null_p.html#tp_core_modi142" target="origFile">bl(i, npy-<code class="constant">2</code>) = p1*(q(i, npy-<code class="constant">3</code>)+q(i, npy-<code class="constant">2</code>)) + p2*(q(i, npy-<code class="constant">4</code>)+<code class="label">&</code></a>
<a href="null_p.html#tp_core_modi142" target="origFile"><code class="label">&           </code>q(i, npy-<code class="constant">1</code>)) - q(i, npy-<code class="constant">2</code>)</a>
<a name="fyppm_tlmi143"></a>          <a href="null_p.html#tp_core_modi143" target="origFile">x0l_tl = <code class="constant">0.5</code>*((<code class="constant">2.</code>*dya(i, npy-<code class="constant">1</code>)+dya(i, npy-<code class="constant">2</code>))*q_tl(i, npy-<code class="constant">1</code>)-<code class="label">&</code></a>
<a href="null_p.html#tp_core_modi143" target="origFile"><code class="label">&           </code>dya(i, npy-<code class="constant">1</code>)*q_tl(i, npy-<code class="constant">2</code>))/(dya(i, npy-<code class="constant">1</code>)+dya(i, npy-<code class="constant">2</code>))</a>
<a name="fyppm_tlmi144"></a>          <a href="null_p.html#tp_core_modi143" target="origFile">x0l = <code class="constant">0.5</code>*((<code class="constant">2.</code>*dya(i, npy-<code class="constant">1</code>)+dya(i, npy-<code class="constant">2</code>))*q(i, npy-<code class="constant">1</code>)-dya(i<code class="label">&</code></a>
<a href="null_p.html#tp_core_modi143" target="origFile"><code class="label">&           </code>, npy-<code class="constant">1</code>)*q(i, npy-<code class="constant">2</code>))/(dya(i, npy-<code class="constant">1</code>)+dya(i, npy-<code class="constant">2</code>))</a>
<a name="fyppm_tlmi144"></a>          <a href="null_p.html#tp_core_modi144" target="origFile">x0r_tl = <code class="constant">0.5</code>*((<code class="constant">2.</code>*dya(i, npy)+dya(i, npy+<code class="constant">1</code>))*q_tl(i, npy)-dya(<code class="label">&</code></a>
<a href="null_p.html#tp_core_modi144" target="origFile"><code class="label">&           </code>i, npy)*q_tl(i, npy+<code class="constant">1</code>))/(dya(i, npy)+dya(i, npy+<code class="constant">1</code>))</a>
<a name="fyppm_tlmi145"></a>          <a href="null_p.html#tp_core_modi144" target="origFile">x0r = <code class="constant">0.5</code>*((<code class="constant">2.</code>*dya(i, npy)+dya(i, npy+<code class="constant">1</code>))*q(i, npy)-dya(i, npy<code class="label">&</code></a>
<a name="fyppm_tlmi145"></a><a href="null_p.html#tp_core_modi144" target="origFile"><code class="label">&           </code>)*q(i, npy+<code class="constant">1</code>))/(dya(i, npy)+dya(i, npy+<code class="constant">1</code>))</a>
<a name="fyppm_tlmi146"></a>          <a href="null_p.html#tp_core_modi145" target="origFile">xt_tl = x0l_tl + x0r_tl</a>
          <a href="null_p.html#tp_core_modi145" target="origFile">xt = x0l + x0r</a>
<a href="null_p.html#tp_core_modi146" target="origFile"><code class="comment">!            xt = x0L*sin_sg(i,npy-1,4) + x0R*sin_sg(i,npy,2)</code></a>
<a name="fyppm_tlmi146"></a><a href="null_p.html#tp_core_modi146" target="origFile"><code class="comment">!            xt = 2.*xt /( sin_sg(i,npy-1,4) + sin_sg(i,npy,2) )</code></a>
<a name="fyppm_tlmi147"></a>          <a href="null_p.html#tp_core_modi146" target="origFile">br_tl(i, npy-<code class="constant">1</code>) = xt_tl - q_tl(i, npy-<code class="constant">1</code>)</a>
<a name="fyppm_tlmi147"></a>          <a href="null_p.html#tp_core_modi146" target="origFile">br(i, npy-<code class="constant">1</code>) = xt - q(i, npy-<code class="constant">1</code>)</a>
<a name="fyppm_tlmi148"></a>          <a href="null_p.html#tp_core_modi147" target="origFile">bl_tl(i, npy) = xt_tl - q_tl(i, npy)</a>
          <a href="null_p.html#tp_core_modi147" target="origFile">bl(i, npy) = xt - q(i, npy)</a>
<a href="null_p.html#tp_core_modi148" target="origFile"><code class="comment">!           xt = s11*(q(i,npy+1)-q(i,npy)) - s14*0.25*(q(i,npy+2)-q(i,npy)) + q(i,npy)</code></a>
<a name="fyppm_tlmi148"></a>          <a href="null_p.html#tp_core_modi148" target="origFile">xt_tl = c3*q_tl(i, npy) + c2*q_tl(i, npy+<code class="constant">1</code>) + c1*q_tl(i, npy+<code class="constant">2</code><code class="label">&</code></a>
<a name="fyppm_tlmi149"></a><a href="null_p.html#tp_core_modi148" target="origFile"><code class="label">&           </code>)</a>
          <a href="null_p.html#tp_core_modi148" target="origFile">xt = c3*q(i, npy) + c2*q(i, npy+<code class="constant">1</code>) + c1*q(i, npy+<code class="constant">2</code>)</a>
<a href="null_p.html#tp_core_modi149" target="origFile"><code class="comment">!#ifdef DO_MONO_EDGE</code></a>
<a href="null_p.html#tp_core_modi149" target="origFile"><code class="comment">!            xt = min( xt, max(q(i,npy), q(i,npy+1)) )</code></a>
<a href="null_p.html#tp_core_modi149" target="origFile"><code class="comment">!            xt = max( xt, min(q(i,npy), q(i,npy+1)) )</code></a>
<a name="fyppm_tlmi149"></a><a href="null_p.html#tp_core_modi149" target="origFile"><code class="comment">!#endif</code></a>
<a name="fyppm_tlmi150"></a>          <a href="null_p.html#tp_core_modi149" target="origFile">br_tl(i, npy) = xt_tl - q_tl(i, npy)</a>
          <a href="null_p.html#tp_core_modi149" target="origFile">br(i, npy) = xt - q(i, npy)</a>
<a href="null_p.html#tp_core_modi150" target="origFile"><code class="comment">!           xt = s15*q(i,npy-1) + s11*q(i,npy-2) + s14*0.25*(q(i,npy-1)-q(i,npy-3))</code></a>
<a name="fyppm_tlmi150"></a>          <a href="null_p.html#tp_core_modi150" target="origFile">xt_tl = c1*q_tl(i, npy-<code class="constant">3</code>) + c2*q_tl(i, npy-<code class="constant">2</code>) + c3*q_tl(i, npy<code class="label">&</code></a>
<a name="fyppm_tlmi151"></a><a href="null_p.html#tp_core_modi150" target="origFile"><code class="label">&           </code>-<code class="constant">1</code>)</a>
          <a href="null_p.html#tp_core_modi150" target="origFile">xt = c1*q(i, npy-<code class="constant">3</code>) + c2*q(i, npy-<code class="constant">2</code>) + c3*q(i, npy-<code class="constant">1</code>)</a>
<a href="null_p.html#tp_core_modi151" target="origFile"><code class="comment">!#ifdef DO_MONO_EDGE</code></a>
<a href="null_p.html#tp_core_modi151" target="origFile"><code class="comment">!            xt = min( xt, max(q(i,npy-2), q(i,npy-1)) )</code></a>
<a href="null_p.html#tp_core_modi151" target="origFile"><code class="comment">!            xt = max( xt, min(q(i,npy-2), q(i,npy-1)) )</code></a>
<a name="fyppm_tlmi151"></a><a href="null_p.html#tp_core_modi151" target="origFile"><code class="comment">!#endif</code></a>
<a name="fyppm_tlmi152"></a>          <a href="null_p.html#tp_core_modi151" target="origFile">br_tl(i, npy-<code class="constant">2</code>) = xt_tl - q_tl(i, npy-<code class="constant">2</code>)</a>
<a name="fyppm_tlmi152"></a>          <a href="null_p.html#tp_core_modi151" target="origFile">br(i, npy-<code class="constant">2</code>) = xt - q(i, npy-<code class="constant">2</code>)</a>
          <a href="null_p.html#tp_core_modi152" target="origFile">bl_tl(i, npy-<code class="constant">1</code>) = xt_tl - q_tl(i, npy-<code class="constant">1</code>)</a>
          <a href="null_p.html#tp_core_modi152" target="origFile">bl(i, npy-<code class="constant">1</code>) = xt - q(i, npy-<code class="constant">1</code>)</a>
        <a href="null_p.html#tp_core_modi153" target="origFile"><code class="keyword">END DO</code></a>
        <a href="null_p.html#tp_core_modi141" target="origFile">flux_tl = <code class="constant">0.0_8</code></a>
      <a href="null_p.html#tp_core_modi141" target="origFile"><code class="keyword">ELSE</code></a>
<a name="fyppm_tlmi158"></a>        <a href="null_p.html#tp_core_modi141" target="origFile">flux_tl = <code class="constant">0.0_8</code></a>
<a name="fyppm_tlmi157"></a>      <a href="null_p.html#tp_core_modi141" target="origFile"><code class="keyword">END IF</code></a>
<a name="fyppm_tlmi154"></a>      <a href="null_p.html#tp_core_modi158" target="origFile"><code class="keyword">DO </code>j=jfirst,jlast+<code class="constant">1</code></a>
<a name="fyppm_tlmi155"></a>        <a href="null_p.html#tp_core_modi157" target="origFile"><code class="keyword">DO </code>i=ifirst,ilast</a>
          <a href="null_p.html#tp_core_modi154" target="origFile"><code class="keyword">IF</code> (c(i, j) .GT. <code class="constant">0.</code>) <code class="keyword">THEN</code></a>
<a name="fyppm_tlmi155"></a>            <a href="null_p.html#tp_core_modi155" target="origFile">flux_tl(i, j) = q_tl(i, j-<code class="constant">1</code>) + (<code class="constant">1.</code>-c(i, j))*(br_tl(i, j-<code class="constant">1</code>)-c<code class="label">&</code></a>
<a href="null_p.html#tp_core_modi155" target="origFile"><code class="label">&             </code>(i, j)*(bl_tl(i, j-<code class="constant">1</code>)+br_tl(i, j-<code class="constant">1</code>)))</a>
            <a href="null_p.html#tp_core_modi155" target="origFile">flux(i, j) = q(i, j-<code class="constant">1</code>) + (<code class="constant">1.</code>-c(i, j))*(br(i, j-<code class="constant">1</code>)-c(i, j)*(<code class="label">&</code></a>
<a name="fyppm_tlmi156"></a><a href="null_p.html#tp_core_modi155" target="origFile"><code class="label">&             </code>bl(i, j-<code class="constant">1</code>)+br(i, j-<code class="constant">1</code>)))</a>
          <a href="null_p.html#tp_core_modi154" target="origFile"><code class="keyword">ELSE</code></a>
<a name="fyppm_tlmi156"></a>            <a href="null_p.html#tp_core_modi156" target="origFile">flux_tl(i, j) = q_tl(i, j) + (<code class="constant">1.</code>+c(i, j))*(bl_tl(i, j)+c(i, <code class="label">&</code></a>
<a href="null_p.html#tp_core_modi156" target="origFile"><code class="label">&             </code>j)*(bl_tl(i, j)+br_tl(i, j)))</a>
            <a href="null_p.html#tp_core_modi156" target="origFile">flux(i, j) = q(i, j) + (<code class="constant">1.</code>+c(i, j))*(bl(i, j)+c(i, j)*(bl(i<code class="label">&</code></a>
<a href="null_p.html#tp_core_modi156" target="origFile"><code class="label">&             </code>, j)+br(i, j)))</a>
          <a href="null_p.html#tp_core_modi154" target="origFile"><code class="keyword">END IF</code></a>
        <a href="null_p.html#tp_core_modi157" target="origFile"><code class="keyword">END DO</code></a>
      <a href="null_p.html#tp_core_modi158" target="origFile"><code class="keyword">END DO</code></a>
    <a href="null_p.html#tp_core_modi117" target="origFile"><code class="keyword">ELSE</code></a>
      <a href="null_p.html#tp_core_modi117" target="origFile">flux_tl = <code class="constant">0.0_8</code></a>
<a name="fyppm"></a>    <a href="null_p.html#tp_core_modi117" target="origFile"><code class="keyword">END IF</code></a>
  <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END SUBROUTINE </code><code class="funcname">FYPPM_TLM</code></a>
  <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">SUBROUTINE </code><code class="funcname">FYPPM</code>(<code class="vardecl">c</code>, <code class="vardecl">q</code>, <code class="vardecl">flux</code>, <code class="vardecl">jord</code>, <code class="vardecl">ifirst</code>, <code class="vardecl">ilast</code>, <code class="vardecl">jfirst</code>, <code class="vardecl">jlast</code>, <code class="vardecl">npx</code>, <code class="label">&</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="label">&   </code><code class="vardecl">npy</code>)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IMPLICIT NONE</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!  X-Dir strip</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">ifirst</code>, <code class="vardecl">ilast</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!  Y-Dir strip</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">jfirst</code>, <code class="vardecl">jlast</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">jord</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">npx</code>, <code class="vardecl">npy</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">q</code>(<code class="vardecl">ifirst</code>:<code class="vardecl">ilast</code>, <code class="vardecl">jfirst</code>-<code class="vardecl">ng</code>:<code class="vardecl">jlast</code>+<code class="vardecl">ng</code>)</a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! Courant number</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">c</code>(<code class="vardecl">isd</code>:<code class="vardecl">ied</code>, <code class="vardecl">js</code>:<code class="vardecl">je</code>+<code class="constant">1</code>)</a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!  Flux</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">INTENT(OUT) </code>:: <code class="vardecl">flux</code>(<code class="vardecl">ifirst</code>:<code class="vardecl">ilast</code>, <code class="vardecl">jfirst</code>:<code class="vardecl">jlast</code>+<code class="constant">1</code>)</a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! real(FVPRC)   , INTENT(OUT)::   dm(ifirst:ilast,jfirst-2:jlast+2)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! Local:</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">LOGICAL </code>:: <code class="vardecl">extm</code>(<code class="vardecl">ifirst</code>:<code class="vardecl">ilast</code>, <code class="vardecl">jfirst</code>-<code class="constant">2</code>:<code class="vardecl">jlast</code>+<code class="constant">2</code>)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">al</code>(<code class="vardecl">ifirst</code>:<code class="vardecl">ilast</code>, <code class="vardecl">jfirst</code>-<code class="constant">1</code>:<code class="vardecl">jlast</code>+<code class="constant">2</code>)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">bl</code>(<code class="vardecl">ifirst</code>:<code class="vardecl">ilast</code>, <code class="vardecl">jfirst</code>-<code class="constant">1</code>:<code class="vardecl">jlast</code>+<code class="constant">1</code>)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">br</code>(<code class="vardecl">ifirst</code>:<code class="vardecl">ilast</code>, <code class="vardecl">jfirst</code>-<code class="constant">1</code>:<code class="vardecl">jlast</code>+<code class="constant">1</code>)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">dq</code>(<code class="vardecl">ifirst</code>:<code class="vardecl">ilast</code>, <code class="vardecl">jfirst</code>-<code class="constant">3</code>:<code class="vardecl">jlast</code>+<code class="constant">2</code>)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">dl</code>, <code class="vardecl">dr</code>, <code class="vardecl">pmp</code>, <code class="vardecl">lac</code>, <code class="vardecl">ct</code>, <code class="vardecl">qe</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">pmp_1</code>, <code class="vardecl">lac_1</code>, <code class="vardecl">pmp_2</code>, <code class="vardecl">lac_2</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">xt</code>, <code class="vardecl">x0</code>, <code class="vardecl">x1</code>, <code class="vardecl">x0l</code>, <code class="vardecl">x0r</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">INTEGER </code>:: <code class="vardecl">i</code>, <code class="vardecl">j</code>, <code class="vardecl">js3</code>, <code class="vardecl">je3</code>, <code class="vardecl">jt</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">INTRINSIC </code><code class="funcname">MAX</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">INTRINSIC </code><code class="funcname">MIN</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">INTEGER </code>:: <code class="vardecl">max1</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">INTEGER </code>:: <code class="vardecl">min1</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IF</code> (jord .EQ. <code class="constant">666</code>) <code class="keyword">THEN</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IF</code> (<code class="constant">3 </code>.LT. js - <code class="constant">1</code>) <code class="keyword">THEN</code></a>
        <a href="null_p.html#tp_core_mod" target="origFile">max1 = js - <code class="constant">1</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">ELSE</code></a>
        <a href="null_p.html#tp_core_mod" target="origFile">max1 = <code class="constant">3</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END IF</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IF</code> (npy - <code class="constant">3 </code>.GT. je + <code class="constant">1</code>) <code class="keyword">THEN</code></a>
        <a href="null_p.html#tp_core_mod" target="origFile">min1 = je + <code class="constant">1</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">ELSE</code></a>
        <a href="null_p.html#tp_core_mod" target="origFile">min1 = npy - <code class="constant">3</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END IF</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>j=max1,min1</a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>i=ifirst,ilast</a>
          <a href="null_p.html#tp_core_mod" target="origFile">bl(i, j) = b5*q(i, j-<code class="constant">2</code>) + b4*q(i, j-<code class="constant">1</code>) + b3*q(i, j) + b2*q(i, <code class="label">&</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="label">&           </code>j+<code class="constant">1</code>) + b1*q(i, j+<code class="constant">2</code>)</a>
          <a href="null_p.html#tp_core_mod" target="origFile">br(i, j) = b1*q(i, j-<code class="constant">2</code>) + b2*q(i, j-<code class="constant">1</code>) + b3*q(i, j) + b4*q(i, <code class="label">&</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="label">&           </code>j+<code class="constant">1</code>) + b5*q(i, j+<code class="constant">2</code>)</a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IF</code> (js .EQ. <code class="constant">1</code>) <code class="keyword">THEN</code></a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>i=ifirst,ilast</a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!           br(i,2) = al(i,3) - q(i,2)</code></a>
          <a href="null_p.html#tp_core_mod" target="origFile">br(i, <code class="constant">2</code>) = p1*(q(i, <code class="constant">2</code>)+q(i, <code class="constant">3</code>)) + p2*(q(i, <code class="constant">1</code>)+q(i, <code class="constant">4</code>)) - q(i, <code class="label">&</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="label">&           </code><code class="constant">2</code>)</a>
          <a href="null_p.html#tp_core_mod" target="origFile">x0l = <code class="constant">0.5</code>*((<code class="constant">2.</code>*dya(i, <code class="constant">0</code>)+dya(i, -<code class="constant">1</code>))*q(i, <code class="constant">0</code>)-dya(i, <code class="constant">0</code>)*q(i, -<code class="constant">1</code><code class="label">&</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="label">&           </code>))/(dya(i, <code class="constant">0</code>)+dya(i, -<code class="constant">1</code>))</a>
          <a href="null_p.html#tp_core_mod" target="origFile">x0r = <code class="constant">0.5</code>*((<code class="constant">2.</code>*dya(i, <code class="constant">1</code>)+dya(i, <code class="constant">2</code>))*q(i, <code class="constant">1</code>)-dya(i, <code class="constant">1</code>)*q(i, <code class="constant">2</code>))<code class="label">&</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="label">&           </code>/(dya(i, <code class="constant">1</code>)+dya(i, <code class="constant">2</code>))</a>
          <a href="null_p.html#tp_core_mod" target="origFile">xt = x0l + x0r</a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!            xt = ( x0L*sin_sg(i,0,4) + x0R*sin_sg(i,1,2) ) </code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!            xt = 2.*xt / ( sin_sg(i,0,4) + sin_sg(i,1,2) )</code></a>
          <a href="null_p.html#tp_core_mod" target="origFile">bl(i, <code class="constant">1</code>) = xt - q(i, <code class="constant">1</code>)</a>
          <a href="null_p.html#tp_core_mod" target="origFile">br(i, <code class="constant">0</code>) = xt - q(i, <code class="constant">0</code>)</a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!           xt = s14*0.25*(q(i,0)-q(i,-2)) - s11*(q(i,0)-q(i,-1)) + q(i,0)</code></a>
          <a href="null_p.html#tp_core_mod" target="origFile">xt = c1*q(i, -<code class="constant">2</code>) + c2*q(i, -<code class="constant">1</code>) + c3*q(i, <code class="constant">0</code>)</a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!#ifdef DO_MONO_EDGE</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!            xt = min( xt, max(q(i,-1), q(i,0)) )</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!            xt = max( xt, min(q(i,-1), q(i,0)) )</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!#endif</code></a>
          <a href="null_p.html#tp_core_mod" target="origFile">bl(i, <code class="constant">0</code>) = xt - q(i, <code class="constant">0</code>)</a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!           xt = s15*q(i,1) + s11*q(i,2) - s14*0.25*(q(i,3)-q(i,1))</code></a>
          <a href="null_p.html#tp_core_mod" target="origFile">xt = c3*q(i, <code class="constant">1</code>) + c2*q(i, <code class="constant">2</code>) + c1*q(i, <code class="constant">3</code>)</a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!#ifdef DO_MONO_EDGE</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!            xt = min( xt, max(q(i,1), q(i,2)) )</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!            xt = max( xt, min(q(i,1), q(i,2)) )</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!#endif</code></a>
          <a href="null_p.html#tp_core_mod" target="origFile">br(i, <code class="constant">1</code>) = xt - q(i, <code class="constant">1</code>)</a>
          <a href="null_p.html#tp_core_mod" target="origFile">bl(i, <code class="constant">2</code>) = xt - q(i, <code class="constant">2</code>)</a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END IF</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IF</code> (je + <code class="constant">1 </code>.EQ. npy) <code class="keyword">THEN</code></a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>i=ifirst,ilast</a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!           bl(i,npy-2) = al(i,npy-2) - q(i,npy-2)</code></a>
          <a href="null_p.html#tp_core_mod" target="origFile">bl(i, npy-<code class="constant">2</code>) = p1*(q(i, npy-<code class="constant">3</code>)+q(i, npy-<code class="constant">2</code>)) + p2*(q(i, npy-<code class="constant">4</code>)+<code class="label">&</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="label">&           </code>q(i, npy-<code class="constant">1</code>)) - q(i, npy-<code class="constant">2</code>)</a>
          <a href="null_p.html#tp_core_mod" target="origFile">x0l = <code class="constant">0.5</code>*((<code class="constant">2.</code>*dya(i, npy-<code class="constant">1</code>)+dya(i, npy-<code class="constant">2</code>))*q(i, npy-<code class="constant">1</code>)-dya(i<code class="label">&</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="label">&           </code>, npy-<code class="constant">1</code>)*q(i, npy-<code class="constant">2</code>))/(dya(i, npy-<code class="constant">1</code>)+dya(i, npy-<code class="constant">2</code>))</a>
          <a href="null_p.html#tp_core_mod" target="origFile">x0r = <code class="constant">0.5</code>*((<code class="constant">2.</code>*dya(i, npy)+dya(i, npy+<code class="constant">1</code>))*q(i, npy)-dya(i, npy<code class="label">&</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="label">&           </code>)*q(i, npy+<code class="constant">1</code>))/(dya(i, npy)+dya(i, npy+<code class="constant">1</code>))</a>
          <a href="null_p.html#tp_core_mod" target="origFile">xt = x0l + x0r</a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!            xt = x0L*sin_sg(i,npy-1,4) + x0R*sin_sg(i,npy,2)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!            xt = 2.*xt /( sin_sg(i,npy-1,4) + sin_sg(i,npy,2) )</code></a>
          <a href="null_p.html#tp_core_mod" target="origFile">br(i, npy-<code class="constant">1</code>) = xt - q(i, npy-<code class="constant">1</code>)</a>
          <a href="null_p.html#tp_core_mod" target="origFile">bl(i, npy) = xt - q(i, npy)</a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!           xt = s11*(q(i,npy+1)-q(i,npy)) - s14*0.25*(q(i,npy+2)-q(i,npy)) + q(i,npy)</code></a>
          <a href="null_p.html#tp_core_mod" target="origFile">xt = c3*q(i, npy) + c2*q(i, npy+<code class="constant">1</code>) + c1*q(i, npy+<code class="constant">2</code>)</a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!#ifdef DO_MONO_EDGE</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!            xt = min( xt, max(q(i,npy), q(i,npy+1)) )</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!            xt = max( xt, min(q(i,npy), q(i,npy+1)) )</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!#endif</code></a>
          <a href="null_p.html#tp_core_mod" target="origFile">br(i, npy) = xt - q(i, npy)</a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!           xt = s15*q(i,npy-1) + s11*q(i,npy-2) + s14*0.25*(q(i,npy-1)-q(i,npy-3))</code></a>
          <a href="null_p.html#tp_core_mod" target="origFile">xt = c1*q(i, npy-<code class="constant">3</code>) + c2*q(i, npy-<code class="constant">2</code>) + c3*q(i, npy-<code class="constant">1</code>)</a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!#ifdef DO_MONO_EDGE</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!            xt = min( xt, max(q(i,npy-2), q(i,npy-1)) )</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!            xt = max( xt, min(q(i,npy-2), q(i,npy-1)) )</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!#endif</code></a>
          <a href="null_p.html#tp_core_mod" target="origFile">br(i, npy-<code class="constant">2</code>) = xt - q(i, npy-<code class="constant">2</code>)</a>
          <a href="null_p.html#tp_core_mod" target="origFile">bl(i, npy-<code class="constant">1</code>) = xt - q(i, npy-<code class="constant">1</code>)</a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END IF</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>j=jfirst,jlast+<code class="constant">1</code></a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>i=ifirst,ilast</a>
          <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IF</code> (c(i, j) .GT. <code class="constant">0.</code>) <code class="keyword">THEN</code></a>
            <a href="null_p.html#tp_core_mod" target="origFile">flux(i, j) = q(i, j-<code class="constant">1</code>) + (<code class="constant">1.</code>-c(i, j))*(br(i, j-<code class="constant">1</code>)-c(i, j)*(<code class="label">&</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="label">&             </code>bl(i, j-<code class="constant">1</code>)+br(i, j-<code class="constant">1</code>)))</a>
          <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">ELSE</code></a>
            <a href="null_p.html#tp_core_mod" target="origFile">flux(i, j) = q(i, j) + (<code class="constant">1.</code>+c(i, j))*(bl(i, j)+c(i, j)*(bl(i<code class="label">&</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="label">&             </code>, j)+br(i, j)))</a>
          <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END IF</code></a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
<a name="mp_ghost_ew"></a>    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END IF</code></a>
  <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END SUBROUTINE </code><code class="funcname">FYPPM</code></a>
  <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">SUBROUTINE </code><code class="funcname">MP_GHOST_EW</code>(<code class="vardecl">im</code>, <code class="vardecl">jm</code>, <code class="vardecl">km</code>, <code class="vardecl">nq</code>, <code class="vardecl">ifirst</code>, <code class="vardecl">ilast</code>, <code class="vardecl">jfirst</code>, <code class="vardecl">jlast</code>, <code class="label">&</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="label">&   </code><code class="vardecl">kfirst</code>, <code class="vardecl">klast</code>, <code class="vardecl">ng_w</code>, <code class="vardecl">ng_e</code>, <code class="vardecl">ng_s</code>, <code class="vardecl">ng_n</code>, <code class="vardecl">q_ghst</code>, <code class="vardecl">q</code>)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IMPLICIT NONE</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! !INPUT PARAMETERS:</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">im</code>, <code class="vardecl">jm</code>, <code class="vardecl">km</code>, <code class="vardecl">nq</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">ifirst</code>, <code class="vardecl">ilast</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">jfirst</code>, <code class="vardecl">jlast</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">kfirst</code>, <code class="vardecl">klast</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! eastern  zones to ghost</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">ng_e</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! western  zones to ghost</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">ng_w</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! southern zones to ghost</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">ng_s</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! northern zones to ghost</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">ng_n</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">INTENT(INOUT) </code>:: <code class="vardecl">q_ghst</code>(<code class="vardecl">ifirst</code>-<code class="vardecl">ng_w</code>:<code class="vardecl">ilast</code>+<code class="vardecl">ng_e</code>, <code class="vardecl">jfirst</code>-<code class="label">&</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="label">&   </code><code class="vardecl">ng_s</code>:<code class="vardecl">jlast</code>+<code class="vardecl">ng_n</code>, <code class="vardecl">kfirst</code>:<code class="vardecl">klast</code>, <code class="vardecl">nq</code>)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">OPTIONAL</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">q</code>(<code class="vardecl">ifirst</code>:<code class="vardecl">ilast</code>, <code class="vardecl">jfirst</code>:<code class="vardecl">jlast</code>, <code class="label">&</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="label">&   </code><code class="vardecl">kfirst</code>:<code class="vardecl">klast</code>, <code class="vardecl">nq</code>)</a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! !DESCRIPTION:</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!     Ghost 4d east/west </code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! !REVISION HISTORY:</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!    2005.08.22   Putman</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!EOP</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!------------------------------------------------------------------------------</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!BOC</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">INTEGER </code>:: <code class="vardecl">i</code>, <code class="vardecl">j</code>, <code class="vardecl">k</code>, <code class="vardecl">n</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">INTRINSIC </code><code class="funcname">PRESENT</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IF</code> (<code class="funcname">PRESENT</code>(q)) q_ghst(ifirst:ilast, jfirst:jlast, kfirst:klast, <code class="constant">1</code>:<code class="label">&</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="label">&     </code>nq) = q(ifirst:ilast, jfirst:jlast, kfirst:klast, <code class="constant">1</code>:nq)</a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!      Assume Periodicity in X-dir and not overlapping</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>n=<code class="constant">1</code>,nq</a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>k=kfirst,klast</a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>j=jfirst-ng_s,jlast+ng_n</a>
          <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>i=<code class="constant">1</code>,ng_w</a>
            <a href="null_p.html#tp_core_mod" target="origFile">q_ghst(ifirst-i, j, k, n) = q_ghst(ilast-i+<code class="constant">1</code>, j, k, n)</a>
          <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
          <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>i=<code class="constant">1</code>,ng_e</a>
            <a href="null_p.html#tp_core_mod" target="origFile">q_ghst(ilast+i, j, k, n) = q_ghst(ifirst+i-<code class="constant">1</code>, j, k, n)</a>
          <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
<a name="pert_ppm"></a>    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
  <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END SUBROUTINE </code><code class="funcname">MP_GHOST_EW</code></a>
  <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">SUBROUTINE </code><code class="funcname">PERT_PPM</code>(<code class="vardecl">im</code>, <code class="vardecl">a0</code>, <code class="vardecl">al</code>, <code class="vardecl">ar</code>, <code class="vardecl">iv</code>)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IMPLICIT NONE</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">im</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">iv</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">a0</code>(<code class="vardecl">im</code>)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">INTENT(INOUT) </code>:: <code class="vardecl">al</code>(<code class="vardecl">im</code>), <code class="vardecl">ar</code>(<code class="vardecl">im</code>)</a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! Local:</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">a4</code>, <code class="vardecl">da1</code>, <code class="vardecl">da2</code>, <code class="vardecl">a6da</code>, <code class="vardecl">fmin</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">INTEGER </code>:: <code class="vardecl">i</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">PARAMETER </code>:: <code class="vardecl">r12</code>=<code class="constant">1.</code>/<code class="constant">12.</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">INTRINSIC </code><code class="funcname">ABS</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL*8 </code>:: <code class="vardecl">abs0</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!-----------------------------------</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! Optimized PPM in perturbation form:</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!-----------------------------------</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IF</code> (iv .EQ. <code class="constant">0</code>) <code class="keyword">THEN</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! Positive definite constraint</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>i=<code class="constant">1</code>,im</a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IF</code> (a0(i) .LE. <code class="constant">0.</code>) <code class="keyword">THEN</code></a>
          <a href="null_p.html#tp_core_mod" target="origFile">al(i) = <code class="constant">0.</code></a>
          <a href="null_p.html#tp_core_mod" target="origFile">ar(i) = <code class="constant">0.</code></a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">ELSE</code></a>
          <a href="null_p.html#tp_core_mod" target="origFile">a4 = -(<code class="constant">3.</code>*(ar(i)+al(i)))</a>
          <a href="null_p.html#tp_core_mod" target="origFile">da1 = ar(i) - al(i)</a>
          <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IF</code> (da1 .GE. <code class="constant">0.</code>) <code class="keyword">THEN</code></a>
            <a href="null_p.html#tp_core_mod" target="origFile">abs0 = da1</a>
          <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">ELSE</code></a>
            <a href="null_p.html#tp_core_mod" target="origFile">abs0 = -da1</a>
          <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END IF</code></a>
          <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IF</code> (abs0 .LT. -a4) <code class="keyword">THEN</code></a>
            <a href="null_p.html#tp_core_mod" target="origFile">fmin = a0(i) + <code class="constant">0.25</code>/a4*da1**<code class="constant">2 </code>+ a4*r12</a>
            <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IF</code> (fmin .LT. <code class="constant">0.</code>) <code class="keyword">THEN</code></a>
              <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IF</code> (ar(i) .GT. <code class="constant">0. </code>.AND. al(i) .GT. <code class="constant">0.</code>) <code class="keyword">THEN</code></a>
                <a href="null_p.html#tp_core_mod" target="origFile">ar(i) = <code class="constant">0.</code></a>
                <a href="null_p.html#tp_core_mod" target="origFile">al(i) = <code class="constant">0.</code></a>
              <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">ELSE IF</code> (da1 .GT. <code class="constant">0.</code>) <code class="keyword">THEN</code></a>
                <a href="null_p.html#tp_core_mod" target="origFile">ar(i) = -(<code class="constant">2.</code>*al(i))</a>
              <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">ELSE</code></a>
                <a href="null_p.html#tp_core_mod" target="origFile">al(i) = -(<code class="constant">2.</code>*ar(i))</a>
              <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END IF</code></a>
            <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END IF</code></a>
          <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END IF</code></a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END IF</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">ELSE</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! Standard PPM constraint</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>i=<code class="constant">1</code>,im</a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IF</code> (al(i)*ar(i) .LT. <code class="constant">0.</code>) <code class="keyword">THEN</code></a>
          <a href="null_p.html#tp_core_mod" target="origFile">da1 = al(i) - ar(i)</a>
          <a href="null_p.html#tp_core_mod" target="origFile">da2 = da1**<code class="constant">2</code></a>
          <a href="null_p.html#tp_core_mod" target="origFile">a6da = <code class="constant">3.</code>*(al(i)+ar(i))*da1</a>
          <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IF</code> (a6da .LT. -da2) <code class="keyword">THEN</code></a>
            <a href="null_p.html#tp_core_mod" target="origFile">ar(i) = -(<code class="constant">2.</code>*al(i))</a>
          <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">ELSE IF</code> (a6da .GT. da2) <code class="keyword">THEN</code></a>
            <a href="null_p.html#tp_core_mod" target="origFile">al(i) = -(<code class="constant">2.</code>*ar(i))</a>
          <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END IF</code></a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">ELSE</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! effect of dm=0 included here</code></a>
          <a href="null_p.html#tp_core_mod" target="origFile">al(i) = <code class="constant">0.</code></a>
          <a href="null_p.html#tp_core_mod" target="origFile">ar(i) = <code class="constant">0.</code></a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END IF</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
<a name="deln_flux_tlm"></a>    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END IF</code></a>
  <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END SUBROUTINE </code><code class="funcname">PERT_PPM</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!  Differentiation of deln_flux in forward (tangent) mode:</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!   variations   of useful results: fx fy</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!   with respect to varying inputs: q fx fy</code></a>
  <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">SUBROUTINE </code><code class="funcname">DELN_FLUX_TLM</code>(<code class="vardecl">nord</code>, <code class="vardecl">npx</code>, <code class="vardecl">npy</code>, <code class="vardecl">damp</code>, <code class="vardecl">q</code>, <code class="vardecl">q_tl</code>, <code class="vardecl">fx</code>, <code class="vardecl">fx_tl</code>, <code class="vardecl">fy</code><code class="label">&</code></a>
<a name="deln_flux_tlmi37"></a><a href="null_p.html#tp_core_mod" target="origFile"><code class="label">&   </code>, <code class="vardecl">fy_tl</code>, <code class="vardecl">mass</code>)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IMPLICIT NONE</code></a>
<a href="null_p.html#tp_core_modi37" target="origFile"><code class="comment">! Del-n damping for the cell-mean values (A grid)</code></a>
<a href="null_p.html#tp_core_modi37" target="origFile"><code class="comment">!------------------</code></a>
<a href="null_p.html#tp_core_modi37" target="origFile"><code class="comment">! nord = 0:   del-2</code></a>
<a href="null_p.html#tp_core_modi37" target="origFile"><code class="comment">! nord = 1:   del-4</code></a>
<a href="null_p.html#tp_core_modi37" target="origFile"><code class="comment">! nord = 2:   del-6</code></a>
<a href="null_p.html#tp_core_modi37" target="origFile"><code class="comment">! nord = 3:   del-8 --&gt; requires more ghosting than current</code></a>
<a href="null_p.html#tp_core_modi37" target="origFile"><code class="comment">!------------------</code></a>
<a name="deln_flux_tlmi38"></a><a href="null_p.html#tp_core_modi37" target="origFile"><code class="comment">! del-n</code></a>
<a name="deln_flux_tlmi39"></a>    <a href="null_p.html#tp_core_modi37" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">nord</code></a>
<a name="deln_flux_tlmi40"></a>    <a href="null_p.html#tp_core_modi38" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">npx</code>, <code class="vardecl">npy</code></a>
    <a href="null_p.html#tp_core_modi39" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">damp</code></a>
<a href="null_p.html#tp_core_modi40" target="origFile"><code class="comment">! q ghosted on input</code></a>
<a name="deln_flux_tlmi41"></a>    <a href="null_p.html#tp_core_modi40" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">q</code>(<code class="vardecl">is</code>-<code class="vardecl">ng</code>:<code class="vardecl">ie</code>+<code class="vardecl">ng</code>, <code class="vardecl">js</code>-<code class="vardecl">ng</code>:<code class="vardecl">je</code>+<code class="vardecl">ng</code>)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">q_tl</code>(<code class="vardecl">is</code>-<code class="vardecl">ng</code>:<code class="vardecl">ie</code>+<code class="vardecl">ng</code>, <code class="vardecl">js</code>-<code class="vardecl">ng</code>:<code class="vardecl">je</code>+<code class="vardecl">ng</code>)</a>
<a name="deln_flux_tlmi42"></a><a href="null_p.html#tp_core_modi41" target="origFile"><code class="comment">! q ghosted on input</code></a>
    <a href="null_p.html#tp_core_modi41" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">OPTIONAL</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">mass</code>(<code class="vardecl">isd</code>:<code class="vardecl">ied</code>, <code class="vardecl">jsd</code>:<code class="vardecl">jed</code>)</a>
<a href="null_p.html#tp_core_modi42" target="origFile"><code class="comment">! diffusive fluxes:</code></a>
    <a href="null_p.html#tp_core_modi42" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">INTENT(INOUT) </code>:: <code class="vardecl">fx</code>(<code class="vardecl">is</code>:<code class="vardecl">ie</code>+<code class="constant">1</code>, <code class="vardecl">js</code>:<code class="vardecl">je</code>), <code class="vardecl">fy</code>(<code class="vardecl">is</code>:<code class="vardecl">ie</code>, <code class="vardecl">js</code>:<code class="vardecl">je</code>+<code class="constant">1</code>)</a>
<a name="deln_flux_tlmi43"></a>    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">INTENT(INOUT) </code>:: <code class="vardecl">fx_tl</code>(<code class="vardecl">is</code>:<code class="vardecl">ie</code>+<code class="constant">1</code>, <code class="vardecl">js</code>:<code class="vardecl">je</code>), <code class="vardecl">fy_tl</code>(<code class="vardecl">is</code>:<code class="vardecl">ie</code>, <code class="vardecl">js</code><code class="label">&</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="label">&   </code>:<code class="vardecl">je</code>+<code class="constant">1</code>)</a>
<a href="null_p.html#tp_core_modi43" target="origFile"><code class="comment">! local:</code></a>
    <a href="null_p.html#tp_core_modi43" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">fx2</code>(<code class="vardecl">isd</code>:<code class="vardecl">ied</code>+<code class="constant">1</code>, <code class="vardecl">jsd</code>:<code class="vardecl">jed</code>), <code class="vardecl">fy2</code>(<code class="vardecl">isd</code>:<code class="vardecl">ied</code>, <code class="vardecl">jsd</code>:<code class="vardecl">jed</code>+<code class="constant">1</code>)</a>
<a name="deln_flux_tlmi44"></a>    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">fx2_tl</code>(<code class="vardecl">isd</code>:<code class="vardecl">ied</code>+<code class="constant">1</code>, <code class="vardecl">jsd</code>:<code class="vardecl">jed</code>), <code class="vardecl">fy2_tl</code>(<code class="vardecl">isd</code>:<code class="vardecl">ied</code>, <code class="vardecl">jsd</code>:<code class="vardecl">jed</code>+<code class="constant">1</code><code class="label">&</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="label">&   </code>)</a>
<a name="deln_flux_tlmi45"></a>    <a href="null_p.html#tp_core_modi44" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">d2</code>(<code class="vardecl">isd</code>:<code class="vardecl">ied</code>, <code class="vardecl">jsd</code>:<code class="vardecl">jed</code>)</a>
<a name="deln_flux_tlmi46"></a>    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">d2_tl</code>(<code class="vardecl">isd</code>:<code class="vardecl">ied</code>, <code class="vardecl">jsd</code>:<code class="vardecl">jed</code>)</a>
<a name="deln_flux_tlmi47"></a>    <a href="null_p.html#tp_core_modi45" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">damp2</code></a>
<a name="deln_flux_tlmi48"></a>    <a href="null_p.html#tp_core_modi46" target="origFile"><code class="typename">INTEGER </code>:: <code class="vardecl">i</code>, <code class="vardecl">j</code>, <code class="vardecl">n</code>, <code class="vardecl">nt</code>, <code class="vardecl">i1</code>, <code class="vardecl">i2</code>, <code class="vardecl">j1</code>, <code class="vardecl">j2</code></a>
<a name="deln_flux_tlmi49"></a>    <a href="null_p.html#tp_core_modi47" target="origFile"><code class="keyword">INTRINSIC </code><code class="funcname">PRESENT</code></a>
<a name="deln_flux_tlmi50"></a>    <a href="null_p.html#tp_core_modi48" target="origFile">i1 = is - <code class="constant">1 </code>- nord</a>
<a name="deln_flux_tlmi51"></a>    <a href="null_p.html#tp_core_modi49" target="origFile">i2 = ie + <code class="constant">1 </code>+ nord</a>
<a name="deln_flux_tlmi52"></a>    <a href="null_p.html#tp_core_modi50" target="origFile">j1 = js - <code class="constant">1 </code>- nord</a>
    <a href="null_p.html#tp_core_modi51" target="origFile">j2 = je + <code class="constant">1 </code>+ nord</a>
<a name="deln_flux_tlmi55"></a>    <a href="null_p.html#tp_core_modi52" target="origFile"><code class="keyword">IF</code> (.NOT.<code class="funcname">PRESENT</code>(mass)) <code class="keyword">THEN</code></a>
<a name="deln_flux_tlmi54"></a>      <a href="null_p.html#tp_core_modi52" target="origFile">d2_tl = <code class="constant">0.0_8</code></a>
<a name="deln_flux_tlmi53"></a>      <a href="null_p.html#tp_core_modi55" target="origFile"><code class="keyword">DO </code>j=j1,j2</a>
<a name="deln_flux_tlmi53"></a>        <a href="null_p.html#tp_core_modi54" target="origFile"><code class="keyword">DO </code>i=i1,i2</a>
          <a href="null_p.html#tp_core_modi53" target="origFile">d2_tl(i, j) = damp*q_tl(i, j)</a>
          <a href="null_p.html#tp_core_modi53" target="origFile">d2(i, j) = damp*q(i, j)</a>
        <a href="null_p.html#tp_core_modi54" target="origFile"><code class="keyword">END DO</code></a>
      <a href="null_p.html#tp_core_modi55" target="origFile"><code class="keyword">END DO</code></a>
<a name="deln_flux_tlmi58"></a>    <a href="null_p.html#tp_core_modi52" target="origFile"><code class="keyword">ELSE</code></a>
<a name="deln_flux_tlmi57"></a>      <a href="null_p.html#tp_core_modi52" target="origFile">d2_tl = <code class="constant">0.0_8</code></a>
<a name="deln_flux_tlmi56"></a>      <a href="null_p.html#tp_core_modi58" target="origFile"><code class="keyword">DO </code>j=j1,j2</a>
<a name="deln_flux_tlmi56"></a>        <a href="null_p.html#tp_core_modi57" target="origFile"><code class="keyword">DO </code>i=i1,i2</a>
          <a href="null_p.html#tp_core_modi56" target="origFile">d2_tl(i, j) = q_tl(i, j)</a>
          <a href="null_p.html#tp_core_modi56" target="origFile">d2(i, j) = q(i, j)</a>
        <a href="null_p.html#tp_core_modi57" target="origFile"><code class="keyword">END DO</code></a>
<a name="deln_flux_tlmi59"></a>      <a href="null_p.html#tp_core_modi58" target="origFile"><code class="keyword">END DO</code></a>
<a name="deln_flux_tlmi60"></a>    <a href="null_p.html#tp_core_modi52" target="origFile"><code class="keyword">END IF</code></a>
    <a href="null_p.html#tp_core_modi59" target="origFile"><code class="keyword">IF</code> (nord .GT. <code class="constant">0</code>) <code class="keyword">THEN</code></a>
      <a href="null_p.html#tp_core_modi60" target="origFile"><code class="keyword">CALL </code><code class="funcname">COPY_CORNERS_TLM</code>(d2, d2_tl, npx, npy, <code class="constant">1</code>)</a>
      <a href="null_p.html#tp_core_modi59" target="origFile">fx2_tl = <code class="constant">0.0_8</code></a>
    <a href="null_p.html#tp_core_modi59" target="origFile"><code class="keyword">ELSE</code></a>
<a name="deln_flux_tlmi63"></a>      <a href="null_p.html#tp_core_modi59" target="origFile">fx2_tl = <code class="constant">0.0_8</code></a>
<a name="deln_flux_tlmi62"></a>    <a href="null_p.html#tp_core_modi59" target="origFile"><code class="keyword">END IF</code></a>
<a name="deln_flux_tlmi61"></a>    <a href="null_p.html#tp_core_modi63" target="origFile"><code class="keyword">DO </code>j=js-nord,je+nord</a>
      <a href="null_p.html#tp_core_modi62" target="origFile"><code class="keyword">DO </code>i=is-nord,ie+nord+<code class="constant">1</code></a>
<a name="deln_flux_tlmi61"></a>        <a href="null_p.html#tp_core_modi61" target="origFile">fx2_tl(i, j) = <code class="constant">0.5</code>*(sin_sg(i-<code class="constant">1</code>, j, <code class="constant">3</code>)+sin_sg(i, j, <code class="constant">1</code>))*dy(i, j)*<code class="label">&</code></a>
<a href="null_p.html#tp_core_modi61" target="origFile"><code class="label">&         </code>rdxc(i, j)*(d2_tl(i-<code class="constant">1</code>, j)-d2_tl(i, j))</a>
        <a href="null_p.html#tp_core_modi61" target="origFile">fx2(i, j) = <code class="constant">0.5</code>*(sin_sg(i-<code class="constant">1</code>, j, <code class="constant">3</code>)+sin_sg(i, j, <code class="constant">1</code>))*dy(i, j)*(d2<code class="label">&</code></a>
<a href="null_p.html#tp_core_modi61" target="origFile"><code class="label">&         </code>(i-<code class="constant">1</code>, j)-d2(i, j))*rdxc(i, j)</a>
<a name="deln_flux_tlmi64"></a>      <a href="null_p.html#tp_core_modi62" target="origFile"><code class="keyword">END DO</code></a>
<a name="deln_flux_tlmi65"></a>    <a href="null_p.html#tp_core_modi63" target="origFile"><code class="keyword">END DO</code></a>
    <a href="null_p.html#tp_core_modi64" target="origFile"><code class="keyword">IF</code> (nord .GT. <code class="constant">0</code>) <code class="keyword">THEN</code></a>
      <a href="null_p.html#tp_core_modi65" target="origFile"><code class="keyword">CALL </code><code class="funcname">COPY_CORNERS_TLM</code>(d2, d2_tl, npx, npy, <code class="constant">2</code>)</a>
      <a href="null_p.html#tp_core_modi64" target="origFile">fy2_tl = <code class="constant">0.0_8</code></a>
    <a href="null_p.html#tp_core_modi64" target="origFile"><code class="keyword">ELSE</code></a>
<a name="deln_flux_tlmi68"></a>      <a href="null_p.html#tp_core_modi64" target="origFile">fy2_tl = <code class="constant">0.0_8</code></a>
<a name="deln_flux_tlmi67"></a>    <a href="null_p.html#tp_core_modi64" target="origFile"><code class="keyword">END IF</code></a>
<a name="deln_flux_tlmi66"></a>    <a href="null_p.html#tp_core_modi68" target="origFile"><code class="keyword">DO </code>j=js-nord,je+nord+<code class="constant">1</code></a>
      <a href="null_p.html#tp_core_modi67" target="origFile"><code class="keyword">DO </code>i=is-nord,ie+nord</a>
<a name="deln_flux_tlmi66"></a>        <a href="null_p.html#tp_core_modi66" target="origFile">fy2_tl(i, j) = <code class="constant">0.5</code>*(sin_sg(i, j-<code class="constant">1</code>, <code class="constant">4</code>)+sin_sg(i, j, <code class="constant">2</code>))*dx(i, j)*<code class="label">&</code></a>
<a href="null_p.html#tp_core_modi66" target="origFile"><code class="label">&         </code>rdyc(i, j)*(d2_tl(i, j-<code class="constant">1</code>)-d2_tl(i, j))</a>
        <a href="null_p.html#tp_core_modi66" target="origFile">fy2(i, j) = <code class="constant">0.5</code>*(sin_sg(i, j-<code class="constant">1</code>, <code class="constant">4</code>)+sin_sg(i, j, <code class="constant">2</code>))*dx(i, j)*(d2<code class="label">&</code></a>
<a href="null_p.html#tp_core_modi66" target="origFile"><code class="label">&         </code>(i, j-<code class="constant">1</code>)-d2(i, j))*rdyc(i, j)</a>
<a name="deln_flux_tlmi69"></a>      <a href="null_p.html#tp_core_modi67" target="origFile"><code class="keyword">END DO</code></a>
<a name="deln_flux_tlmi82"></a>    <a href="null_p.html#tp_core_modi68" target="origFile"><code class="keyword">END DO</code></a>
    <a href="null_p.html#tp_core_modi69" target="origFile"><code class="keyword">IF</code> (nord .GT. <code class="constant">0</code>) <code class="keyword">THEN</code></a>
<a href="null_p.html#tp_core_modi82" target="origFile"><code class="comment">!----------</code></a>
<a href="null_p.html#tp_core_modi82" target="origFile"><code class="comment">! high-order</code></a>
<a name="deln_flux_tlmi70"></a><a href="null_p.html#tp_core_modi82" target="origFile"><code class="comment">!----------</code></a>
<a name="deln_flux_tlmi73"></a>      <a href="null_p.html#tp_core_modi82" target="origFile"><code class="keyword">DO </code>n=<code class="constant">1</code>,nord</a>
<a name="deln_flux_tlmi72"></a>        <a href="null_p.html#tp_core_modi70" target="origFile">nt = nord - n</a>
<a name="deln_flux_tlmi71"></a>        <a href="null_p.html#tp_core_modi73" target="origFile"><code class="keyword">DO </code>j=js-nt-<code class="constant">1</code>,je+nt+<code class="constant">1</code></a>
          <a href="null_p.html#tp_core_modi72" target="origFile"><code class="keyword">DO </code>i=is-nt-<code class="constant">1</code>,ie+nt+<code class="constant">1</code></a>
<a name="deln_flux_tlmi71"></a>            <a href="null_p.html#tp_core_modi71" target="origFile">d2_tl(i, j) = rarea(i, j)*(fx2_tl(i, j)-fx2_tl(i+<code class="constant">1</code>, j)+<code class="label">&</code></a>
<a href="null_p.html#tp_core_modi71" target="origFile"><code class="label">&             </code>fy2_tl(i, j)-fy2_tl(i, j+<code class="constant">1</code>))</a>
            <a href="null_p.html#tp_core_modi71" target="origFile">d2(i, j) = (fx2(i, j)-fx2(i+<code class="constant">1</code>, j)+fy2(i, j)-fy2(i, j+<code class="constant">1</code>))*<code class="label">&</code></a>
<a href="null_p.html#tp_core_modi71" target="origFile"><code class="label">&             </code>rarea(i, j)</a>
<a name="deln_flux_tlmi74"></a>          <a href="null_p.html#tp_core_modi72" target="origFile"><code class="keyword">END DO</code></a>
<a name="deln_flux_tlmi77"></a>        <a href="null_p.html#tp_core_modi73" target="origFile"><code class="keyword">END DO</code></a>
<a name="deln_flux_tlmi76"></a>        <a href="null_p.html#tp_core_modi74" target="origFile"><code class="keyword">CALL </code><code class="funcname">COPY_CORNERS_TLM</code>(d2, d2_tl, npx, npy, <code class="constant">1</code>)</a>
<a name="deln_flux_tlmi75"></a>        <a href="null_p.html#tp_core_modi77" target="origFile"><code class="keyword">DO </code>j=js-nt,je+nt</a>
          <a href="null_p.html#tp_core_modi76" target="origFile"><code class="keyword">DO </code>i=is-nt,ie+nt+<code class="constant">1</code></a>
<a name="deln_flux_tlmi75"></a>            <a href="null_p.html#tp_core_modi75" target="origFile">fx2_tl(i, j) = <code class="constant">0.5</code>*(sin_sg(i-<code class="constant">1</code>, j, <code class="constant">3</code>)+sin_sg(i, j, <code class="constant">1</code>))*dy(i<code class="label">&</code></a>
<a href="null_p.html#tp_core_modi75" target="origFile"><code class="label">&             </code>, j)*rdxc(i, j)*(d2_tl(i, j)-d2_tl(i-<code class="constant">1</code>, j))</a>
            <a href="null_p.html#tp_core_modi75" target="origFile">fx2(i, j) = <code class="constant">0.5</code>*(sin_sg(i-<code class="constant">1</code>, j, <code class="constant">3</code>)+sin_sg(i, j, <code class="constant">1</code>))*dy(i, j)<code class="label">&</code></a>
<a href="null_p.html#tp_core_modi75" target="origFile"><code class="label">&             </code>*(d2(i, j)-d2(i-<code class="constant">1</code>, j))*rdxc(i, j)</a>
<a name="deln_flux_tlmi78"></a>          <a href="null_p.html#tp_core_modi76" target="origFile"><code class="keyword">END DO</code></a>
<a name="deln_flux_tlmi81"></a>        <a href="null_p.html#tp_core_modi77" target="origFile"><code class="keyword">END DO</code></a>
<a name="deln_flux_tlmi80"></a>        <a href="null_p.html#tp_core_modi78" target="origFile"><code class="keyword">CALL </code><code class="funcname">COPY_CORNERS_TLM</code>(d2, d2_tl, npx, npy, <code class="constant">2</code>)</a>
<a name="deln_flux_tlmi79"></a>        <a href="null_p.html#tp_core_modi81" target="origFile"><code class="keyword">DO </code>j=js-nt,je+nt+<code class="constant">1</code></a>
          <a href="null_p.html#tp_core_modi80" target="origFile"><code class="keyword">DO </code>i=is-nt,ie+nt</a>
<a name="deln_flux_tlmi79"></a>            <a href="null_p.html#tp_core_modi79" target="origFile">fy2_tl(i, j) = dx(i, j)*rdyc(i, j)*<code class="constant">0.5</code>*(sin_sg(i, j-<code class="constant">1</code>, <code class="constant">4</code>)+<code class="label">&</code></a>
<a href="null_p.html#tp_core_modi79" target="origFile"><code class="label">&             </code>sin_sg(i, j, <code class="constant">2</code>))*(d2_tl(i, j)-d2_tl(i, j-<code class="constant">1</code>))</a>
            <a href="null_p.html#tp_core_modi79" target="origFile">fy2(i, j) = dx(i, j)*(d2(i, j)-d2(i, j-<code class="constant">1</code>))*rdyc(i, j)*<code class="constant">0.5</code>*(<code class="label">&</code></a>
<a href="null_p.html#tp_core_modi79" target="origFile"><code class="label">&             </code>sin_sg(i, j-<code class="constant">1</code>, <code class="constant">4</code>)+sin_sg(i, j, <code class="constant">2</code>))</a>
          <a href="null_p.html#tp_core_modi80" target="origFile"><code class="keyword">END DO</code></a>
        <a href="null_p.html#tp_core_modi81" target="origFile"><code class="keyword">END DO</code></a>
<a name="deln_flux_tlmi83"></a>      <a href="null_p.html#tp_core_modi82" target="origFile"><code class="keyword">END DO</code></a>
    <a href="null_p.html#tp_core_modi69" target="origFile"><code class="keyword">END IF</code></a>
<a href="null_p.html#tp_core_modi83" target="origFile"><code class="comment">!---------------------------------------------</code></a>
<a href="null_p.html#tp_core_modi83" target="origFile"><code class="comment">! Add the diffusive fluxes to the flux arrays:</code></a>
<a name="deln_flux_tlmi84"></a><a href="null_p.html#tp_core_modi83" target="origFile"><code class="comment">!---------------------------------------------</code></a>
    <a href="null_p.html#tp_core_modi83" target="origFile"><code class="keyword">IF</code> (<code class="funcname">PRESENT</code>(mass)) <code class="keyword">THEN</code></a>
<a name="deln_flux_tlmi87"></a><a href="null_p.html#tp_core_modi84" target="origFile"><code class="comment">! Apply mass weighting to diffusive fluxes:</code></a>
<a name="deln_flux_tlmi86"></a>      <a href="null_p.html#tp_core_modi84" target="origFile">damp2 = <code class="constant">0.5</code>*damp</a>
<a name="deln_flux_tlmi85"></a>      <a href="null_p.html#tp_core_modi87" target="origFile"><code class="keyword">DO </code>j=js,je</a>
        <a href="null_p.html#tp_core_modi86" target="origFile"><code class="keyword">DO </code>i=is,ie+<code class="constant">1</code></a>
<a name="deln_flux_tlmi85"></a>          <a href="null_p.html#tp_core_modi85" target="origFile">fx_tl(i, j) = fx_tl(i, j) + damp2*(mass(i-<code class="constant">1</code>, j)+mass(i, j))*<code class="label">&</code></a>
<a href="null_p.html#tp_core_modi85" target="origFile"><code class="label">&           </code>fx2_tl(i, j)</a>
          <a href="null_p.html#tp_core_modi85" target="origFile">fx(i, j) = fx(i, j) + damp2*(mass(i-<code class="constant">1</code>, j)+mass(i, j))*fx2(i, j<code class="label">&</code></a>
<a href="null_p.html#tp_core_modi85" target="origFile"><code class="label">&           </code>)</a>
<a name="deln_flux_tlmi90"></a>        <a href="null_p.html#tp_core_modi86" target="origFile"><code class="keyword">END DO</code></a>
<a name="deln_flux_tlmi89"></a>      <a href="null_p.html#tp_core_modi87" target="origFile"><code class="keyword">END DO</code></a>
<a name="deln_flux_tlmi88"></a>      <a href="null_p.html#tp_core_modi90" target="origFile"><code class="keyword">DO </code>j=js,je+<code class="constant">1</code></a>
        <a href="null_p.html#tp_core_modi89" target="origFile"><code class="keyword">DO </code>i=is,ie</a>
<a name="deln_flux_tlmi88"></a>          <a href="null_p.html#tp_core_modi88" target="origFile">fy_tl(i, j) = fy_tl(i, j) + damp2*(mass(i, j-<code class="constant">1</code>)+mass(i, j))*<code class="label">&</code></a>
<a href="null_p.html#tp_core_modi88" target="origFile"><code class="label">&           </code>fy2_tl(i, j)</a>
          <a href="null_p.html#tp_core_modi88" target="origFile">fy(i, j) = fy(i, j) + damp2*(mass(i, j-<code class="constant">1</code>)+mass(i, j))*fy2(i, j<code class="label">&</code></a>
<a href="null_p.html#tp_core_modi88" target="origFile"><code class="label">&           </code>)</a>
        <a href="null_p.html#tp_core_modi89" target="origFile"><code class="keyword">END DO</code></a>
<a name="deln_flux_tlmi93"></a>      <a href="null_p.html#tp_core_modi90" target="origFile"><code class="keyword">END DO</code></a>
<a name="deln_flux_tlmi92"></a>    <a href="null_p.html#tp_core_modi83" target="origFile"><code class="keyword">ELSE</code></a>
<a name="deln_flux_tlmi91"></a>      <a href="null_p.html#tp_core_modi93" target="origFile"><code class="keyword">DO </code>j=js,je</a>
<a name="deln_flux_tlmi91"></a>        <a href="null_p.html#tp_core_modi92" target="origFile"><code class="keyword">DO </code>i=is,ie+<code class="constant">1</code></a>
          <a href="null_p.html#tp_core_modi91" target="origFile">fx_tl(i, j) = fx_tl(i, j) + fx2_tl(i, j)</a>
          <a href="null_p.html#tp_core_modi91" target="origFile">fx(i, j) = fx(i, j) + fx2(i, j)</a>
<a name="deln_flux_tlmi96"></a>        <a href="null_p.html#tp_core_modi92" target="origFile"><code class="keyword">END DO</code></a>
<a name="deln_flux_tlmi95"></a>      <a href="null_p.html#tp_core_modi93" target="origFile"><code class="keyword">END DO</code></a>
<a name="deln_flux_tlmi94"></a>      <a href="null_p.html#tp_core_modi96" target="origFile"><code class="keyword">DO </code>j=js,je+<code class="constant">1</code></a>
<a name="deln_flux_tlmi94"></a>        <a href="null_p.html#tp_core_modi95" target="origFile"><code class="keyword">DO </code>i=is,ie</a>
          <a href="null_p.html#tp_core_modi94" target="origFile">fy_tl(i, j) = fy_tl(i, j) + fy2_tl(i, j)</a>
          <a href="null_p.html#tp_core_modi94" target="origFile">fy(i, j) = fy(i, j) + fy2(i, j)</a>
        <a href="null_p.html#tp_core_modi95" target="origFile"><code class="keyword">END DO</code></a>
      <a href="null_p.html#tp_core_modi96" target="origFile"><code class="keyword">END DO</code></a>
<a name="copy_corners_r8_tlm"></a>    <a href="null_p.html#tp_core_modi83" target="origFile"><code class="keyword">END IF</code></a>
  <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END SUBROUTINE </code><code class="funcname">DELN_FLUX_TLM</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!  Differentiation of copy_corners_r8 in forward (tangent) mode:</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!   variations   of useful results: q</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!   with respect to varying inputs: q</code></a>
<a name="copy_corners_r8_tlmi0"></a>  <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">SUBROUTINE </code><code class="funcname">COPY_CORNERS_R8_TLM</code>(<code class="vardecl">q</code>, <code class="vardecl">q_tl</code>, <code class="vardecl">npx</code>, <code class="vardecl">npy</code>, <code class="vardecl">dir</code>)</a>
<a name="copy_corners_r8_tlmi1"></a>    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IMPLICIT NONE</code></a>
    <a href="null_p.html#tp_core_modi0" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">npx</code>, <code class="vardecl">npy</code>, <code class="vardecl">dir</code></a>
<a name="copy_corners_r8_tlmi2"></a>    <a href="null_p.html#tp_core_modi1" target="origFile"><code class="typename">REAL(</code><code class="modifier">real8</code><code class="typename">)</code>, <code class="typename">INTENT(INOUT) </code>:: <code class="vardecl">q</code>(<code class="vardecl">isd</code>:<code class="vardecl">ied</code>, <code class="vardecl">jsd</code>:<code class="vardecl">jed</code>)</a>
<a name="copy_corners_r8_tlmi3"></a>    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">real8</code><code class="typename">)</code>, <code class="typename">INTENT(INOUT) </code>:: <code class="vardecl">q_tl</code>(<code class="vardecl">isd</code>:<code class="vardecl">ied</code>, <code class="vardecl">jsd</code>:<code class="vardecl">jed</code>)</a>
<a name="copy_corners_r8_tlmi4"></a>    <a href="null_p.html#tp_core_modi2" target="origFile"><code class="typename">INTEGER </code>:: <code class="vardecl">i</code>, <code class="vardecl">j</code></a>
<a name="p22"></a>    <a href="null_p.html#tp_core_modi3" target="origFile"><code class="keyword">IF</code> (dir .EQ. <code class="constant">1</code>) <code class="keyword">THEN</code></a>
<a name="copy_corners_r8_tlmi7"></a><a href="null_p.html#tp_core_modi4" target="origFile"><code class="comment">! XDir:</code></a>
<a name="copy_corners_r8_tlmi6"></a>      <a href="null_p.html#tp_core_modi4" target="origFile"><code class="keyword">IF</code> (</a><a href="msg.html#p22" target="msg"><code class="comment"><img src="danger.gif" align=middle border=0 alt="!" /></code></a><a href="null_p.html#tp_core_modi4" target="origFile">sw_corner) <code class="keyword">THEN</code></a>
<a name="copy_corners_r8_tlmi5"></a>        <a href="null_p.html#tp_core_modi7" target="origFile"><code class="keyword">DO </code>j=<code class="constant">1</code>-ng,<code class="constant">0</code></a>
<a name="copy_corners_r8_tlmi5"></a>          <a href="null_p.html#tp_core_modi6" target="origFile"><code class="keyword">DO </code>i=<code class="constant">1</code>-ng,<code class="constant">0</code></a>
            <a href="null_p.html#tp_core_modi5" target="origFile">q_tl(i, j) = q_tl(j, <code class="constant">1</code>-i)</a>
            <a href="null_p.html#tp_core_modi5" target="origFile">q(i, j) = q(j, <code class="constant">1</code>-i)</a>
          <a href="null_p.html#tp_core_modi6" target="origFile"><code class="keyword">END DO</code></a>
<a name="p23"></a><a name="copy_corners_r8_tlmi8"></a>        <a href="null_p.html#tp_core_modi7" target="origFile"><code class="keyword">END DO</code></a>
<a name="copy_corners_r8_tlmi11"></a>      <a href="null_p.html#tp_core_modi4" target="origFile"><code class="keyword">END IF</code></a>
<a name="copy_corners_r8_tlmi10"></a>      <a href="null_p.html#tp_core_modi8" target="origFile"><code class="keyword">IF</code> (</a><a href="msg.html#p23" target="msg"><code class="comment"><img src="danger.gif" align=middle border=0 alt="!" /></code></a><a href="null_p.html#tp_core_modi8" target="origFile">se_corner) <code class="keyword">THEN</code></a>
<a name="copy_corners_r8_tlmi9"></a>        <a href="null_p.html#tp_core_modi11" target="origFile"><code class="keyword">DO </code>j=<code class="constant">1</code>-ng,<code class="constant">0</code></a>
<a name="copy_corners_r8_tlmi9"></a>          <a href="null_p.html#tp_core_modi10" target="origFile"><code class="keyword">DO </code>i=npx,npx+ng-<code class="constant">1</code></a>
            <a href="null_p.html#tp_core_modi9" target="origFile">q_tl(i, j) = q_tl(npy-j, i-npx+<code class="constant">1</code>)</a>
            <a href="null_p.html#tp_core_modi9" target="origFile">q(i, j) = q(npy-j, i-npx+<code class="constant">1</code>)</a>
          <a href="null_p.html#tp_core_modi10" target="origFile"><code class="keyword">END DO</code></a>
<a name="p24"></a><a name="copy_corners_r8_tlmi12"></a>        <a href="null_p.html#tp_core_modi11" target="origFile"><code class="keyword">END DO</code></a>
<a name="copy_corners_r8_tlmi15"></a>      <a href="null_p.html#tp_core_modi8" target="origFile"><code class="keyword">END IF</code></a>
<a name="copy_corners_r8_tlmi14"></a>      <a href="null_p.html#tp_core_modi12" target="origFile"><code class="keyword">IF</code> (</a><a href="msg.html#p24" target="msg"><code class="comment"><img src="danger.gif" align=middle border=0 alt="!" /></code></a><a href="null_p.html#tp_core_modi12" target="origFile">ne_corner) <code class="keyword">THEN</code></a>
<a name="copy_corners_r8_tlmi13"></a>        <a href="null_p.html#tp_core_modi15" target="origFile"><code class="keyword">DO </code>j=npy,npy+ng-<code class="constant">1</code></a>
<a name="copy_corners_r8_tlmi13"></a>          <a href="null_p.html#tp_core_modi14" target="origFile"><code class="keyword">DO </code>i=npx,npx+ng-<code class="constant">1</code></a>
            <a href="null_p.html#tp_core_modi13" target="origFile">q_tl(i, j) = q_tl(j, <code class="constant">2</code>*npx-<code class="constant">1</code>-i)</a>
            <a href="null_p.html#tp_core_modi13" target="origFile">q(i, j) = q(j, <code class="constant">2</code>*npx-<code class="constant">1</code>-i)</a>
          <a href="null_p.html#tp_core_modi14" target="origFile"><code class="keyword">END DO</code></a>
<a name="p25"></a><a name="copy_corners_r8_tlmi16"></a>        <a href="null_p.html#tp_core_modi15" target="origFile"><code class="keyword">END DO</code></a>
<a name="copy_corners_r8_tlmi19"></a>      <a href="null_p.html#tp_core_modi12" target="origFile"><code class="keyword">END IF</code></a>
<a name="copy_corners_r8_tlmi18"></a>      <a href="null_p.html#tp_core_modi16" target="origFile"><code class="keyword">IF</code> (</a><a href="msg.html#p25" target="msg"><code class="comment"><img src="danger.gif" align=middle border=0 alt="!" /></code></a><a href="null_p.html#tp_core_modi16" target="origFile">nw_corner) <code class="keyword">THEN</code></a>
<a name="copy_corners_r8_tlmi17"></a>        <a href="null_p.html#tp_core_modi19" target="origFile"><code class="keyword">DO </code>j=npy,npy+ng-<code class="constant">1</code></a>
<a name="copy_corners_r8_tlmi17"></a>          <a href="null_p.html#tp_core_modi18" target="origFile"><code class="keyword">DO </code>i=<code class="constant">1</code>-ng,<code class="constant">0</code></a>
            <a href="null_p.html#tp_core_modi17" target="origFile">q_tl(i, j) = q_tl(npy-j, i-<code class="constant">1</code>+npx)</a>
            <a href="null_p.html#tp_core_modi17" target="origFile">q(i, j) = q(npy-j, i-<code class="constant">1</code>+npx)</a>
          <a href="null_p.html#tp_core_modi18" target="origFile"><code class="keyword">END DO</code></a>
<a name="copy_corners_r8_tlmi20"></a>        <a href="null_p.html#tp_core_modi19" target="origFile"><code class="keyword">END DO</code></a>
<a name="copy_corners_r8_tlmi21"></a>      <a href="null_p.html#tp_core_modi16" target="origFile"><code class="keyword">END IF</code></a>
<a name="p26"></a>    <a href="null_p.html#tp_core_modi3" target="origFile"><code class="keyword">ELSE </code></a><a href="null_p.html#tp_core_modi20" target="origFile"><code class="keyword">IF</code> (dir .EQ. <code class="constant">2</code>) <code class="keyword">THEN</code></a>
<a name="copy_corners_r8_tlmi24"></a><a href="null_p.html#tp_core_modi21" target="origFile"><code class="comment">! YDir:</code></a>
<a name="copy_corners_r8_tlmi23"></a>      <a href="null_p.html#tp_core_modi21" target="origFile"><code class="keyword">IF</code> (</a><a href="msg.html#p26" target="msg"><code class="comment"><img src="danger.gif" align=middle border=0 alt="!" /></code></a><a href="null_p.html#tp_core_modi21" target="origFile">sw_corner) <code class="keyword">THEN</code></a>
<a name="copy_corners_r8_tlmi22"></a>        <a href="null_p.html#tp_core_modi24" target="origFile"><code class="keyword">DO </code>j=<code class="constant">1</code>-ng,<code class="constant">0</code></a>
<a name="copy_corners_r8_tlmi22"></a>          <a href="null_p.html#tp_core_modi23" target="origFile"><code class="keyword">DO </code>i=<code class="constant">1</code>-ng,<code class="constant">0</code></a>
            <a href="null_p.html#tp_core_modi22" target="origFile">q_tl(i, j) = q_tl(<code class="constant">1</code>-j, i)</a>
            <a href="null_p.html#tp_core_modi22" target="origFile">q(i, j) = q(<code class="constant">1</code>-j, i)</a>
          <a href="null_p.html#tp_core_modi23" target="origFile"><code class="keyword">END DO</code></a>
<a name="p27"></a><a name="copy_corners_r8_tlmi25"></a>        <a href="null_p.html#tp_core_modi24" target="origFile"><code class="keyword">END DO</code></a>
<a name="copy_corners_r8_tlmi28"></a>      <a href="null_p.html#tp_core_modi21" target="origFile"><code class="keyword">END IF</code></a>
<a name="copy_corners_r8_tlmi27"></a>      <a href="null_p.html#tp_core_modi25" target="origFile"><code class="keyword">IF</code> (</a><a href="msg.html#p27" target="msg"><code class="comment"><img src="danger.gif" align=middle border=0 alt="!" /></code></a><a href="null_p.html#tp_core_modi25" target="origFile">se_corner) <code class="keyword">THEN</code></a>
<a name="copy_corners_r8_tlmi26"></a>        <a href="null_p.html#tp_core_modi28" target="origFile"><code class="keyword">DO </code>j=<code class="constant">1</code>-ng,<code class="constant">0</code></a>
<a name="copy_corners_r8_tlmi26"></a>          <a href="null_p.html#tp_core_modi27" target="origFile"><code class="keyword">DO </code>i=npx,npx+ng-<code class="constant">1</code></a>
            <a href="null_p.html#tp_core_modi26" target="origFile">q_tl(i, j) = q_tl(npy+j-<code class="constant">1</code>, npx-i)</a>
            <a href="null_p.html#tp_core_modi26" target="origFile">q(i, j) = q(npy+j-<code class="constant">1</code>, npx-i)</a>
          <a href="null_p.html#tp_core_modi27" target="origFile"><code class="keyword">END DO</code></a>
<a name="p28"></a><a name="copy_corners_r8_tlmi29"></a>        <a href="null_p.html#tp_core_modi28" target="origFile"><code class="keyword">END DO</code></a>
<a name="copy_corners_r8_tlmi32"></a>      <a href="null_p.html#tp_core_modi25" target="origFile"><code class="keyword">END IF</code></a>
<a name="copy_corners_r8_tlmi31"></a>      <a href="null_p.html#tp_core_modi29" target="origFile"><code class="keyword">IF</code> (</a><a href="msg.html#p28" target="msg"><code class="comment"><img src="danger.gif" align=middle border=0 alt="!" /></code></a><a href="null_p.html#tp_core_modi29" target="origFile">ne_corner) <code class="keyword">THEN</code></a>
<a name="copy_corners_r8_tlmi30"></a>        <a href="null_p.html#tp_core_modi32" target="origFile"><code class="keyword">DO </code>j=npy,npy+ng-<code class="constant">1</code></a>
<a name="copy_corners_r8_tlmi30"></a>          <a href="null_p.html#tp_core_modi31" target="origFile"><code class="keyword">DO </code>i=npx,npx+ng-<code class="constant">1</code></a>
            <a href="null_p.html#tp_core_modi30" target="origFile">q_tl(i, j) = q_tl(<code class="constant">2</code>*npy-<code class="constant">1</code>-j, i)</a>
            <a href="null_p.html#tp_core_modi30" target="origFile">q(i, j) = q(<code class="constant">2</code>*npy-<code class="constant">1</code>-j, i)</a>
          <a href="null_p.html#tp_core_modi31" target="origFile"><code class="keyword">END DO</code></a>
<a name="p29"></a><a name="copy_corners_r8_tlmi33"></a>        <a href="null_p.html#tp_core_modi32" target="origFile"><code class="keyword">END DO</code></a>
<a name="copy_corners_r8_tlmi36"></a>      <a href="null_p.html#tp_core_modi29" target="origFile"><code class="keyword">END IF</code></a>
<a name="copy_corners_r8_tlmi35"></a>      <a href="null_p.html#tp_core_modi33" target="origFile"><code class="keyword">IF</code> (</a><a href="msg.html#p29" target="msg"><code class="comment"><img src="danger.gif" align=middle border=0 alt="!" /></code></a><a href="null_p.html#tp_core_modi33" target="origFile">nw_corner) <code class="keyword">THEN</code></a>
<a name="copy_corners_r8_tlmi34"></a>        <a href="null_p.html#tp_core_modi36" target="origFile"><code class="keyword">DO </code>j=npy,npy+ng-<code class="constant">1</code></a>
<a name="copy_corners_r8_tlmi34"></a>          <a href="null_p.html#tp_core_modi35" target="origFile"><code class="keyword">DO </code>i=<code class="constant">1</code>-ng,<code class="constant">0</code></a>
            <a href="null_p.html#tp_core_modi34" target="origFile">q_tl(i, j) = q_tl(j+<code class="constant">1</code>-npx, npy-i)</a>
            <a href="null_p.html#tp_core_modi34" target="origFile">q(i, j) = q(j+<code class="constant">1</code>-npx, npy-i)</a>
          <a href="null_p.html#tp_core_modi35" target="origFile"><code class="keyword">END DO</code></a>
        <a href="null_p.html#tp_core_modi36" target="origFile"><code class="keyword">END DO</code></a>
      <a href="null_p.html#tp_core_modi33" target="origFile"><code class="keyword">END IF</code></a>
<a name="deln_flux"></a>    <a href="null_p.html#tp_core_modi3" target="origFile"><code class="keyword">END IF</code></a>
  <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END SUBROUTINE </code><code class="funcname">COPY_CORNERS_R8_TLM</code></a>
  <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">SUBROUTINE </code><code class="funcname">DELN_FLUX</code>(<code class="vardecl">nord</code>, <code class="vardecl">npx</code>, <code class="vardecl">npy</code>, <code class="vardecl">damp</code>, <code class="vardecl">q</code>, <code class="vardecl">fx</code>, <code class="vardecl">fy</code>, <code class="vardecl">mass</code>)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IMPLICIT NONE</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! Del-n damping for the cell-mean values (A grid)</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!------------------</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! nord = 0:   del-2</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! nord = 1:   del-4</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! nord = 2:   del-6</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! nord = 3:   del-8 --&gt; requires more ghosting than current</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!------------------</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! del-n</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">nord</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">npx</code>, <code class="vardecl">npy</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">damp</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! q ghosted on input</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">q</code>(<code class="vardecl">is</code>-<code class="vardecl">ng</code>:<code class="vardecl">ie</code>+<code class="vardecl">ng</code>, <code class="vardecl">js</code>-<code class="vardecl">ng</code>:<code class="vardecl">je</code>+<code class="vardecl">ng</code>)</a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! q ghosted on input</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">OPTIONAL</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">mass</code>(<code class="vardecl">isd</code>:<code class="vardecl">ied</code>, <code class="vardecl">jsd</code>:<code class="vardecl">jed</code>)</a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! diffusive fluxes:</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">)</code>, <code class="typename">INTENT(INOUT) </code>:: <code class="vardecl">fx</code>(<code class="vardecl">is</code>:<code class="vardecl">ie</code>+<code class="constant">1</code>, <code class="vardecl">js</code>:<code class="vardecl">je</code>), <code class="vardecl">fy</code>(<code class="vardecl">is</code>:<code class="vardecl">ie</code>, <code class="vardecl">js</code>:<code class="vardecl">je</code>+<code class="constant">1</code>)</a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! local:</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">fx2</code>(<code class="vardecl">isd</code>:<code class="vardecl">ied</code>+<code class="constant">1</code>, <code class="vardecl">jsd</code>:<code class="vardecl">jed</code>), <code class="vardecl">fy2</code>(<code class="vardecl">isd</code>:<code class="vardecl">ied</code>, <code class="vardecl">jsd</code>:<code class="vardecl">jed</code>+<code class="constant">1</code>)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">d2</code>(<code class="vardecl">isd</code>:<code class="vardecl">ied</code>, <code class="vardecl">jsd</code>:<code class="vardecl">jed</code>)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">fvprc</code><code class="typename">) </code>:: <code class="vardecl">damp2</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">INTEGER </code>:: <code class="vardecl">i</code>, <code class="vardecl">j</code>, <code class="vardecl">n</code>, <code class="vardecl">nt</code>, <code class="vardecl">i1</code>, <code class="vardecl">i2</code>, <code class="vardecl">j1</code>, <code class="vardecl">j2</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">INTRINSIC </code><code class="funcname">PRESENT</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile">i1 = is - <code class="constant">1 </code>- nord</a>
    <a href="null_p.html#tp_core_mod" target="origFile">i2 = ie + <code class="constant">1 </code>+ nord</a>
    <a href="null_p.html#tp_core_mod" target="origFile">j1 = js - <code class="constant">1 </code>- nord</a>
    <a href="null_p.html#tp_core_mod" target="origFile">j2 = je + <code class="constant">1 </code>+ nord</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IF</code> (.NOT.<code class="funcname">PRESENT</code>(mass)) <code class="keyword">THEN</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>j=j1,j2</a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>i=i1,i2</a>
          <a href="null_p.html#tp_core_mod" target="origFile">d2(i, j) = damp*q(i, j)</a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">ELSE</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>j=j1,j2</a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>i=i1,i2</a>
          <a href="null_p.html#tp_core_mod" target="origFile">d2(i, j) = q(i, j)</a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END IF</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IF</code> (nord .GT. <code class="constant">0</code>) <code class="keyword">CALL </code><code class="funcname">COPY_CORNERS</code>(d2, npx, npy, <code class="constant">1</code>)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>j=js-nord,je+nord</a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>i=is-nord,ie+nord+<code class="constant">1</code></a>
        <a href="null_p.html#tp_core_mod" target="origFile">fx2(i, j) = <code class="constant">0.5</code>*(sin_sg(i-<code class="constant">1</code>, j, <code class="constant">3</code>)+sin_sg(i, j, <code class="constant">1</code>))*dy(i, j)*(d2<code class="label">&</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="label">&         </code>(i-<code class="constant">1</code>, j)-d2(i, j))*rdxc(i, j)</a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IF</code> (nord .GT. <code class="constant">0</code>) <code class="keyword">CALL </code><code class="funcname">COPY_CORNERS</code>(d2, npx, npy, <code class="constant">2</code>)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>j=js-nord,je+nord+<code class="constant">1</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>i=is-nord,ie+nord</a>
        <a href="null_p.html#tp_core_mod" target="origFile">fy2(i, j) = <code class="constant">0.5</code>*(sin_sg(i, j-<code class="constant">1</code>, <code class="constant">4</code>)+sin_sg(i, j, <code class="constant">2</code>))*dx(i, j)*(d2<code class="label">&</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="label">&         </code>(i, j-<code class="constant">1</code>)-d2(i, j))*rdyc(i, j)</a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IF</code> (nord .GT. <code class="constant">0</code>) <code class="keyword">THEN</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!----------</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! high-order</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!----------</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>n=<code class="constant">1</code>,nord</a>
        <a href="null_p.html#tp_core_mod" target="origFile">nt = nord - n</a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>j=js-nt-<code class="constant">1</code>,je+nt+<code class="constant">1</code></a>
          <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>i=is-nt-<code class="constant">1</code>,ie+nt+<code class="constant">1</code></a>
            <a href="null_p.html#tp_core_mod" target="origFile">d2(i, j) = (fx2(i, j)-fx2(i+<code class="constant">1</code>, j)+fy2(i, j)-fy2(i, j+<code class="constant">1</code>))*<code class="label">&</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="label">&             </code>rarea(i, j)</a>
          <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">CALL </code><code class="funcname">COPY_CORNERS</code>(d2, npx, npy, <code class="constant">1</code>)</a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>j=js-nt,je+nt</a>
          <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>i=is-nt,ie+nt+<code class="constant">1</code></a>
            <a href="null_p.html#tp_core_mod" target="origFile">fx2(i, j) = <code class="constant">0.5</code>*(sin_sg(i-<code class="constant">1</code>, j, <code class="constant">3</code>)+sin_sg(i, j, <code class="constant">1</code>))*dy(i, j)<code class="label">&</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="label">&             </code>*(d2(i, j)-d2(i-<code class="constant">1</code>, j))*rdxc(i, j)</a>
          <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">CALL </code><code class="funcname">COPY_CORNERS</code>(d2, npx, npy, <code class="constant">2</code>)</a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>j=js-nt,je+nt+<code class="constant">1</code></a>
          <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>i=is-nt,ie+nt</a>
            <a href="null_p.html#tp_core_mod" target="origFile">fy2(i, j) = dx(i, j)*(d2(i, j)-d2(i, j-<code class="constant">1</code>))*rdyc(i, j)*<code class="constant">0.5</code>*(<code class="label">&</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="label">&             </code>sin_sg(i, j-<code class="constant">1</code>, <code class="constant">4</code>)+sin_sg(i, j, <code class="constant">2</code>))</a>
          <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END IF</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!---------------------------------------------</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! Add the diffusive fluxes to the flux arrays:</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">!---------------------------------------------</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IF</code> (<code class="funcname">PRESENT</code>(mass)) <code class="keyword">THEN</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! Apply mass weighting to diffusive fluxes:</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile">damp2 = <code class="constant">0.5</code>*damp</a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>j=js,je</a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>i=is,ie+<code class="constant">1</code></a>
          <a href="null_p.html#tp_core_mod" target="origFile">fx(i, j) = fx(i, j) + damp2*(mass(i-<code class="constant">1</code>, j)+mass(i, j))*fx2(i, j<code class="label">&</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="label">&           </code>)</a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>j=js,je+<code class="constant">1</code></a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>i=is,ie</a>
          <a href="null_p.html#tp_core_mod" target="origFile">fy(i, j) = fy(i, j) + damp2*(mass(i, j-<code class="constant">1</code>)+mass(i, j))*fy2(i, j<code class="label">&</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="label">&           </code>)</a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">ELSE</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>j=js,je</a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>i=is,ie+<code class="constant">1</code></a>
          <a href="null_p.html#tp_core_mod" target="origFile">fx(i, j) = fx(i, j) + fx2(i, j)</a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>j=js,je+<code class="constant">1</code></a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>i=is,ie</a>
          <a href="null_p.html#tp_core_mod" target="origFile">fy(i, j) = fy(i, j) + fy2(i, j)</a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
<a name="copy_corners_r8"></a>    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END IF</code></a>
  <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END SUBROUTINE </code><code class="funcname">DELN_FLUX</code></a>
  <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">SUBROUTINE </code><code class="funcname">COPY_CORNERS_R8</code>(<code class="vardecl">q</code>, <code class="vardecl">npx</code>, <code class="vardecl">npy</code>, <code class="vardecl">dir</code>)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IMPLICIT NONE</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">npx</code>, <code class="vardecl">npy</code>, <code class="vardecl">dir</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">REAL(</code><code class="modifier">real8</code><code class="typename">)</code>, <code class="typename">INTENT(INOUT) </code>:: <code class="vardecl">q</code>(<code class="vardecl">isd</code>:<code class="vardecl">ied</code>, <code class="vardecl">jsd</code>:<code class="vardecl">jed</code>)</a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="typename">INTEGER </code>:: <code class="vardecl">i</code>, <code class="vardecl">j</code></a>
<a name="p22"></a>    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IF</code> (dir .EQ. <code class="constant">1</code>) <code class="keyword">THEN</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! XDir:</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IF</code> (</a><a href="msg.html#p22" target="msg"><code class="comment"><img src="danger.gif" align=middle border=0 alt="!" /></code></a><a href="null_p.html#tp_core_mod" target="origFile">sw_corner) <code class="keyword">THEN</code></a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>j=<code class="constant">1</code>-ng,<code class="constant">0</code></a>
          <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>i=<code class="constant">1</code>-ng,<code class="constant">0</code></a>
            <a href="null_p.html#tp_core_mod" target="origFile">q(i, j) = q(j, <code class="constant">1</code>-i)</a>
          <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
<a name="p23"></a>        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END IF</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IF</code> (</a><a href="msg.html#p23" target="msg"><code class="comment"><img src="danger.gif" align=middle border=0 alt="!" /></code></a><a href="null_p.html#tp_core_mod" target="origFile">se_corner) <code class="keyword">THEN</code></a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>j=<code class="constant">1</code>-ng,<code class="constant">0</code></a>
          <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>i=npx,npx+ng-<code class="constant">1</code></a>
            <a href="null_p.html#tp_core_mod" target="origFile">q(i, j) = q(npy-j, i-npx+<code class="constant">1</code>)</a>
          <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
<a name="p24"></a>        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END IF</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IF</code> (</a><a href="msg.html#p24" target="msg"><code class="comment"><img src="danger.gif" align=middle border=0 alt="!" /></code></a><a href="null_p.html#tp_core_mod" target="origFile">ne_corner) <code class="keyword">THEN</code></a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>j=npy,npy+ng-<code class="constant">1</code></a>
          <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>i=npx,npx+ng-<code class="constant">1</code></a>
            <a href="null_p.html#tp_core_mod" target="origFile">q(i, j) = q(j, <code class="constant">2</code>*npx-<code class="constant">1</code>-i)</a>
          <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
<a name="p25"></a>        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END IF</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IF</code> (</a><a href="msg.html#p25" target="msg"><code class="comment"><img src="danger.gif" align=middle border=0 alt="!" /></code></a><a href="null_p.html#tp_core_mod" target="origFile">nw_corner) <code class="keyword">THEN</code></a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>j=npy,npy+ng-<code class="constant">1</code></a>
          <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>i=<code class="constant">1</code>-ng,<code class="constant">0</code></a>
            <a href="null_p.html#tp_core_mod" target="origFile">q(i, j) = q(npy-j, i-<code class="constant">1</code>+npx)</a>
          <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END IF</code></a>
<a name="p26"></a>    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">ELSE IF</code> (dir .EQ. <code class="constant">2</code>) <code class="keyword">THEN</code></a>
<a href="null_p.html#tp_core_mod" target="origFile"><code class="comment">! YDir:</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IF</code> (</a><a href="msg.html#p26" target="msg"><code class="comment"><img src="danger.gif" align=middle border=0 alt="!" /></code></a><a href="null_p.html#tp_core_mod" target="origFile">sw_corner) <code class="keyword">THEN</code></a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>j=<code class="constant">1</code>-ng,<code class="constant">0</code></a>
          <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>i=<code class="constant">1</code>-ng,<code class="constant">0</code></a>
            <a href="null_p.html#tp_core_mod" target="origFile">q(i, j) = q(<code class="constant">1</code>-j, i)</a>
          <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
<a name="p27"></a>        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END IF</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IF</code> (</a><a href="msg.html#p27" target="msg"><code class="comment"><img src="danger.gif" align=middle border=0 alt="!" /></code></a><a href="null_p.html#tp_core_mod" target="origFile">se_corner) <code class="keyword">THEN</code></a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>j=<code class="constant">1</code>-ng,<code class="constant">0</code></a>
          <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>i=npx,npx+ng-<code class="constant">1</code></a>
            <a href="null_p.html#tp_core_mod" target="origFile">q(i, j) = q(npy+j-<code class="constant">1</code>, npx-i)</a>
          <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
<a name="p28"></a>        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END IF</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IF</code> (</a><a href="msg.html#p28" target="msg"><code class="comment"><img src="danger.gif" align=middle border=0 alt="!" /></code></a><a href="null_p.html#tp_core_mod" target="origFile">ne_corner) <code class="keyword">THEN</code></a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>j=npy,npy+ng-<code class="constant">1</code></a>
          <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>i=npx,npx+ng-<code class="constant">1</code></a>
            <a href="null_p.html#tp_core_mod" target="origFile">q(i, j) = q(<code class="constant">2</code>*npy-<code class="constant">1</code>-j, i)</a>
          <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
<a name="p29"></a>        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END IF</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">IF</code> (</a><a href="msg.html#p29" target="msg"><code class="comment"><img src="danger.gif" align=middle border=0 alt="!" /></code></a><a href="null_p.html#tp_core_mod" target="origFile">nw_corner) <code class="keyword">THEN</code></a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>j=npy,npy+ng-<code class="constant">1</code></a>
          <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">DO </code>i=<code class="constant">1</code>-ng,<code class="constant">0</code></a>
            <a href="null_p.html#tp_core_mod" target="origFile">q(i, j) = q(j+<code class="constant">1</code>-npx, npy-i)</a>
          <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
        <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END DO</code></a>
      <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END IF</code></a>
    <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END IF</code></a>
  <a href="null_p.html#tp_core_mod" target="origFile"><code class="keyword">END SUBROUTINE </code><code class="funcname">COPY_CORNERS_R8</code></a>
<code class="keyword">END MODULE </code><code class="funcname">TP_CORE_MOD_D</code>
</pre>
</body>
